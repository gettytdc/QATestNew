<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <title>例外</title>
</head>

<body>
    <div class="header">
        <h1 class="pagetitle">ヘルプ</h1>
    </div>
	
	<div class="Highlighted">
		<p>
 この機能はバージョンの制限を受けます。詳細については、<a href="helpVersion.htm">バージョンのページ</a>を参照してください。
		</p>
	</div>

    <h3>例外</h3>
	<p>さまざまな理由でプロセスの実行中に例外が発生します。たとえば、次のような例外が考えられます。</p>

	<ul>
	<li>プロセス自体の誤り（例：無効な式が計算に入力された）</li>
    <li>要素が一致しない（例：存在しないボタンを「押下」しようとしている）</li>
    <li>データに問題がある（例：どのように機能するかが分からないアカウントタイプ）</li>
	</ul>

	<p>通常、例外が発生すると、プロセスが停止し、コントロールルームでそのステータスが「中止」と表示されます。
 場合により、例外が発生したときにプロセスが停止するのは望ましくありません。特定の状況では、例外を処理して処理を続けることができます。たとえば、ロック済みであるために特定のケースを処理できないと顧客システムから通知された場合、結果として発生する例外をトラップし、後で処理するようにそのケースにマークを付けることができます。これによりプロセスは後続のケースの実行と処理を継続できます。</p>
	
	<h3>処理の階層</h3>
	<p>最も重要な例外処理の概念には、その処理に階層的な性質があります。例外が発生すると、次のことが起こります。</p>

	<ul>
	<li>現在のステージが<a href="#Blocks">ブロック</a>内にあり、そのブロックにリカバリーステージを含む場合、コントロールはそこに移動します。</li>
	<li>それ以外の場合、現在のページに（ブロックの外側で）リカバリーステージが含まれていると、コントロールはそこに移動します。</li>
	<li>このページが別のページから呼び出された場合（ページ参照、アクション、サブプロセス呼び出しなどとして）、元の呼び出しを行ったステージで例外が発生し、上のルールがもう一度適用されます。</li>
	<li>最終的に例外が上のいずれによっても処理されない場合、例外が元の親プロセスのメインページにあるステージで必ず発生します。リカバリーステージはありません。この時点で、プロセス自体は例外状態で停止し、プロセスのステータスは［中止］としてマークされます。</li>
	</ul>

	<p>リカバリー中に新しい例外が発生した場合、上のプロセスは階層の1つ上のレベルから再開します。</p>
	
	<h3>例外ステージ</h3>
	<p>例外ステージは、プロセスフロー中の任意の時点で例外を発生させるために使用されます。この方法で意図的に発生した例外は、処理中に発生する可能性がある通常の例外と同じように動作します。</p>
	
	<p>例外ステージには、次の詳細が関連付けられています。</p>

	<ul>
	<li>例外タイプ - 例外のカテゴリーを説明するユーザー定義のラベルです。ユーザーは「データ例外」や「タイムアウト例外」などの独自のカテゴリーを作成できます。
 Blue Prism製品は、すべてのプロセスおよびビジネスオブジェクトで作成されたすべての例外タイプを自動的にまとめて記憶します。これは、同じタイプがすべてのプロセス/オブジェクト全体にわたって一貫した方法で再利用できることを意味します。</li>
	<li>例外の詳細 - 例外に関連する詳細を含む式です。</li>
	</ul>

	<h3>回復ステージ</h3>
	<p><a href="frmStagePropertiesRecover.htm">回復ステージ</a>は、例外から回復する手段です。ページで例外が発生し、そのページに回復ステージが含まれている場合、プロセスフローはそこで続行されます。プロセスフローが回復ステージに転送されると、プロセスはリカバリーモードになり、再開ステージになるまで、またはさらに例外が発生するまでリカバリーモードのままです。リカバリーモードにある間に別の例外が発生した場合、その例外は同じリカバリーステージでキャッチされるのではなく、代わりに次のレベルに「バブルアップ」します。</p> 
	
	<h3>再開ステージ</h3>
	<p>再開ステージはリカバリーが終了したことを示すために使用され、通常の処理は継続しています。通常、回復ステージの後には、（例外のタイプに応じて）さまざまなタイプのクリーンアップにつながる決定／選択ステージがいくつか続きます。その後、これらのステージをメインフローにリンクして戻せます。これは再開ステージを介して実行する必要があります。再開ステージがない場合、発生したそれ以上の例外は同じ回復ステージでは処理されませんが、実行中の例外処理がないかのように次のレベルにバブルアップします。再開ステージを通過すると、通常の例外処理が再度行われます。</p>
	
	<h3>ブロック<a name="Blocks" id="Blocks"/></h3>
	
	<p>ブロックは、その中に完全に収まるすべてのステージをグループ化した矩形の領域です。
 ブロックには、そのブロック内で発生した例外を処理する独自の回復ステージを含めることができます。</p>
	
	<p>視覚的には、ブロックは矩形として表示され、内部領域は影付きで表示されます。ブロックの左上隅のラベルにも名前があります。これは、ブロックのプロパティフォームで利用可能な唯一のフィールドです。</p>

	<p>ツールバーからブロックを選択すると、マウスを使って必要なサイズにドラッグして新しいブロックを作成できます。ブロックは、四隅のいずれかをドラッグしてサイズ変更できます。オーバーラップはブロックのエラーです。オーバーラップするブロックがある場合、それらは［<a href="frmValidateResults.htm">プロセス検証</a>］に表示されます。</p>

	<h3>例外関数</h3>
	<p>式エディターの関数ツリービューには、ExceptionText（）、ExceptionDetail（）、ExceptionStage（）という3つの例外関数を含む、例外と呼ばれる追加の分岐が含まれます。これらの関数は、プロセスがリカバリーモードにあるときに計算または決定から使用できます。</p>

	<p>さらに、3番目のアイテム「Types」が存在します。これは展開可能で、以前に使用済みのすべての例外タイプを含みます。ツリービューからこれらのアイテムをドラッグすると、文字列定数、たとえば「UserNameTooLong」が式ビューに貼り付けられます。</p>
	
	<h3>例外メッセージダイアログ</h3>
	<p>通常デバッグ中にポップアップ表示される例外メッセージダイアログは、例外がリカバリーステージによって処理される場合は表示されません。代わりに、プロセスフローはリカバリーステージにジャンプします。さらに、ダイアログでポップアップしていたメッセージが、プロセススタジオのステータスバーの上に表示されるようになります。</p>
	
	<h3>ログ履歴ビューアー</h3>
	<p>ログ履歴ビューアーには、ステータスバーの右側にあるボタンをクリックしてアクセスできます。このボタンをクリックすると、ログ出力の最後の10行を表示するテキストボックスがポップアップ表示されます。これは、何が例外の原因となったか、またはサブページで例外が発生したときにどこで例外が発生したかを特定する必要がある場合に役立ちます。</p>
</body>
</html>
