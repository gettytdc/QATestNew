<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>Blue Prism 集合</title>
</head>

<body>
	<div class="header">
		<h1 class="pagetitle">帮助</h1>
	</div>

	<h2>集合—概述</h2>

	<p>集合由一组数据项组成。通常，集合会用于通过单个事务从业务对象中获取大量不同信息。在完成填充后，可以通过<a href="frmStagePropertiesLoopStart.htm">循环环节</a>依次访问集合中的各项信息。</p>

	<p>为了方便理解，您可以将集合中的内容想象成一个包含行和列的表格。其中列对应的时各个<em class="buzzword">字段</em>。字段的名称由用户来指定，也可以在对应的业务对象中进行定义。</p>
	
	<p>您可以通过采用“点”语法（即，在集合名称后面加上一个点，然后再加上字段名称）的表达式来访问这些字段：<i>例如，</i>对于名为“Person”的环节所定义的集合中的“名称”字段，您可以在<a href="frmStagePropertiesCalculation.htm">计算环节</a>或<a href="frmStagePropertiesDecision.htm">决策环节</a>中使用以下所示内容来访问这个字段：<code>[Person.Name]</code>。</p>
	
	<p>字段名称中不能包含方括号或点，以确保所引用集合的结构不会与所用的名称发生冲突。</p>

	<h3>已定义与未定义</h3>
	<p>如果已在<a href="helpDataTypes.htm">集合环节属性</a>表单中显式定义了字段的名称和<a href="frmStagePropertiesCollection.htm">数据类型</a>，集合就会被视为<em class="buzzword">已定义</em>。这个字段定义可能会由用户来提供，也可能已由使用集合的业务对象的设计者预先进行定义。</p>
	
	<p>同样地，如果字段未在属性表单中定义过，集合就会被视为<em class="buzzword">未定义</em>。
 在与包含结构可变数据的系统进行交互时，常会出现这种情况。例如，在获取电子表格中所含的数据（以表格形式提供）时—如果对电子表格中的表格列一无所知，则无法提前在集合的列（或<em class="buzzword">字段</em>）中附上相应的标签或数据类型。集合中的字段只有在运行时可供使用。</p>
	
	<h3 id="nested">嵌套式集合</h3>
	
	<p>一个集合可以自包含多个集合。同样地，这些集合可以在集合环节中进行<em class="buzzword">定义</em>，或者先<em class="buzzword">不定义</em>直至完成数据填充。
	</p>
	
	<p>您可以使用更高级别的“点”语法（参见上文）来引用嵌套式集合。<i>例如，</i>如果名为“Person”的环节有一个名为“Qualifications”的集合，该集合包含三个字段（“类型”、“名称”和“级别”），则您可以通过以下所示内容来访问这些字段：<code>[Person.Qualifications.Type]</code>、<code>[Person.Qualifications.Name]</code> 和 <code>[Person.Qualifications.Grade]</code>。</p>
	
	<p>同样地，<a href="frmStagePropertiesLoopStage.htm">循环开始</a>环节可以按照相同的语法直接循环使用嵌套式集合。所以，为了循环使用以上示例中的环节“Person”的集合“Qualifications”，您需要在循环开始环节中将集合设置为 <code>Person.Qualifications</code>。通常，这仅在迭代使用 <code>Person</code> 集合的循环环节内有效。
	</p>
	
	<p>但请注意，内部集合业务对象不支持嵌套式集合—必须先将嵌套式集合移到集合环节中，然后再在内部操作中引用这些集合。</p>

	<h3>当前行</h3>
	<p>必须通过循环环节来访问集合中的行。循环环节会按照顺序逐行自动更新集合中的当前行。每次执行到<a href="frmStagePropertiesLoopEnd.htm">循环结束</a>环节时，就会进行这一更新。在进入循环环节之前，当前行是指集合中的第一行。循环环节将依次对各行进行迭代处理，直至达到集合中的最后一行。然后，循环将会退出，当前行也将不复存在。如果在不存在当前行的情况下尝试访问集合，则会出现错误。要再次访问集合中的数据，就必须采取相应的操作，以便重新设置“当前行”。可行的方案包括：</p>
	<ul>
		<li>进入新的循环；</li>
		<li>在集合中添加新行（新行会随即成为当前行，且随时可以填充数据）。</li>
	</ul>
	
	<h3>处理集合</h3>
	<p>可以使用“内部—集合”业务对象来处理集合。有关内部业务对象的更多信息，请参阅<a href="helpInternalBusinessObjects.htm">内部业务对象概述</a>。在执行以下操作时，都需要以输入参数的形式提供集合的名称。该名称属于文本<a href="helpDataTypes.htm">数据类型</a>，而不是集合类型。指定的集合必须可供访问（即，并非位于其他页面上，也没有隐藏），才能正常使用。</p>

	<dl class="bulleted">
		<dt>添加行</dt>
		<dd>此操作将在集合中添加一个新行。这个新行将成为当前行，且随时可以填充新的数据。</dd>

		<dt>删除行</dt>
		<dd>此操作将删除集合中的当前行。这个行被删除后，当前行将不复存在。
		</dd>
		<dd>如果在循环迭代期间删除行，则在到达循环结束环节后循环将会继续处理（原有的）下一行。如果在访问当前行期间尝试删除行，则会出现错误。</dd>

		<dt>删除所有行</dt>
		<dd>此操作将删除集合中的所有行。这些行被删除后，当前行将不复存在。
		</dd>
		<dd>如果在循环迭代期间删除所有行，则在到达循环结束环节后循环不会继续处理新的行。如果在访问当前行期间尝试删除行，则会出现错误。</dd>
		
		<dt>计算行数</dt>
		<dd>此操作将计算集合中的行数。它不同于另外两个操作，因为它还有一个名为“count”的输出参数，该参数必须映射到数据项以获取行数。</dd>
	</dl>
	
	<h3 id="singlerow">单行集合</h3>
	<p>“单行”集合始终只包含一个行—该行会被自动设置为当前行。如果针对单行集合调用集合业务对象中的行处理操作，则会出现错误，而且<code>计算行数</code>始终会返回 <i>1</i>。
	
	<h2>示例</h2>

	<h3>未定义的集合</h3>
	<div class="section-indent">
		<p>您想要获取 Microsoft Excel 工作表中的所有内容</p>

		<ol class="headed">
			
			<li><h4>准备</h4>
			<p>在确保 CommonAutomation 业务对象 <em class="buzzword">CommonAutomation.clsExcel</em> 已安装好后，打开 <a href="frmProcess.htm">Process Studio</a> 并添加以下环节：</p>
			<ul>
				<li>集合环节—这是我们将要填充的集合。</li>

				<li>两个操作环节—我们只需要讨论其中的一个环节；另一个环节是必需的。</li>
			</ul>
			</li>
			
			<li><h4>配置数据获取操作</h4>
			<p>我们必须通过操作环节来填充集合。
 打开第二个操作环节的属性页面。对于业务对象，请从下拉菜单中选择“Microsoft Office—Excel 操作”（如果没有看到该选项，则代表业务对象没有成功安装）；对于操作，请选择“获取工作表集合”。在输出选项卡上，将集合环节的名称拖放到名为“Col1”的输出上。这样，上述操作就会将所收集的数据填充到您所选的集合中。</p>
			</li>
			
			<li><h4>满足前提条件</h4>

			<p>我们必须先满足操作环节指定的所有前提条件，然后流程才能正常运行。请查看当前操作属性中的“工作簿必须处于活动状态”前提条件选项卡。这就是导致其他操作环节无法正常运行的原因。请打开这个操作环节的属性，然后从业务对象“Microsoft Office—Excel 操作”中选择操作“打开工作簿”。
 输入现有 Microsoft Excel 工作簿的路径。</p>
			</li>
			
			<li><h4>完成</h4>

			<p>最后，使用链接将各个操作环节联接到一起（无需将集合环节联接到任何环节）。这样，当流程运行时，集合就会在第二个环节运行后被填充。</p>
			</li>
			
		</ol>
	</div>

	<h3>已定义的集合</h3>
	<div class="section-indent">
		<p>您想要获取字段标题未曾更改的表格中的所有内容。</p>

		<ol class="headed">
		
			<li><h4>准备</h4>

			<p>在确保会返回集合的业务对象可供使用后，请打开 <a href="frmProcess.htm">Process Studio</a> 并添加以下环节：</p>
			<ul>
				<li>集合环节—这是我们将要填充的集合。</li>
				<li>一个操作环节—这个环节将会填充集合。</li>
			</ul></li>
		
			<li><h4>定义集合</h4>

			<p>打开集合环节属性。在“字段”选项卡上，点击“添加字段”按钮，以添加与将要填充的集合中的字段完全匹配的字段。另请为集合中的各个字段选择相应的数据类型；同样地，这些数据类型也必须与将要填充的集合完全匹配。</p></li>

			<li><h4>配置数据获取操作</h4>

			<p>我们必须通过操作环节来填充集合。
 打开操作环节的属性页面。选择会返回集合的业务对象操作，然后在“输出”选项卡上将操作输出设置成名为“Coll1”的集合环节</p></li>

			<li><h4>完成</h4>

			<p>最后，使用链接将各个操作环节联接到一起（无需将集合环节联接到任何环节）。这样，当流程运行时，集合就会在进入操作环节后被填充。</p></li>
		</ol>
	</div>
</body>
</html>
