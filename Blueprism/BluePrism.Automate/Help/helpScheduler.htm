<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet" />
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>Blue Prism Scheduler</title>
    <script type="text/javascript" src="script/imagezoom.js"></script>
</head>

<body class="slick scheduler">
    <div class="header">
        <h1 class="pagetitle">Blue Prism Scheduler</h1>
        <h2>Introduction</h2>
    </div>

    <div class="captioned-image overview-screenshot nozoom">
        <a href="Graphics/schedule-diagram.png"
            title="Example Schedule - Click for a larger image"><img
            alt="Example Schedule - Click for a larger image"
            src="Graphics/schedule-diagram.png"/></a>
        <p>Example Schedule and its tasks</p>
    </div>

    <h3 id="overview">Overview</h3>
    <p>Blue Prism contains a system which can be used to execute
    processes at specified times and repeat their execution at various
    intervals. The scheduler runs as part of a configured <a
    href="helpBPServer.htm">Blue Prism Server</a> service which has
    access to the Blue Prism environment with the processes held in it.
    </p>
    <p>The schedules can be configured to run once, or be repeated at
    minutely, hourly, daily, weekly, monthly or yearly intervals. <a
    href="helpCalendar.htm">Calendars</a> can be employed to cause the
    schedule to run only on working days, skipping specific certain
    weekdays and/or public holidays.</p>


    <h3 id="schedule">Schedules</h3>
    <p>A schedule represents the point of execution of a set of tasks.
    Each schedule is self-contained and contains various data :- name
    &amp; description, timing data and a set of <a
    href="#task">tasks</a> to perform.</p>
    <p>When a schedule is executed, its 'Initial Task' is executed first
    and the subsequent tasks to perform are determined based on the
    outcome of that task. Thus, the tasks within a schedule are executed
    serially - ie. one after another.</p>
    <p>A schedule cannot be executed concurrently with itself. For
    example, say a schedule starts at 12:00, and is scheduled to run
    again at 13:00. If, at 13:00, the schedule is still running, it
    will not be executed again.</p>
    <p>Schedules are created in the Control Room's <a
    href="helpSchedulerUI.htm">Scheduler</a> tab, using the <a
    href="helpSchedulesUI.htm">Schedules</a> components.</p>

    <h3 id="task">Tasks</h3>
    <p>A task represents a component of a schedule. It defines a set of
    sessions which are to be executed concurrently, and it provides a
    coalesced status outcome of those sessions so that the scheduler can
    determine which task to execute next.</p>
    <p>A session is a top level process which runs on a resource PC.
    Each task can contain an arbitrary number of sessions. When the task
    is executed, each session is first created and, once they are all
    registered and pending on their host resources, they are executed.
    </p>
    <p>By default, a task is set to 'fail fast' - that is, if any
    session fails to be created, all sessions will be
    terminated and the task will be terminated. Likewise, if any
    session's execution causes an error, all other sessions will be
    terminated and the task will be terminated. Note that this means
    that a task is marked as terminated if any sessions fail.</p>
    <p>If a task is set to not fail fast, any session creation failures
    are logged but do not cause the task to fail. Equally, any
    individual session executions which cause an error are logged, but
    any other running sessions continue. Note that, if not failing fast,
    a task is marked as terminated only if <em>all</em> of its sessions
    fail.</p>
    <p>Each task has an 'On Success' and an 'On Exception' value, which
    determines the next task to be executed after the current task has
    executed and has, respectively, completed successfully, or has been
    terminated due to an exception when creating/executing its sessions.
    </p>
    <p>Tasks are configured in the Scheduler tab using the <a
    href="helpTasksUI.htm">Tasks</a> components.</p>

    <h3 id="scheduler">The Scheduler</h3>
    <p>The scheduler runs within a Blue Prism Server service. It is a
    background process which waits for the next schedule activation time
    and then executes any schedules due to run at that time.</p>

    <p>The scheduler interprets the schedule activation times using the
    time zone configured on the server and therefore this should be
    considered when configuring the schedules.<br/>
    Additionally where there are multiple Blue Prism Servers with the
    scheduler enabled it is necessary to configure all servers to use a
    common time zone.</p>

    <p>The scheduler is configured for a particular connection within
    <a href="helpSystemManagerScheduler.htm">System Manager</a>.</p>
    <p>It can be configured to check to see if has missed any schedules
    when it starts up.</p>
    <p>It checks the database every 30 seconds to see if it needs to
    refresh its current schedule data, so any changes to schedule timing
    will take at most 30 seconds to be recognised by the scheduler
    service itself.</p>
    <p>If schedules are running when the scheduler is stopped or closed,
    they will attempt to terminate any active sessions cleanly and mark
    them as terminated in any schedule or session logs.</p>

</body>
</html>