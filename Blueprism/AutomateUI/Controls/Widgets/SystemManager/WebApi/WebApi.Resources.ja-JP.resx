<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NewActionName_Template" xml:space="preserve">
    <value>T_New Action {0}</value>
  </data>
  <data name="DeleteActionPrompt_Template" xml:space="preserve">
    <value>T_Are you sure you want to delete the action '{0}'?</value>
  </data>
  <data name="CouldNotCommitChanges_Template" xml:space="preserve">
    <value>T_Could not commit changes to current selection: T_{0}</value>
  </data>
  <data name="ActionNameExistsMessage_Template" xml:space="preserve">
    <value>T_This action name already exists in the Web API. T_Note, that all non alpha-numeric characters will be treated as underscores when comparing names.</value>
  </data>
  <data name="HeadersNode" xml:space="preserve">
    <value>T_Headers</value>
  </data>
  <data name="ParametersNode" xml:space="preserve">
    <value>T_Parameters</value>
  </data>
  <data name="ActionsNode" xml:space="preserve">
    <value>T_Actions</value>
  </data>
  <data name="CommonHeadersNode" xml:space="preserve">
    <value>T_Common Headers</value>
  </data>
  <data name="CommonParametersNode" xml:space="preserve">
    <value>T_Common Parameters</value>
  </data>
  <data name="NewWebApiName_Template" xml:space="preserve">
    <value>T_New Web API Service {0}</value>
  </data>
  <data name="ErrorEmptyWebApiName" xml:space="preserve">
    <value>T_A Web API name must not be empty</value>
  </data>
  <data name="ErrorDuplicateWebApiName_Template" xml:space="preserve">
    <value>T_A Web API with the name '{0}' already exists</value>
  </data>
  <data name="ErrorCreatingWebApi_Template" xml:space="preserve">
    <value>T_An error occurred while compiling the Web API: T_{0}</value>
  </data>
  <data name="ErrorDuplicateActionName_Template" xml:space="preserve">
    <value>T_An action with the name '{0}' already exists</value>
  </data>
  <data name="ErrorInvalidUrl_Template" xml:space="preserve">
    <value>T_The given URL was not valid: T_{0}</value>
  </data>
  <data name="ErrorBaseUrlCannotBeEmpty" xml:space="preserve">
    <value>T_The Base URL of a Web API cannot be empty</value>
  </data>
  <data name="UrlWhitespaceWarning" xml:space="preserve">
    <value>T_Warning: T_You have entered a URL that contains whitespace. T_If this is unintentional, the web API may not function as expected - whitespace is automatically URL encoded.</value>
  </data>
  <data name="ErrorAuthUrlCannotBeEmpty" xml:space="preserve">
    <value>T_The Authorization URI cannot be empty</value>
  </data>
  <data name="ErrorInvalidBaseUrl_Template" xml:space="preserve">
    <value>T_The Base URL '{0}' is invalid: T_{1}</value>
  </data>
  <data name="ErrorValidatingWebApi" xml:space="preserve">
    <value>T_An error occurred while validating the Web API</value>
  </data>
  <data name="WindowTitle_Template" xml:space="preserve">
    <value>T_Web API: T_{0}</value>
  </data>
  <data name="ErrorDuplicateParameter_Template" xml:space="preserve">
    <value>T_Duplicate parameter found on row {0}. T_Note, that all non alpha-numeric characters will be treated as underscores when comparing names.</value>
  </data>
  <data name="ErrorDuplicateHeader_Template" xml:space="preserve">
    <value>T_Duplicate header found on row {0}</value>
  </data>
  <data name="GuidanceDetailPanel" xml:space="preserve">
    <value>T_Enter a unique name and the Base URL of the Web API. T_The URL is used in all requests generated by the actions within this definition. T_The Base URL can contain Common Parameter values when specified in the format [parameter name].</value>
  </data>
  <data name="GuidanceHttpHeaderPanel" xml:space="preserve">
    <value>T_Configure headers that are used in all actions for this API definition. T_The Header Value can contain Common Parameters values when specified in the format [parameter name].</value>
  </data>
  <data name="GuidanceActionSpecificHttpHeaderPanel" xml:space="preserve">
    <value>T_Configure headers, specific to this action, that are used in addition to the common headers for this API definition. T_The value can contain common parameters and actions specific parameters when specified in the format [parameter name]. T_If a common header and action-specific header have the same name, the value of the action-specific header is used when the API is called.</value>
  </data>
  <data name="GuidanceParametersPanel" xml:space="preserve">
    <value>T_Configure parameters available for all actions. T_Parameter values can be used dynamically in URL Paths, Header Values and request bodies when specified in the format [parameter name].</value>
  </data>
  <data name="GuidanceActionSpecificParametersPanel" xml:space="preserve">
    <value>T_Configure parameters, specific to this action, that are available in addition to the common parameters for this definition. T_Parameter values can be used dynamically in URL paths, header values, and request bodies when specified in the format [parameter name]. T_Parameter names must be unique within the API definition.</value>
  </data>
  <data name="GuidanceActionPanel" xml:space="preserve">
    <value>T_Complete the settings to define the action. T_Only enabled actions can be called from Objects and Processes. T_Values of Common Parameters and action-specific Parameters can be used dynamically in the URL Path and request Body when specified in the format [parameter name].</value>
  </data>
  <data name="GuidanceActionSummary" xml:space="preserve">
    <value>T_Click Add Action to create and configure a new action for this API definition. T_The actions are available when the Web API Service is included in an Object or Process.</value>
  </data>
  <data name="ErrorFailedToPopulateCredentialsList_Template" xml:space="preserve">
    <value>T_Failed to populate Credentials List: T_{0}</value>
  </data>
  <data name="CommonAuthenticationsNode" xml:space="preserve">
    <value>T_Common Authentication</value>
  </data>
  <data name="GuidanceBasicAuthenticationPanel" xml:space="preserve">
    <value>T_Use HTTP Basic Authentication to send the username and password from the selected credential in API requests. T_Select 'Expose to process' to make the credential available as an input for actions, listed under the entered Parameter Name.</value>
  </data>
  <data name="GuidanceEmptyAuthenticationPanel" xml:space="preserve">
    <value>T_Select and configure an authentication type for the actions in this API definition.</value>
  </data>
  <data name="ErrorEmptyAuthParameterName" xml:space="preserve">
    <value>T_Parameter Name must not be empty when Expose to Process is set to True</value>
  </data>
  <data name="GuidanceBearerTokenAuthenticationPanel" xml:space="preserve">
    <value>T_Set up bearer token authentication where the bearer token has already been retreived and stored in a credential. T_Bearer tokens are most widely used with OAuth 2.0 authentication and JWT authentication.</value>
  </data>
  <data name="GuidanceOAuth2AuthenticationPanel" xml:space="preserve">
    <value>T_This authentication type uses a client identifier and client secret stored in a credential to retrieve an OAuth 2.0 access token from an authorization server. T_The access token is then used to authenticate Web API requests.</value>
  </data>
  <data name="GuidanceOAuth2WithJwtAuthenticationPanel" xml:space="preserve">
    <value>T_This authentication type generates a JWT Bearer Token that is used to retrieve an OAuth 2.0 access token from an authorization server. T_The access token is then used to authenticate Web API requests.</value>
  </data>
  <data name="RequestNode" xml:space="preserve">
    <value>T_Request</value>
  </data>
  <data name="ResponseNode" xml:space="preserve">
    <value>T_Response</value>
  </data>
  <data name="GuidanceActionRequestPanel" xml:space="preserve">
    <value>T_Configure the request for this API definition by selecting a method and adding a URL path and request body.</value>
  </data>
  <data name="GuidanceActionResponsePanel" xml:space="preserve">
    <value>T_Configure the response for the API action by creating additional custom output parameters. T_The output parameter values are derived from the HTTP response body, and each output parameter value can be generated either by defining a path to the value within a JSON response or by providing custom code to calculate the value.</value>
  </data>
  <data name="ErrorEmptyParameter" xml:space="preserve">
    <value>T_Parameter name cannot be empty</value>
  </data>
  <data name="ErrorInvalidPath" xml:space="preserve">
    <value>T_Path is not a valid JSON path</value>
  </data>
  <data name="ErrorRootElementTokenMissingFromPath" xml:space="preserve">
    <value>T_Root element ($) missing from start of path.</value>
  </data>
  <data name="EnterNewParameter" xml:space="preserve">
    <value>T_Enter new parameter</value>
  </data>
  <data name="RemoveParameter" xml:space="preserve">
    <value>T_Remove parameter</value>
  </data>
  <data name="ErrorInvalidDataType" xml:space="preserve">
    <value>T_Data type is invalid</value>
  </data>
  <data name="ErrorValidatingWebApiCustomOutputParameters_Template" xml:space="preserve">
    <value>T_An error occurred while validating response output parameters: T_{0}</value>
  </data>
  <data name="ErrorInvalidParameterName" xml:space="preserve">
    <value>T_Parameter name cannot contain a full-stop</value>
  </data>
  <data name="GuidanceCustomAuthenticationPanel" xml:space="preserve">
    <value>T_This authentication type allows a custom authentication to be set up using the selected credential's properties as parameters when building the configured request. T_It is recommended to select a General credential for this authentication type. T_Username can be accessed using the syntax [Credential.Username], password using[Credential.Password] and any specified credential properties using [Credential.AdditionalProperties.<propertyName>].</value>
  </data>
  <data name="ErrorValidatingWebApiCustomParameters_Template" xml:space="preserve">
    <value>T_An error occurred while validating parameters: T_{0}</value>
  </data>
  <data name="ErrorActionNameCannotBeEmpty" xml:space="preserve">
    <value>T_Action name cannot be empty.</value>
  </data>
  <data name="ErrorInvalidAuthenticationUrl_Template" xml:space="preserve">
    <value>T_The Authentication URL '{0}' is invalid: T_{1}</value>
  </data>
  <data name="CommonCode_Unable_To_Populate_Field" xml:space="preserve">
    <value>T_Unable to populate field with selection - there is no active row. T_Please select a row by placing the cursor in it before browsing for an external resource.</value>
  </data>
  <data name="CommonCode" xml:space="preserve">
    <value>T_Common Code</value>
  </data>
  <data name="GuidanceCommonCodePanel" xml:space="preserve">
    <value>T_Specify the language, settings and shared functionality used by custom code within this Web API</value>
  </data>
  <data name="CodeValidation_ErrorsFoundMessageTemplate" xml:space="preserve">
    <value>T_Compilation failed:
T_{0}</value>
    <comment>{0} placeholder used for error listing</comment>
  </data>
  <data name="CodeValidation_RequestContentCodeCompilerErrorTemplate" xml:space="preserve">
    <value>T_Action "{0}" (line {1}): T_{2}</value>
    <comment>{0} placeholder used for action name, {1} for line number, {2} for error text</comment>
  </data>
  <data name="CodeValidation_SharedCodeCompilerErrorTemplate" xml:space="preserve">
    <value>T_Shared code (line {0}): T_{1}</value>
    <comment>{0} placeholder used for line number, {1} for error text</comment>
  </data>
  <data name="CodeValidation_SuccessMessage" xml:space="preserve">
    <value>T_Code compiled successfully.</value>
  </data>
  <data name="CodeValidation_GeneralCodeCompilerErrorTemplate" xml:space="preserve">
    <value>T_General error: T_{0}</value>
    <comment>{0} placeholder used for error text</comment>
  </data>
  <data name="ConfirmationText_RestoreDefaultConfigSettings" xml:space="preserve">
    <value>T_Are you sure you want to restore the default settings?</value>
  </data>
  <data name="ToolTip_AuthServerRequestTimeoutConfigSetting" xml:space="preserve">
    <value>T_The time before the authorization server request will timeout.</value>
  </data>
  <data name="ToolTip_HttpRequestTimeoutConfigSetting" xml:space="preserve">
    <value>T_The time before the request will timeout.</value>
  </data>
  <data name="ErrorInvalidParameterType" xml:space="preserve">
    <value>T_Parameter type is invalid</value>
  </data>
  <data name="ErrorInvalidRequestTimoutValue" xml:space="preserve">
    <value>T_Request timeout values must be whole numbers between 1 and 100000.</value>
  </data>
  <data name="WarningLinkedToSkill" xml:space="preserve">
    <value>T_This Web API is associated with a Skill.</value>
  </data>
  <data name="ExternalReferences" xml:space="preserve">
    <value>T_External References</value>
  </data>
  <data name="NamespaceImports" xml:space="preserve">
    <value>T_Namespace Imports</value>
  </data>
</root>