<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="name_SelectDate" xml:space="preserve">
    <value>Select Date</value>
  </data>
  <data name="helptext_Setthedaterangeforacontrol" xml:space="preserve">
    <value>Set the date range for a control</value>
  </data>
  <data name="name_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="description_Thestartdateoftherange" xml:space="preserve">
    <value>The start date of the range</value>
  </data>
  <data name="name_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="description_Theenddateoftherange" xml:space="preserve">
    <value>The end date of the range</value>
  </data>
  <data name="name_GetDate" xml:space="preserve">
    <value>Get Date</value>
  </data>
  <data name="helptext_Getthedaterangeforacontrol" xml:space="preserve">
    <value>Get the date range for a control</value>
  </data>
  <data name="name_GetHorizontalMinimum" xml:space="preserve">
    <value>Get Horizontal Minimum</value>
  </data>
  <data name="helptext_Gettheminimumhorizontalvalue" xml:space="preserve">
    <value>Get the minimum horizontal value</value>
  </data>
  <data name="name_GetHorizontalMaximum" xml:space="preserve">
    <value>Get Horizontal Maximum</value>
  </data>
  <data name="helptext_Getthemaximumhorizontalvalue" xml:space="preserve">
    <value>Get the maximum horizontal value</value>
  </data>
  <data name="name_GetHorizontalValue" xml:space="preserve">
    <value>Get Horizontal Value</value>
  </data>
  <data name="helptext_Getthecurrenthorizontalvalue" xml:space="preserve">
    <value>Get the current horizontal value</value>
  </data>
  <data name="name_SetHorizontalValue" xml:space="preserve">
    <value>Set Horizontal Value</value>
  </data>
  <data name="helptext_Setthehorizontalvalue" xml:space="preserve">
    <value>Set the horizontal value</value>
  </data>
  <data name="name_Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="description_Thenewvalue" xml:space="preserve">
    <value>The new value</value>
  </data>
  <data name="name_GetVerticalMinimum" xml:space="preserve">
    <value>Get Vertical Minimum</value>
  </data>
  <data name="helptext_Gettheminimumverticalvalue" xml:space="preserve">
    <value>Get the minimum vertical value</value>
  </data>
  <data name="name_GetVerticalMaximum" xml:space="preserve">
    <value>Get Vertical Maximum</value>
  </data>
  <data name="helptext_Getthemaximumverticalvalue" xml:space="preserve">
    <value>Get the maximum vertical value</value>
  </data>
  <data name="name_GetVerticalValue" xml:space="preserve">
    <value>Get Vertical Value</value>
  </data>
  <data name="helptext_Getthecurrentverticalvalue" xml:space="preserve">
    <value>Get the current vertical value</value>
  </data>
  <data name="name_SetVerticalValue" xml:space="preserve">
    <value>Set Vertical Value</value>
  </data>
  <data name="helptext_Settheverticalvalue" xml:space="preserve">
    <value>Set the vertical value</value>
  </data>
  <data name="name_GetSelectedNodeKey" xml:space="preserve">
    <value>Get Selected Node Key</value>
  </data>
  <data name="helptext_Getthekeyoftheselectednodeinatreeview" xml:space="preserve">
    <value>Get the key of the selected node in a treeview</value>
  </data>
  <data name="name_GetNodeText" xml:space="preserve">
    <value>Get Node Text</value>
  </data>
  <data name="helptext_Getthetextofthenodewiththespecifiedkey" xml:space="preserve">
    <value>Get the text of the node with the specified key</value>
  </data>
  <data name="name_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="description_Thekeyofthenode" xml:space="preserve">
    <value>The key of the node</value>
  </data>
  <data name="name_DoubleClickNode" xml:space="preserve">
    <value>Double Click Node</value>
  </data>
  <data name="helptext_Simulatedoubleclickingthetreenode" xml:space="preserve">
    <value>Simulate double clicking the tree node</value>
  </data>
  <data name="name_Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="description_Thetextofthenode" xml:space="preserve">
    <value>The text of the node</value>
  </data>
  <data name="name_Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="helptext_Selectsanitem" xml:space="preserve">
    <value>Selects an item</value>
  </data>
  <data name="name_SelectItem" xml:space="preserve">
    <value>Select Item</value>
  </data>
  <data name="helptext_Selectsanitemidentifiedbyitsposition" xml:space="preserve">
    <value>Selects an item identified by its position.</value>
  </data>
  <data name="name_ItemPosition" xml:space="preserve">
    <value>Item Position</value>
  </data>
  <data name="description_The1basedindexoftheitemtobeselecte_a7096ddbb905f754" xml:space="preserve">
    <value>The 1-based index of the item to be selected. This parameter is ignored unless the 'Item Text'</value>
  </data>
  <data name="name_GetCellValue" xml:space="preserve">
    <value>Get Cell Value</value>
  </data>
  <data name="helptext_Returnsthetextvalueofthecurrentlys_3987095cad3dc338" xml:space="preserve">
    <value>Returns the text value of the currently selected cell in a Grid.</value>
  </data>
  <data name="name_Cellrow" xml:space="preserve">
    <value>Cell row</value>
  </data>
  <data name="description_Therownumberofthecurrentcell" xml:space="preserve">
    <value>The row number of the current cell</value>
  </data>
  <data name="name_Cellcolumn" xml:space="preserve">
    <value>Cell column</value>
  </data>
  <data name="description_Thecolumnnumberofthecurrentcell" xml:space="preserve">
    <value>The column number of the current cell</value>
  </data>
  <data name="name_SetFocus" xml:space="preserve">
    <value>Set Focus</value>
  </data>
  <data name="helptext_Placesthefocusforeventsontoaspecificcontrol" xml:space="preserve">
    <value>Places the focus for events on to a specific control.</value>
  </data>
  <data name="name_Cellcolumnname" xml:space="preserve">
    <value>Cell column name</value>
  </data>
  <data name="name_PressButton" xml:space="preserve">
    <value>Press Button</value>
  </data>
  <data name="helptext_Pressesabuttononatreeview" xml:space="preserve">
    <value>Presses a button on a treeview</value>
  </data>
  <data name="name_ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="description_Thenameoftheitemtobepressed" xml:space="preserve">
    <value>The name of the item to be pressed</value>
  </data>
  <data name="name_ChangeCheckboxState" xml:space="preserve">
    <value>Change Checkbox State</value>
  </data>
  <data name="helptext_Changesthecheckboxstateonatreeview" xml:space="preserve">
    <value>Changes the checkbox state on a tree view.</value>
  </data>
  <data name="description_Thenameoftheitem" xml:space="preserve">
    <value>The name of the item</value>
  </data>
  <data name="name_state" xml:space="preserve">
    <value>state</value>
  </data>
  <data name="description_Thestateofthecheckbox" xml:space="preserve">
    <value>The state of the checkbox</value>
  </data>
  <data name="name_ClickLink" xml:space="preserve">
    <value>Click Link</value>
  </data>
  <data name="helptext_Emulatestriggeringalink" xml:space="preserve">
    <value>Emulates triggering a link.</value>
  </data>
  <data name="name_NodeKey" xml:space="preserve">
    <value>Node Key</value>
  </data>
  <data name="name_DoubleClickItem" xml:space="preserve">
    <value>Double Click Item</value>
  </data>
  <data name="helptext_Emulatesdoubleclickingonatreeviewtextitem" xml:space="preserve">
    <value>Emulates double-clicking on a tree view text item.</value>
  </data>
</root>