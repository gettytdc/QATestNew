<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="name_SelectDate" xml:space="preserve">
    <value>选择日期</value>
  </data>
  <data name="helptext_Setthedaterangeforacontrol" xml:space="preserve">
    <value>设置控件的日期范围</value>
  </data>
  <data name="name_StartDate" xml:space="preserve">
    <value>开始日期</value>
  </data>
  <data name="description_Thestartdateoftherange" xml:space="preserve">
    <value>范围的开始日期</value>
  </data>
  <data name="name_EndDate" xml:space="preserve">
    <value>结束日期</value>
  </data>
  <data name="description_Theenddateoftherange" xml:space="preserve">
    <value>范围的结束日期</value>
  </data>
  <data name="name_GetDate" xml:space="preserve">
    <value>获取日期</value>
  </data>
  <data name="helptext_Getthedaterangeforacontrol" xml:space="preserve">
    <value>获取控件的日期范围</value>
  </data>
  <data name="name_GetHorizontalMinimum" xml:space="preserve">
    <value>获得水平最小值</value>
  </data>
  <data name="helptext_Gettheminimumhorizontalvalue" xml:space="preserve">
    <value>获取最小水平值</value>
  </data>
  <data name="name_GetHorizontalMaximum" xml:space="preserve">
    <value>获得水平最大值</value>
  </data>
  <data name="helptext_Getthemaximumhorizontalvalue" xml:space="preserve">
    <value>获取最大水平值</value>
  </data>
  <data name="name_GetHorizontalValue" xml:space="preserve">
    <value>获得水平值</value>
  </data>
  <data name="helptext_Getthecurrenthorizontalvalue" xml:space="preserve">
    <value>获取当前水平值</value>
  </data>
  <data name="name_SetHorizontalValue" xml:space="preserve">
    <value>设置水平值</value>
  </data>
  <data name="helptext_Setthehorizontalvalue" xml:space="preserve">
    <value>设置水平值</value>
  </data>
  <data name="name_Value" xml:space="preserve">
    <value>值</value>
  </data>
  <data name="description_Thenewvalue" xml:space="preserve">
    <value>新值</value>
  </data>
  <data name="name_GetVerticalMinimum" xml:space="preserve">
    <value>获得垂直最小值</value>
  </data>
  <data name="helptext_Gettheminimumverticalvalue" xml:space="preserve">
    <value>获得最小垂直值</value>
  </data>
  <data name="name_GetVerticalMaximum" xml:space="preserve">
    <value>获得垂直最大值</value>
  </data>
  <data name="helptext_Getthemaximumverticalvalue" xml:space="preserve">
    <value>获得最大垂直值</value>
  </data>
  <data name="name_GetVerticalValue" xml:space="preserve">
    <value>获得垂直值</value>
  </data>
  <data name="helptext_Getthecurrentverticalvalue" xml:space="preserve">
    <value>获取当前垂直值</value>
  </data>
  <data name="name_SetVerticalValue" xml:space="preserve">
    <value>设置垂直值</value>
  </data>
  <data name="helptext_Settheverticalvalue" xml:space="preserve">
    <value>设置垂直值</value>
  </data>
  <data name="name_GetSelectedNodeKey" xml:space="preserve">
    <value>获取选定的节点密钥</value>
  </data>
  <data name="helptext_Getthekeyoftheselectednodeinatreeview" xml:space="preserve">
    <value>在树视图中获取所选节点的密钥</value>
  </data>
  <data name="name_GetNodeText" xml:space="preserve">
    <value>获取节点文本</value>
  </data>
  <data name="helptext_Getthetextofthenodewiththespecifiedkey" xml:space="preserve">
    <value>获取具有指定键的节点的文本</value>
  </data>
  <data name="name_Key" xml:space="preserve">
    <value>键</value>
  </data>
  <data name="description_Thekeyofthenode" xml:space="preserve">
    <value>节点键</value>
  </data>
  <data name="name_DoubleClickNode" xml:space="preserve">
    <value>双击节点</value>
  </data>
  <data name="helptext_Simulatedoubleclickingthetreenode" xml:space="preserve">
    <value>模拟双击树节点</value>
  </data>
  <data name="name_Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="description_Thetextofthenode" xml:space="preserve">
    <value>节点的文本</value>
  </data>
  <data name="name_Select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="helptext_Selectsanitem" xml:space="preserve">
    <value>选择一项</value>
  </data>
  <data name="name_SelectItem" xml:space="preserve">
    <value>选择项</value>
  </data>
  <data name="helptext_Selectsanitemidentifiedbyitsposition" xml:space="preserve">
    <value>选择由其位置标识的项。</value>
  </data>
  <data name="name_ItemPosition" xml:space="preserve">
    <value>项位置</value>
  </data>
  <data name="description_The1basedindexoftheitemtobeselecte_a7096ddbb905f754" xml:space="preserve">
    <value>要选择的从 1 开始的项索引。除非“项文本”符合以下条件，否则将忽略此参数</value>
  </data>
  <data name="name_GetCellValue" xml:space="preserve">
    <value>获取单元格值</value>
  </data>
  <data name="helptext_Returnsthetextvalueofthecurrentlys_3987095cad3dc338" xml:space="preserve">
    <value>返回网格中当前所选单元格的文本值。</value>
  </data>
  <data name="name_Cellrow" xml:space="preserve">
    <value>单元格行</value>
  </data>
  <data name="description_Therownumberofthecurrentcell" xml:space="preserve">
    <value>当前单元格行号</value>
  </data>
  <data name="name_Cellcolumn" xml:space="preserve">
    <value>单元格列</value>
  </data>
  <data name="description_Thecolumnnumberofthecurrentcell" xml:space="preserve">
    <value>当前单元格列号</value>
  </data>
  <data name="name_SetFocus" xml:space="preserve">
    <value>设置焦点</value>
  </data>
  <data name="helptext_Placesthefocusforeventsontoaspecificcontrol" xml:space="preserve">
    <value>将事件的焦点置于特定控件。</value>
  </data>
  <data name="name_Cellcolumnname" xml:space="preserve">
    <value>单元格列名称</value>
  </data>
  <data name="name_PressButton" xml:space="preserve">
    <value>按下按钮</value>
  </data>
  <data name="helptext_Pressesabuttononatreeview" xml:space="preserve">
    <value>按下树视图上的按钮</value>
  </data>
  <data name="name_ItemName" xml:space="preserve">
    <value>项名称</value>
  </data>
  <data name="description_Thenameoftheitemtobepressed" xml:space="preserve">
    <value>要按下的项的名称</value>
  </data>
  <data name="name_ChangeCheckboxState" xml:space="preserve">
    <value>更改复选框状态</value>
  </data>
  <data name="helptext_Changesthecheckboxstateonatreeview" xml:space="preserve">
    <value>更改树视图上的复选框状态。</value>
  </data>
  <data name="description_Thenameoftheitem" xml:space="preserve">
    <value>项的名称</value>
  </data>
  <data name="name_state" xml:space="preserve">
    <value>状态</value>
  </data>
  <data name="description_Thestateofthecheckbox" xml:space="preserve">
    <value>复选框的状态</value>
  </data>
  <data name="name_ClickLink" xml:space="preserve">
    <value>点击链接</value>
  </data>
  <data name="helptext_Emulatestriggeringalink" xml:space="preserve">
    <value>模拟触发链接。</value>
  </data>
  <data name="name_NodeKey" xml:space="preserve">
    <value>节点密钥</value>
  </data>
  <data name="name_DoubleClickItem" xml:space="preserve">
    <value>双击项</value>
  </data>
  <data name="helptext_Emulatesdoubleclickingonatreeviewtextitem" xml:space="preserve">
    <value>模拟双击树视图文本项。</value>
  </data>
</root>