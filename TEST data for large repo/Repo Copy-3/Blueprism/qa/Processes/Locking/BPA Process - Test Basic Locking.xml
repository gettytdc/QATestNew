<process name="Test Basic Locking" version="1.0" bpversion="6.0.0.0" narrative="A test for the environment locking business object." byrefcollection="true" preferredid="6e591ec8-22ec-4fec-bafe-ff9a3f5e9715">
  <view>
    <camerax>-27</camerax>
    <cameray>-63</cameray>
    <zoom version="2">1.25</zoom>
  </view>
  <preconditions />
  <endpoint narrative="" />
  <stage stageid="f3cbd8a9-ee69-436c-9297-38cbabc4afb6" name="Start" type="Start">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>-150</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>e75dca7a-16c7-494c-8b80-45f3a84ba1b2</onsuccess>
  </stage>
  <stage stageid="f0072ac8-ebd5-4035-9202-23808c975d2a" name="Stage1" type="ProcessInfo">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>-120</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>90</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="e75dca7a-16c7-494c-8b80-45f3a84ba1b2" name="Acquire &quot;Lock 1&quot;" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>-45</displayx>
    <displayy>-105</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token" />
    </outputs>
    <onsuccess>e306fabf-757b-48ed-84f4-74412ddfaf0a</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="d669b306-b298-472b-873a-32d12dbd893c" name="Token" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>-45</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="3dbc9cf2-89ca-4772-b1b6-6e669c3bac9f" name="Acquire &quot;Lock 1&quot; again" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>-45</displayx>
    <displayy>-15</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="MakeTimeSpan(0,0,0,3,0)" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="&quot;Relocked&quot;" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token II" />
    </outputs>
    <onsuccess>c85b302a-06a0-4280-883c-736a91e7ccca</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="fe99d3a2-b333-4c1f-bbde-7b2657a8964b" name="Preferred Token" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>30</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="dfb841db-35d5-43f5-b38a-9975690569b3" name="Lock Held" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>105</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>flag</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="f4f4c30e-ce8e-4b37-8b2b-c7cf62ae91dc" name="Comment" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>135</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="ed9a1fbe-5206-45f0-9d51-d0608cea48ba" name="Token II" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>-15</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="e306fabf-757b-48ed-84f4-74412ddfaf0a" name="Gained a token?" type="Decision">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>-60</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Token] &lt;&gt; &quot;&quot;" />
    <ontrue>3dbc9cf2-89ca-4772-b1b6-6e669c3bac9f</ontrue>
    <onfalse>5664659a-e17a-4c60-be52-3a517123682d</onfalse>
  </stage>
  <stage stageid="5664659a-e17a-4c60-be52-3a517123682d" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>90</displayx>
    <displayy>-60</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Lock Exception" detail="&quot;No token was returned when locking 'Lock 1'&quot;" />
  </stage>
  <stage stageid="c85b302a-06a0-4280-883c-736a91e7ccca" name="Gained a token?" type="Decision">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>30</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Token II] &lt;&gt; &quot;&quot;" />
    <ontrue>974596e0-e37a-4b57-9202-0d7285af0007</ontrue>
    <onfalse>1a15e54a-6884-4c2d-8670-4913cc228f07</onfalse>
  </stage>
  <stage stageid="1a15e54a-6884-4c2d-8670-4913cc228f07" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>90</displayx>
    <displayy>30</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Lock Exception" detail="&quot;No token was returned when re-locking 'Lock 1'&quot;" />
  </stage>
  <stage stageid="974596e0-e37a-4b57-9202-0d7285af0007" name="Tokens Match?" type="Decision">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>75</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Token II] = [Token]" />
    <ontrue>a80c3a87-d185-4e6c-b02c-0922c3e9aa0c</ontrue>
    <onfalse>3fd4faa4-78b6-41bf-b2da-89acc40775c0</onfalse>
  </stage>
  <stage stageid="a80c3a87-d185-4e6c-b02c-0922c3e9aa0c" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>90</displayx>
    <displayy>75</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Lock Exception" detail="&quot;A relock returned the same token as the original lock&quot;" />
  </stage>
  <stage stageid="3fd4faa4-78b6-41bf-b2da-89acc40775c0" name="Acquire &quot;Lock 2&quot; with a preferred token" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>-45</displayx>
    <displayy>120</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 2&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="&quot;Lock 2, please&quot;" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="&quot;A Second Lock&quot;" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Preferred Token" />
    </outputs>
    <onsuccess>db2a3c93-792b-4edc-959a-983437330353</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="db2a3c93-792b-4edc-959a-983437330353" name="Token Correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>165</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Preferred Token] = &quot;Lock 2, please&quot;" />
    <ontrue>e5c3bfc8-2c51-4b42-9b75-63fa897b8334</ontrue>
    <onfalse>88a791d1-2599-4e4e-9010-c51d748f4f20</onfalse>
  </stage>
  <stage stageid="88a791d1-2599-4e4e-9010-c51d748f4f20" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>90</displayx>
    <displayy>165</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Lock Exception" detail="&quot;Preferred Token should be: 'Token 2, please'; Was : '&quot; &amp; [Preferred Token] &amp; &quot;'&quot;" />
  </stage>
  <stage stageid="e5c3bfc8-2c51-4b42-9b75-63fa897b8334" name="Release &quot;Lock 1&quot; with wrong token" type="Action">
    <narrative>Releases the lock(s) associated with the given name and token</narrative>
    <displayx>-45</displayx>
    <displayy>240</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="&quot;This shouldn't work&quot;" />
      <input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token]" />
      <input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" />
      <input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" />
    </inputs>
    <onsuccess>fe401192-0b02-4ea7-a0c3-8f5cbce7ddc4</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" />
  </stage>
  <stage stageid="fe401192-0b02-4ea7-a0c3-8f5cbce7ddc4" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>90</displayx>
    <displayy>240</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Release Exception" detail="&quot;Should have errored releasing lock 1 with incorrect token : &quot; &amp; [Token]" />
  </stage>
  <stage stageid="e9aa0087-44fb-4e79-9584-271ceb2b6373" name="BadRelease" type="Block">
    <narrative>
    </narrative>
    <displayx>-105</displayx>
    <displayy>210</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>150</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="1e1128c8-3e1b-4446-bc98-1950e271a678" name="Recover" type="Recover">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>285</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>7e10faf5-8e4b-413d-9566-781a9d1fdb3f</onsuccess>
  </stage>
  <stage stageid="7e10faf5-8e4b-413d-9566-781a9d1fdb3f" name="Resume" type="Resume">
    <narrative>
    </narrative>
    <displayx>-45</displayx>
    <displayy>330</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>08bd5781-ba12-4ef3-b9f7-d6627a8c2a5a</onsuccess>
  </stage>
  <stage stageid="08bd5781-ba12-4ef3-b9f7-d6627a8c2a5a" name="Release &quot;Lock 1&quot; with correct token" type="Action">
    <narrative>Releases the lock(s) associated with the given name and token</narrative>
    <displayx>-45</displayx>
    <displayy>390</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="[Test Comment]" />
      <input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token II]" />
      <input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" />
      <input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" />
    </inputs>
    <onsuccess>f312e652-90a9-43b1-a849-9c144b91dfb1</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" />
  </stage>
  <stage stageid="f312e652-90a9-43b1-a849-9c144b91dfb1" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>150</displayx>
    <displayy>390</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>5c0ad9f1-69b8-40cd-9d1e-4cb2b116ceb2</onsuccess>
  </stage>
  <stage stageid="5c0ad9f1-69b8-40cd-9d1e-4cb2b116ceb2" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>150</displayx>
    <displayy>-150</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>ad4f8ee9-ee1a-48d3-8af9-e20265f2f7bd</onsuccess>
  </stage>
  <stage stageid="ad4f8ee9-ee1a-48d3-8af9-e20265f2f7bd" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>-150</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>db371758-fde5-48b9-bdc4-cf1b1e20befb</onsuccess>
  </stage>
  <stage stageid="db371758-fde5-48b9-bdc4-cf1b1e20befb" name="Query Lock 1" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>240</displayx>
    <displayy>-120</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>10cc9990-d2df-4a05-9c0a-d5bcfc5393ad</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="3d02174c-de09-4903-a2ec-5d8da5777953" name="Acquire &quot;Lock 1&quot;" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>240</displayx>
    <displayy>15</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token" />
    </outputs>
    <onsuccess>606ee375-c9bc-4241-9a97-60a52b7bd52b</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="40d99061-210d-4b7a-a6da-92171a799b7b" name="Acquire &quot;Lock 1&quot; again" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>240</displayx>
    <displayy>330</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="MakeTimeSpan(0,0,0,3,0)" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="&quot;Relocked&quot;" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token II" />
    </outputs>
    <onsuccess>47a7cea1-1ac3-44f8-aecf-430330284e49</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="10cc9990-d2df-4a05-9c0a-d5bcfc5393ad" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>-75</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>b36a96c0-e85c-41fe-80a7-266ef3648de7</ontrue>
    <onfalse>9cb18cf3-1ec7-4d45-9595-e7522cbb3765</onfalse>
  </stage>
  <stage stageid="b36a96c0-e85c-41fe-80a7-266ef3648de7" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>-75</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' returns that Lock is held - it should have been released&quot;" />
  </stage>
  <stage stageid="9cb18cf3-1ec7-4d45-9595-e7522cbb3765" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>-30</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = [Test Comment]" />
    <ontrue>3d02174c-de09-4903-a2ec-5d8da5777953</ontrue>
    <onfalse>1018e3b3-58c9-41c9-99cb-1b6eff655f99</onfalse>
  </stage>
  <stage stageid="1018e3b3-58c9-41c9-99cb-1b6eff655f99" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>-30</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' should return comment : &quot; &amp; [Test Comment] &amp; &quot;; but returned : &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="2a307772-406c-40e2-a4a6-9e375045b6fe" name="Test Comment" type="Data">
    <narrative>
    </narrative>
    <displayx>-225</displayx>
    <displayy>60</displayy>
    <displaywidth>120</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue xml:space="preserve">Proper Lock</initialvalue>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="606ee375-c9bc-4241-9a97-60a52b7bd52b" name="Query Lock 1" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>240</displayx>
    <displayy>60</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>8d76380e-eb88-4d7c-a711-733314d1b431</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="8d76380e-eb88-4d7c-a711-733314d1b431" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>105</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>9a619364-de43-44e3-98a9-fd054d940bf8</ontrue>
    <onfalse>31f1fb98-427e-4027-a371-d5cc74106966</onfalse>
  </stage>
  <stage stageid="31f1fb98-427e-4027-a371-d5cc74106966" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>105</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' returns that Lock is free - it should be held now&quot;" />
  </stage>
  <stage stageid="9a619364-de43-44e3-98a9-fd054d940bf8" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>150</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;&quot;" />
    <ontrue>b8faa598-7910-464b-9e49-922c6c473006</ontrue>
    <onfalse>d61a763e-8826-4116-b807-0190e579e84c</onfalse>
  </stage>
  <stage stageid="d61a763e-8826-4116-b807-0190e579e84c" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>150</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' should return blank comment, but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="47a7cea1-1ac3-44f8-aecf-430330284e49" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>390</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>d6fb26be-4f93-41e1-9f22-e43973e8d094</onsuccess>
  </stage>
  <stage stageid="d6fb26be-4f93-41e1-9f22-e43973e8d094" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>435</displayx>
    <displayy>390</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>31068f63-f6cf-4071-af54-54f267815a63</onsuccess>
  </stage>
  <stage stageid="31068f63-f6cf-4071-af54-54f267815a63" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>435</displayx>
    <displayy>-150</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>370af450-6052-4be0-965d-6c6ad8103815</onsuccess>
  </stage>
  <stage stageid="b8faa598-7910-464b-9e49-922c6c473006" name="Query Lock 1 with token" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>240</displayx>
    <displayy>195</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="[Token]" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>5f844ded-1aa1-4c31-af41-bf5a6e12e984</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="5f844ded-1aa1-4c31-af41-bf5a6e12e984" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>240</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>55c6a3fd-276f-477c-8f1a-f3300b4146b3</ontrue>
    <onfalse>b006e331-1803-428a-b16d-32c6a7ef49f9</onfalse>
  </stage>
  <stage stageid="b006e331-1803-428a-b16d-32c6a7ef49f9" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>240</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with token returns that Lock is free - it should be held now&quot;" />
  </stage>
  <stage stageid="55c6a3fd-276f-477c-8f1a-f3300b4146b3" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>240</displayx>
    <displayy>285</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;&quot;" />
    <ontrue>40d99061-210d-4b7a-a6da-92171a799b7b</ontrue>
    <onfalse>07fe9a32-99c9-4a35-92c8-5a3f51eb33e5</onfalse>
  </stage>
  <stage stageid="07fe9a32-99c9-4a35-92c8-5a3f51eb33e5" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>375</displayx>
    <displayy>285</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with token should return blank comment, but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="370af450-6052-4be0-965d-6c6ad8103815" name="Query Lock 1 with (wrong) token" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>525</displayx>
    <displayy>-150</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="[Token]" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>f85f4846-3fe8-45d3-9449-739987eb31b3</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="f85f4846-3fe8-45d3-9449-739987eb31b3" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>-105</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>ffa8c324-5dce-4d82-b98c-9cce3452bb1f</ontrue>
    <onfalse>cf465b3e-90a9-4231-bf9f-e0efa816a0db</onfalse>
  </stage>
  <stage stageid="ffa8c324-5dce-4d82-b98c-9cce3452bb1f" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>-105</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with wrong token should return *not locked*&quot;" />
  </stage>
  <stage stageid="cf465b3e-90a9-4231-bf9f-e0efa816a0db" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>-60</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;Relocked&quot;" />
    <ontrue>d1bdc15d-c1e5-4f12-a444-32a71930fdc5</ontrue>
    <onfalse>448c0dc9-2190-481f-9a8d-c4e874998fb2</onfalse>
  </stage>
  <stage stageid="448c0dc9-2190-481f-9a8d-c4e874998fb2" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>-60</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with wrong token should have comment 'Relocked', but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="d1bdc15d-c1e5-4f12-a444-32a71930fdc5" name="Query Lock 1 with correct token" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>525</displayx>
    <displayy>-15</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="[Token II]" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>15009f0f-257e-4fa0-9b9f-78573c507e82</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="15009f0f-257e-4fa0-9b9f-78573c507e82" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>30</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>92aa1c68-17b3-495c-8dc9-94cf4631605e</ontrue>
    <onfalse>214757fa-a543-4808-982d-795e356e3905</onfalse>
  </stage>
  <stage stageid="214757fa-a543-4808-982d-795e356e3905" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>30</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with correct token returns that Lock is free - it should be held now&quot;" />
  </stage>
  <stage stageid="92aa1c68-17b3-495c-8dc9-94cf4631605e" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>75</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;Relocked&quot;" />
    <ontrue>b3c32674-bbf8-4896-9411-6976da7de17d</ontrue>
    <onfalse>e9b85ea6-055c-40d5-9f8f-2c931d61ea20</onfalse>
  </stage>
  <stage stageid="e9b85ea6-055c-40d5-9f8f-2c931d61ea20" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>75</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with correct token should have comment: 'Relocked', but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="b3c32674-bbf8-4896-9411-6976da7de17d" name="Query Lock 2 with preferred token" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>525</displayx>
    <displayy>120</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 2&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="[Preferred Token]" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>b59ffd10-1320-431d-a673-debfd7adc0d8</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="b59ffd10-1320-431d-a673-debfd7adc0d8" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>165</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>d4f7c9a3-a38a-4fab-aeab-4e7918fd2f68</ontrue>
    <onfalse>c52c9beb-9745-4279-b359-a18a4e2af0a2</onfalse>
  </stage>
  <stage stageid="c52c9beb-9745-4279-b359-a18a4e2af0a2" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>165</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 2' with correct token returns that Lock is free - it should be held now&quot;" />
  </stage>
  <stage stageid="d4f7c9a3-a38a-4fab-aeab-4e7918fd2f68" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>210</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;A Second Lock&quot;" />
    <ontrue>0e4549ca-a7ee-4225-8589-1e4079f35ef9</ontrue>
    <onfalse>b24a8611-d20e-4088-b64d-980b1204b6ad</onfalse>
  </stage>
  <stage stageid="b24a8611-d20e-4088-b64d-980b1204b6ad" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>210</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with correct token should have comment: 'Relocked', but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="0e4549ca-a7ee-4225-8589-1e4079f35ef9" name="Query nonexistent lock" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>525</displayx>
    <displayy>255</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;This lock should not actually exist&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>f7868df9-bca4-4ae5-a925-7a99922e63d1</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="f7868df9-bca4-4ae5-a925-7a99922e63d1" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>300</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>4b0cbf8e-74b7-4e57-9294-a2cb0918bc3c</ontrue>
    <onfalse>e8d498fd-e5f8-48b9-a9a9-c00aeef545ca</onfalse>
  </stage>
  <stage stageid="4b0cbf8e-74b7-4e57-9294-a2cb0918bc3c" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>300</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;Nonexistent lock is nonexistent. It should not be locked&quot;" />
  </stage>
  <stage stageid="e8d498fd-e5f8-48b9-a9a9-c00aeef545ca" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>345</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;&quot;" />
    <ontrue>b20ea42d-292f-4f10-8ac5-fcaa830c0743</ontrue>
    <onfalse>00361999-c7e7-430f-bed3-3a52e7122c96</onfalse>
  </stage>
  <stage stageid="00361999-c7e7-430f-bed3-3a52e7122c96" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>660</displayx>
    <displayy>345</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;Nonexistent lock should have a blank comment. Found : &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="13d172c0-e3b6-49d8-b110-b48db3df4a22" name="End1" type="End">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>330</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="494e6dfe-be61-4fd8-a53f-01f30a245b21" name="Note1" type="Note">
    <narrative>Both locks should be released at session end... v difficult to test for, though.</narrative>
    <displayx>810</displayx>
    <displayy>270</displayy>
    <displaywidth>150</displaywidth>
    <displayheight>60</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>13d172c0-e3b6-49d8-b110-b48db3df4a22</onsuccess>
  </stage>
  <stage stageid="b20ea42d-292f-4f10-8ac5-fcaa830c0743" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>525</displayx>
    <displayy>390</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>871f2991-ad10-4e57-8c52-e6207315454e</onsuccess>
  </stage>
  <stage stageid="871f2991-ad10-4e57-8c52-e6207315454e" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>720</displayx>
    <displayy>390</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>2a29ab5e-bb4c-44cf-aa94-461486e4c1fd</onsuccess>
  </stage>
  <stage stageid="2a29ab5e-bb4c-44cf-aa94-461486e4c1fd" name="anchor3" type="Anchor">
    <narrative>
    </narrative>
    <displayx>720</displayx>
    <displayy>-150</displayy>
    <displaywidth>10</displaywidth>
    <displayheight>10</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>1c9d7f38-8e88-457c-8a44-558973d85062</onsuccess>
  </stage>
  <stage stageid="d7d516d2-88ef-43fb-afb8-0617a67e33e7" name="Release Locks 1 &amp; 3 with token only" type="Action">
    <narrative>Releases the lock(s) associated with the given name and token</narrative>
    <displayx>810</displayx>
    <displayy>-60</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the specific lock to be released. Default behaviour is to release all locks with the given token." expr="" />
      <input type="text" name="Comment" narrative="The comments to set on the lock(s)" expr="&quot;Releasing via Token II&quot;" />
      <input type="text" name="Token" narrative="The token associated with the lock(s) to be released. Mandatory parameter." expr="[Token II]" />
      <input type="flag" name="All Sessions" friendlyname="All Sessions" narrative="True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False" expr="" />
      <input type="flag" name="Keep Environment Lock" friendlyname="Keep Environment Lock" narrative="The environment lock will be kept after that lock is released. Default behaviour is to delete the lock." expr="True" />
    </inputs>
    <onsuccess>4d036ffc-446c-4db3-bca7-56b966472ae4</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Release Lock" />
  </stage>
  <stage stageid="1c9d7f38-8e88-457c-8a44-558973d85062" name="Acquire &quot;Lock 3&quot; with Token II" type="Action">
    <narrative>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</narrative>
    <displayx>810</displayx>
    <displayy>-150</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 3&quot;" />
      <input type="timespan" name="Timeout" narrative="The maximum amount of time to await the lock. Default is to wait forever" expr="" />
      <input type="text" name="Preferred Token" narrative="The preferred token to use for the lock. Default behaviour is to generate a new unique token." expr="[Token II]" />
      <input type="text" name="Comment" narrative="The comments to set on the lock" expr="&quot;Acquired with Token II&quot;" />
    </inputs>
    <outputs>
      <output type="text" name="Token" narrative="The token registered against the lock. This will be empty if the lock could not be acquired" stage="Token III" />
    </outputs>
    <onsuccess>471a4060-5b0c-4699-9aff-fbbcbed2f79b</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Acquire Lock" />
  </stage>
  <stage stageid="b66d284d-3751-40a4-8a27-c4028da03955" name="Token III" type="Data">
    <narrative>
    </narrative>
    <displayx>930</displayx>
    <displayy>-150</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="471a4060-5b0c-4699-9aff-fbbcbed2f79b" name="Tokens Match?" type="Decision">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>-105</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Token II] = [Token III]" />
    <ontrue>d7d516d2-88ef-43fb-afb8-0617a67e33e7</ontrue>
    <onfalse>235fc85d-2b28-42d5-9c3d-83ebcee83c41</onfalse>
  </stage>
  <stage stageid="235fc85d-2b28-42d5-9c3d-83ebcee83c41" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>930</displayx>
    <displayy>-105</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Lock Exception" detail="&quot;Token 3 should have been locked with &quot; &amp; [Token II] &amp; &quot;; instead we got &quot; &amp; [Token III]" />
  </stage>
  <stage stageid="4d036ffc-446c-4db3-bca7-56b966472ae4" name="Query Lock 1" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>810</displayx>
    <displayy>-15</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 1&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>c17767c4-1226-423e-b2a3-3decb1e3619e</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="c17767c4-1226-423e-b2a3-3decb1e3619e" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>30</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>93ebf6d9-bab1-438b-a0d2-a6e08ae893c1</ontrue>
    <onfalse>dcbfad9e-f0ac-4d97-95b3-4faa18351ba1</onfalse>
  </stage>
  <stage stageid="93ebf6d9-bab1-438b-a0d2-a6e08ae893c1" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>945</displayx>
    <displayy>30</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' was released via token, but is still locked&quot;" />
  </stage>
  <stage stageid="dcbfad9e-f0ac-4d97-95b3-4faa18351ba1" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>75</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;Releasing via Token II&quot;" />
    <ontrue>ae490cee-baed-4603-85d3-ba83812a0575</ontrue>
    <onfalse>4a5f6903-7d1b-4624-adc9-81770cf240a5</onfalse>
  </stage>
  <stage stageid="4a5f6903-7d1b-4624-adc9-81770cf240a5" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>945</displayx>
    <displayy>75</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 1' with should have comment 'Releasing via Token II', but returned: &quot; &amp; [Comment]" />
  </stage>
  <stage stageid="ae490cee-baed-4603-85d3-ba83812a0575" name="Query Lock 3" type="Action">
    <narrative>Queries the current state of the lock</narrative>
    <displayx>810</displayx>
    <displayy>120</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="Name" narrative="The name of the required lock. Mandatory parameter." expr="&quot;Lock 3&quot;" />
      <input type="text" name="Token" narrative="The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all." expr="" />
    </inputs>
    <outputs>
      <output type="flag" name="Lock Held" narrative="Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise" stage="Lock Held" />
      <output type="text" name="Comment" narrative="The comment currently set on the lock, regardless of whether the lock is currently held" stage="Comment" />
    </outputs>
    <onsuccess>e42c36ac-6217-4fa9-ba72-d9634f97c5af</onsuccess>
    <resource object="BluePrism.AutomateAppCore.clsEnvironmentLockingBusinessObject" action="Query Lock" />
  </stage>
  <stage stageid="e42c36ac-6217-4fa9-ba72-d9634f97c5af" name="Locked?" type="Decision">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>165</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Lock Held]" />
    <ontrue>24e9ce5d-c2e8-46a3-b92c-0e1e50622854</ontrue>
    <onfalse>92d00029-aaf5-433e-b9c0-8b57c6b91425</onfalse>
  </stage>
  <stage stageid="24e9ce5d-c2e8-46a3-b92c-0e1e50622854" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>945</displayx>
    <displayy>165</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 3' was released via token, but is still locked&quot;" />
  </stage>
  <stage stageid="92d00029-aaf5-433e-b9c0-8b57c6b91425" name="Comment correct?" type="Decision">
    <narrative>
    </narrative>
    <displayx>810</displayx>
    <displayy>210</displayy>
    <displaywidth>90</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Comment] = &quot;Releasing via Token II&quot;" />
    <ontrue>494e6dfe-be61-4fd8-a53f-01f30a245b21</ontrue>
    <onfalse>2a141cd5-8811-4f2d-826e-e0d03c67cb6a</onfalse>
  </stage>
  <stage stageid="2a141cd5-8811-4f2d-826e-e0d03c67cb6a" name="Exception" type="Exception">
    <narrative>
    </narrative>
    <displayx>945</displayx>
    <displayy>210</displayy>
    <displaywidth>60</displaywidth>
    <displayheight>30</displayheight>
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="Query Exception" detail="&quot;'Lock 3' with should have comment 'Releasing via Token II', but returned: &quot; &amp; [Comment]" />
  </stage>
</process>