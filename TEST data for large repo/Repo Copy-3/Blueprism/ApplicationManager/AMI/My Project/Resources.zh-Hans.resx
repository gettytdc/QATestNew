<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NotConnected" xml:space="preserve">
    <value>T_Not connected</value>
  </data>
  <data name="WindowsApplication" xml:space="preserve">
    <value>T_Windows Application</value>
  </data>
  <data name="IfNecessaryEnterAnyOptionsSpecificToThisTargetApplicationAsDirectedByBluePrismT" xml:space="preserve">
    <value>T_If necessary, enter any options specific to this target application, as directed by Blue Prism technical support.</value>
  </data>
  <data name="ProvideTheTimeThatTheObjectWillWaitForTheApplicationToRespondBeforeThrowingAnEx" xml:space="preserve">
    <value>T_Provide the time that the object will wait for the application to respond before throwing an exception</value>
  </data>
  <data name="SelectTheApplicationManagerMode" xml:space="preserve">
    <value>T_Select the Application Manager mode</value>
  </data>
  <data name="PleaseEnterTheURLOfYourStartPageAndAnyOtherCommandLineParametersToBeUsedWhenThe" xml:space="preserve">
    <value>T_Please enter the URL of your start page, and any other command-line parameters to be used when the browser is launched.</value>
  </data>
  <data name="PleaseEnterThePathToYourBrowser" xml:space="preserve">
    <value>T_Please enter the path to your browser</value>
  </data>
  <data name="IfNotFoundForAttachingYourBrowserMayBeLaunchedAutomaticallyIfDesiredEnterThePat" xml:space="preserve">
    <value>T_If not found for attaching, your browser may be launched automatically if desired. T_Enter the path of your browser application, or leave blank to receive an error in this situation instead.</value>
  </data>
  <data name="EnterTheTitleOfTheTargetPageTheWildcardsAreValidAWildcardWillAutomaticallyBeAdd" xml:space="preserve">
    <value>T_Enter the title of the target page (the wildcards *, ?, # are valid). T_A * wildcard will automatically be added to the end.</value>
  </data>
  <data name="SessionIdentifier" xml:space="preserve">
    <value>T_Session Identifier</value>
  </data>
  <data name="PathToSessionFile" xml:space="preserve">
    <value>T_Path to session file</value>
  </data>
  <data name="RMDInterfacePort" xml:space="preserve">
    <value>T_RMD Interface Port</value>
  </data>
  <data name="HelpApplicationParametersHtmSessionFile" xml:space="preserve">
    <value>T_helpApplicationParameters.htm#SessionFile</value>
  </data>
  <data name="PleaseChooseTheAppropriateVariantOfYourAttachmateEmulatorBelow" xml:space="preserve">
    <value>T_Please choose the appropriate variant of your Attachmate emulator below</value>
  </data>
  <data name="TimeoutIntervalInSecondsDuringWaitOperations" xml:space="preserve">
    <value>T_Timeout interval (in seconds) during wait operations</value>
  </data>
  <data name="PollingIntervalInMillisecondsDuringWaitOperations" xml:space="preserve">
    <value>T_Polling interval (in milliseconds) during wait operations</value>
  </data>
  <data name="SessionType" xml:space="preserve">
    <value>T_Session Type</value>
  </data>
  <data name="CallingConvention" xml:space="preserve">
    <value>T_Calling Convention</value>
  </data>
  <data name="DLLName" xml:space="preserve">
    <value>T_DLL Name</value>
  </data>
  <data name="APICodePage" xml:space="preserve">
    <value>T_API Code Page</value>
  </data>
  <data name="ExcludeHTCComponentsImprovesPerformance" xml:space="preserve">
    <value>T_Exclude HTC components (improves performance)</value>
  </data>
  <data name="EnableJavaIntegrationTechniques" xml:space="preserve">
    <value>T_Enable java integration techniques</value>
  </data>
  <data name="OnlyInteractWithElementsOnTheActiveBrowserTab" xml:space="preserve">
    <value>T_Only interact with elements on the active browser tab</value>
  </data>
  <data name="PleaseEnterTheURLOfYourStartPageAndAnyOtherCommandLineParameters" xml:space="preserve">
    <value>T_Please enter the URL of your start page, and any other command-line parameters.</value>
  </data>
  <data name="EnterTheWindowTitleOfTheTargetApplicationTheWildcardsAreValid" xml:space="preserve">
    <value>T_Enter the window title of the target application (the wildcards *, ?, # are valid)</value>
  </data>
  <data name="EnterTheCommandLineParametersIfAnyToBePassedWhenTheSpecifiedExecutableIsLaunched" xml:space="preserve">
    <value>T_Enter the command line parameters (if any) to be passed, when the specified executable is launched</value>
  </data>
  <data name="EnterTheWorkingDirectoryWhichTheTargetApplicationWillUse" xml:space="preserve">
    <value>T_Enter the working directory which the target application will use</value>
  </data>
  <data name="EnterTheCommandLineParametersIfAnyToBePassedToTheTargetApplication" xml:space="preserve">
    <value>T_Enter the command line parameters (if any) to be passed to the target application</value>
  </data>
  <data name="EnterThePathToTheApplicationSJARFileOrUseTheBrowseButton" xml:space="preserve">
    <value>T_Enter the path to the application's JAR file, or use the Browse button</value>
  </data>
  <data name="RestrictToNonInvasiveAutomationTechniques" xml:space="preserve">
    <value>T_Disable invasive techniques (hooking)</value>
  </data>
  <data name="EnterThePathToTheApplicationExecutableOrUseTheBrowseButton" xml:space="preserve">
    <value>T_Enter the path to the application executable, or use the Browse button</value>
  </data>
  <data name="EnterTheWindowsProcessNameOfTheTargetApplication" xml:space="preserve">
    <value>T_Enter the Windows process name of the target application</value>
  </data>
  <data name="IfNotFoundForAttachingYourApplicationMayBeLaunchedAutomaticallyIfDesiredEnterTh" xml:space="preserve">
    <value>T_If not found for attaching, your application may be launched automatically if desired. T_Enter the path of your application executable, or leave blank to receive an error in this situation instead.</value>
  </data>
  <data name="IfNotFoundForAttachingYourApplicationMayBeLaunchedAutomaticallyIfDesiredEn_java" xml:space="preserve">
    <value>T_If not found for attaching, your application may be launched automatically if desired. T_Enter the path of your java application, or leave blank to receive an error in this situation instead.</value>
  </data>
  <data name="ABrowserThatIsLaunchedFromAnExecutableFile" xml:space="preserve">
    <value>T_A browser that is launched from an executable file</value>
  </data>
  <data name="ABrowserWhichIsAlreadyRunning" xml:space="preserve">
    <value>T_A browser which is already running</value>
  </data>
  <data name="BrowserBasedApplicationChromeFirefox" xml:space="preserve">
    <value>T_Browser-based Application (Chrome, Firefox or Edge Chromium)</value>
  </data>
  <data name="HostAccessWinHLLAPI" xml:space="preserve">
    <value>T_HostAccess (WinHLLAPI)</value>
  </data>
  <data name="RocketPASSPORTCOMAPI" xml:space="preserve">
    <value>T_Rocket PASSPORT (COM API)</value>
  </data>
  <data name="RMDHTTPXML" xml:space="preserve">
    <value>T_RMD (HTTP/XML)</value>
  </data>
  <data name="NDLActiveConductorHLLAPI" xml:space="preserve">
    <value>T_NDL Active Conductor (HLLAPI)</value>
  </data>
  <data name="HPTeemtalkEHLLAPI" xml:space="preserve">
    <value>T_HP Teemtalk (EHLLAPI)</value>
  </data>
  <data name="EricomPowerTermInterConnectHLLAPI" xml:space="preserve">
    <value>T_Ericom PowerTerm InterConnect (HLLAPI)</value>
  </data>
  <data name="OpenTextHostExplorerFormerlyHummingbirdEHLLAPI" xml:space="preserve">
    <value>T_OpenText HostExplorer (formerly Hummingbird) (EHLLAPI)</value>
  </data>
  <data name="OpenTextHostExplorerFormerlyHummingbirdCOMAPI" xml:space="preserve">
    <value>T_OpenText HostExplorer (formerly Hummingbird) (COM API)</value>
  </data>
  <data name="MicroFocusRumbaEHLLAPI" xml:space="preserve">
    <value>T_Micro Focus Rumba (EHLLAPI)</value>
  </data>
  <data name="MicroFocusReflectionForDesktop16NETAPI" xml:space="preserve">
    <value>T_Micro Focus Reflection for Desktop 16 (.NET API)</value>
  </data>
  <data name="MicroFocusReflection9XAndEarlierCOMAPI" xml:space="preserve">
    <value>T_Micro Focus Reflection 9.x and earlier (COM API)</value>
  </data>
  <data name="MicroFocusInfoconnectWinHLLAPI" xml:space="preserve">
    <value>T_Micro Focus Infoconnect (WinHLLAPI)</value>
  </data>
  <data name="MicroFocusAttachmateExtraXTreme93ATMAPI32" xml:space="preserve">
    <value>T_Micro Focus Attachmate Extra! T_X-treme 9.3 (ATMAPI32)</value>
  </data>
  <data name="IBMPersonalCommunicatorCOMAPI" xml:space="preserve">
    <value>T_IBM Personal Communicator (COM API)</value>
  </data>
  <data name="IBMIAccessEHLLAPI" xml:space="preserve">
    <value>T_IBM iAccess For Windows (We do not currently support IBM iAccess Client Solutions) (EHLLAPI)</value>
  </data>
  <data name="GenericHLLAPI" xml:space="preserve">
    <value>T_Generic HLLAPI</value>
  </data>
  <data name="MainframeApplication" xml:space="preserve">
    <value>T_Mainframe Application</value>
  </data>
  <data name="BrowserBasedApplicationInternetExplorer" xml:space="preserve">
    <value>T_Browser-based Application (Internet Explorer)</value>
  </data>
  <data name="MyApplicationWillAlreadyBeRunningIWantToAttachToAnExistingInstance" xml:space="preserve">
    <value>T_My application will already be running - I want to attach to an existing instance</value>
  </data>
  <data name="MyApplicationIsLaunchedFromAnExecutableFile" xml:space="preserve">
    <value>T_My application is launched from an executable file</value>
  </data>
  <data name="JavaBasedApplication" xml:space="preserve">
    <value>T_Java-based Application</value>
  </data>
  <data name="IBMPersonalCommunicatorHLLAPI" xml:space="preserve">
    <value>T_IBM Personal Communicator (HLLAPI)</value>
  </data>
  <data name="DLLEntryPoint" xml:space="preserve">
    <value>T_DLL Entry Point</value>
  </data>
  <data name="NeoWareLaterWallDataRumbaTerminalEmulatorViaTheHLLAPIInterfaceWithVersion6Rumba" xml:space="preserve">
    <value>T_NeoWare (later WallData) Rumba terminal emulator, via the HLLAPI interface. T_With version 6 (Rumba 2000) the working directory must be the one where the emulator's HLLAPI DLLs reside, otherwise attempting to connect results in an 'invalid presentation space' error message.</value>
  </data>
  <data name="PericomLaterHPTeemTalkTerminalEmulatorViaTheHLLAPIInterfaceVersion4OfTeemTalkDo" xml:space="preserve">
    <value>T_Pericom (later HP) TeemTalk terminal emulator, via the HLLAPI interface. T_Version 4 of TeemTalk does not work with HLLAPI when using IBM 5250 emulation. T_(See issue #4976). T_It is known to work with IBM 3270. T_The status for other emulation modes on that version is unknown.Support for HLLAPI was completely removed from TeemTalk from version 7 onwards. T_We have never tested with  versions 5 and 6.</value>
  </data>
  <data name="EricomPowerTermTerminalEmulatorViaStandardHLLAPIInterfaceVersion6IsNotSupported" xml:space="preserve">
    <value>T_Ericom PowerTerm terminal emulator, via standard HLLAPI interface. T_Version 6 is not supported due to a flawed HLLAPI implementation. T_Version 9 is fully supported. T_The status of versions 7 and 8 is unknown.</value>
  </data>
  <data name="UnableToLoadUnrecognisedApplicationType0" xml:space="preserve">
    <value>T_Unable to load unrecognised application type {0}</value>
  </data>
  <data name="MissingApplicationTypeID" xml:space="preserve">
    <value>T_Missing application type ID</value>
  </data>
  <data name="ExecutableFilesExeExe" xml:space="preserve">
    <value>T_Executable Files (*.exe)|*.exe</value>
  </data>
  <data name="PassportMainframeSessionFilesZwsZws" xml:space="preserve">
    <value>T_Passport Mainframe Session Files (*.zws)|*.zws</value>
  </data>
  <data name="HummingbirdMainframeSessionFilesHepHep" xml:space="preserve">
    <value>T_Hummingbird Mainframe Session Files (*.hep)|*.hep</value>
  </data>
  <data name="AttachmateReflectionSettingsFilesRd3xRd5xRd3xRd5x" xml:space="preserve">
    <value>T_Attachmate Reflection Settings Files (*.rd3x, *.rd5x)|*.rd3x;*.rd5x</value>
  </data>
  <data name="IBMMainframeSessionFilesWsWs" xml:space="preserve">
    <value>T_IBM Mainframe Session Files (*.ws)|*.ws</value>
  </data>
  <data name="JavaApplicationsJarJar" xml:space="preserve">
    <value>T_Java Applications (*.jar)|*.jar</value>
  </data>
  <data name="AttachmateReflectionSettingsFilesR2wR2w" xml:space="preserve">
    <value>T_Attachmate Reflection Settings Files (*.r2w)|*.r2w</value>
  </data>
  <data name="InternalAMIMisconfigurationUnknownMessageType0" xml:space="preserve">
    <value>T_Internal AMI misconfiguration - unknown message type {0}</value>
  </data>
  <data name="NoTargetApplicationInformationHasBeenSet" xml:space="preserve">
    <value>T_No target application information has been set</value>
  </data>
  <data name="NotConnected_2" xml:space="preserve">
    <value>T_Not Connected</value>
  </data>
  <data name="ExternalBluePrismAddressSize" xml:space="preserve">
    <value>T_External, Blue Prism address size</value>
  </data>
  <data name="ExternalCitrix32BitMode" xml:space="preserve">
    <value>T_External Citrix 32-bit mode</value>
  </data>
  <data name="ExternalCitrix64BitMode" xml:space="preserve">
    <value>T_External Citrix 64-bit mode</value>
  </data>
  <data name="ExternalOSAddressSize" xml:space="preserve">
    <value>T_External, OS address size</value>
  </data>
  <data name="External64BitMode" xml:space="preserve">
    <value>T_External, 64 bit mode</value>
  </data>
  <data name="External32BitMode" xml:space="preserve">
    <value>T_External, 32 bit mode</value>
  </data>
  <data name="EmbeddedDefault" xml:space="preserve">
    <value>T_Embedded (default)</value>
  </data>
  <data name="LocaleVariant0" xml:space="preserve">
    <value>T_Locale variant [0]</value>
  </data>
  <data name="KeaForHP" xml:space="preserve">
    <value>T_Kea! for HP</value>
  </data>
  <data name="Kea" xml:space="preserve">
    <value>T_Kea!</value>
  </data>
  <data name="Rally" xml:space="preserve">
    <value>T_Rally!</value>
  </data>
  <data name="Extra" xml:space="preserve">
    <value>T_Extra!</value>
  </data>
  <data name="Enhanced" xml:space="preserve">
    <value>T_Enhanced</value>
  </data>
  <data name="Standard" xml:space="preserve">
    <value>T_Standard</value>
  </data>
  <data name="WindowsAPI" xml:space="preserve">
    <value>T_Windows API</value>
  </data>
  <data name="CDeclaration" xml:space="preserve">
    <value>T_C Declaration</value>
  </data>
  <data name="Irma" xml:space="preserve">
    <value>T_Irma</value>
  </data>
  <data name="ActionTerminateIsNotSupportedForApplicationOfType0" xml:space="preserve">
    <value>T_Action 'Terminate' is not supported for application of type '{0}'</value>
  </data>
  <data name="CouldNotLoad01" xml:space="preserve">
    <value>T_Could not load {0} - {1}</value>
  </data>
  <data name="ElementNumber" xml:space="preserve">
    <value>T_Element Number</value>
  </data>
  <data name="The1basedNumberIndicatingWhichElementOfTheListRegionToActOnDefaultIs1" xml:space="preserve">
    <value>T_The 1-based number indicating which element of the list region to act on. T_Default is 1</value>
  </data>
  <data name="ColumnNumber" xml:space="preserve">
    <value>T_Column Number</value>
  </data>
  <data name="The1basedColumnNumberIndicatingWhichColumnOfTheGridRegionToActOnDefaultIs1" xml:space="preserve">
    <value>T_The 1-based column number indicating which column of the grid region to act on. T_Default is 1</value>
  </data>
  <data name="RowNumber" xml:space="preserve">
    <value>T_Row Number</value>
  </data>
  <data name="The1basedRowNumberIndicatingWhichRowOfTheGridRegionToActOnDefaultIs1" xml:space="preserve">
    <value>T_The 1-based row number indicating which row of the grid region to act on. T_Default is 1</value>
  </data>
  <data name="GetWindowAttribute" xml:space="preserve">
    <value>T_Get Window Attribute</value>
  </data>
  <data name="GetTheCurrentValueOfAWindowAttribute" xml:space="preserve">
    <value>T_Get the current value of a window attribute.</value>
  </data>
  <data name="AttributeName" xml:space="preserve">
    <value>T_Attribute Name</value>
  </data>
  <data name="TheNameOfTheAttributeToGet" xml:space="preserve">
    <value>T_The name of the attribute to get.</value>
  </data>
  <data name="GetAAAttribute" xml:space="preserve">
    <value>T_Get AA Attribute</value>
  </data>
  <data name="GetTheCurrentValueOfAnActiveAccessibilityAttribute" xml:space="preserve">
    <value>T_Get the current value of an Active Accessibility attribute.</value>
  </data>
  <data name="GetHTMLAttribute" xml:space="preserve">
    <value>T_Get HTML Attribute</value>
  </data>
  <data name="GetTheCurrentValueOfAnHTMLAttribute" xml:space="preserve">
    <value>T_Get the current value of an HTML attribute.</value>
  </data>
  <data name="GetJABAttribute" xml:space="preserve">
    <value>T_Get JAB Attribute</value>
  </data>
  <data name="GetTheCurrentValueOfAJavaAccessBridgeAttribute" xml:space="preserve">
    <value>T_Get the current value of a Java Access Bridge attribute.</value>
  </data>
  <data name="GetUIAAttribute" xml:space="preserve">
    <value>T_Get UIA Attribute</value>
  </data>
  <data name="GetTheCurrentValueOfAUIAutomationAttribute" xml:space="preserve">
    <value>T_Get the current value of a UI Automation attribute.</value>
  </data>
  <data name="GetBounds" xml:space="preserve">
    <value>T_Get Bounds</value>
  </data>
  <data name="GetsInformationAboutTheBoundingRectangleOfTheElementInCoordinatesRelativeToThePa" xml:space="preserve">
    <value>T_Gets information about the bounding rectangle of the element, in coordinates relative to the parent.</value>
  </data>
  <data name="GetRelativeBounds" xml:space="preserve">
    <value>T_Get Relative Bounds</value>
  </data>
  <data name="GetScreenBounds" xml:space="preserve">
    <value>T_Get Screen Bounds</value>
  </data>
  <data name="GetsInformationAboutTheBoundingRectangleOfTheElementInScreenCoordinates" xml:space="preserve">
    <value>T_Gets information about the bounding rectangle of the element, in screen coordinates.</value>
  </data>
  <data name="ClickWindow" xml:space="preserve">
    <value>T_Click Window</value>
  </data>
  <data name="SendAClickMessageToTheWindowAtTheSpecifiedPositionThePositionIsRelativeToTheTopL" xml:space="preserve">
    <value>T_Send a click message to the window at the specified position. T_The position is relative to the top left of the window.</value>
  </data>
  <data name="TheXCoordinateOfThePointAtWhichToClickRelativeToTheWindow" xml:space="preserve">
    <value>T_The X coordinate of the point at which to click, relative to the window</value>
  </data>
  <data name="TheYCoordinateOfThePointAtWhichToClickRelativeToTheWindow" xml:space="preserve">
    <value>T_The Y coordinate of the point at which to click, relative to the window</value>
  </data>
  <data name="MouseButton" xml:space="preserve">
    <value>T_Mouse Button</value>
  </data>
  <data name="OptionalTheMouseButtonToUseValidValuesAreLeftAndRightANullValueImpliesLeft" xml:space="preserve">
    <value>T_Optional: the mouse button to use. T_Valid values are 'left' and 'right'; a null value implies 'left'</value>
  </data>
  <data name="ClickWindowCentre" xml:space="preserve">
    <value>T_Click Window Centre</value>
  </data>
  <data name="SendAClickMessageToTheCentreOfTheWindow" xml:space="preserve">
    <value>T_Send a click message to the centre of the window.</value>
  </data>
  <data name="ClickTheElementAtTheSpecifiedPositionUsingAGlobalMouseClickThePositionIsRelative" xml:space="preserve">
    <value>T_Click the element at the specified position, using a global mouse click. T_The position is relative to the top left of the element's bounding rectangle. T_The mouse cursor will appear to jump across the screen during this method.</value>
  </data>
  <data name="GlobalMouseClick" xml:space="preserve">
    <value>T_Global Mouse Click</value>
  </data>
  <data name="GlobalDoubleMouseClick" xml:space="preserve">
    <value>T_Global Double Mouse Click</value>
  </data>
  <data name="DoubleClickTheElementAtTheSpecifiedPositionUsingAGlobalMouseClickThePositionIsRe" xml:space="preserve">
    <value>T_Double click the element at the specified position, using a global mouse click. T_The position is relative to the top left of the element's bounding rectangle. T_The mouse cursor will appear to jump across the screen during this method.</value>
  </data>
  <data name="GlobalMouseClickCentre" xml:space="preserve">
    <value>T_Global Mouse Click Centre</value>
  </data>
  <data name="ClickTheElementAtItsCentreUsingAGlobalMouseClick" xml:space="preserve">
    <value>T_Click the element at its centre, using a global mouse click.</value>
  </data>
  <data name="GlobalDoubleMouseClickCentre" xml:space="preserve">
    <value>T_Global Double Mouse Click Centre</value>
  </data>
  <data name="DoubleClickTheElementAtItsCentreUsingAGlobalMouseClick" xml:space="preserve">
    <value>T_Double click the element at its centre, using a global mouse click.</value>
  </data>
  <data name="ClickTheRegionAtTheSpecifiedPositionUsingAGlobalMouseClickThePositionIsRelativeT" xml:space="preserve">
    <value>T_Click the region at the specified position, using a global mouse click. T_The position is relative to the top left of the region. T_The mouse cursor will appear to jump across the screen during this method.</value>
  </data>
  <data name="ClickTheRegionAtItsCentreUsingAGlobalMouseClickTheMouseCursorWillAppearToJumpAcr" xml:space="preserve">
    <value>T_Click the region at its centre, using a global mouse click. T_The mouse cursor will appear to jump across the screen during this method.</value>
  </data>
  <data name="ClickCentre" xml:space="preserve">
    <value>T_Click Centre</value>
  </data>
  <data name="ClickTheParentWindowOfTheRegionAtTheCentreOfTheRegion" xml:space="preserve">
    <value>T_Click the parent window of the region at the centre of the region.</value>
  </data>
  <data name="StartDrag" xml:space="preserve">
    <value>T_Start Drag</value>
  </data>
  <data name="StartADragdropOperationByDraggingFromTheCentreOfTheRegionMustBeFollowedByADropOp" xml:space="preserve">
    <value>T_Start a drag-drop operation by dragging from the centre of the region. T_Must be followed by a drop operation on another element.</value>
  </data>
  <data name="DropOnto" xml:space="preserve">
    <value>T_Drop Onto</value>
  </data>
  <data name="EndADragdropOperationByDroppingOntoTheRegionAtItsCentreMustBePrecededByADragOper" xml:space="preserve">
    <value>T_End a drag-drop operation by dropping onto the region, at its centre. T_Must be preceded by a drag operation on another element.</value>
  </data>
  <data name="Drag" xml:space="preserve">
    <value>T_Drag</value>
  </data>
  <data name="StartDraggingFromAGivenPositionOverTheWindow" xml:space="preserve">
    <value>T_Start dragging from a given position over the window</value>
  </data>
  <data name="TheXCoordinateOfThePointAtWhichToStartDraggingRelativeToTheWindow" xml:space="preserve">
    <value>T_The X coordinate of the point at which to start dragging, relative to the window</value>
  </data>
  <data name="TheYCoordinateOfThePointAtWhichToStartDraggingRelativeToTheWindow" xml:space="preserve">
    <value>T_The Y coordinate of the point at which to start dragging, relative to the window</value>
  </data>
  <data name="Drop" xml:space="preserve">
    <value>T_Drop</value>
  </data>
  <data name="DropAtTheGivenPositionOverTheWindowMustFollowADrag" xml:space="preserve">
    <value>T_Drop at the given position over the window - must follow a drag</value>
  </data>
  <data name="TheXCoordinateOfThePointAtWhichToPerformTheDropRelativeToTheWindow" xml:space="preserve">
    <value>T_The X coordinate of the point at which to perform the drop, relative to the window</value>
  </data>
  <data name="TheYCoordinateOfThePointAtWhichToPerformTheDropRelativeToTheWindow" xml:space="preserve">
    <value>T_The Y coordinate of the point at which to perform the drop, relative to the window</value>
  </data>
  <data name="DragListviewItem" xml:space="preserve">
    <value>T_Drag Listview Item</value>
  </data>
  <data name="StartDraggingTheListviewItemWithTheSpecifiedText" xml:space="preserve">
    <value>T_Start dragging the listview item with the specified text</value>
  </data>
  <data name="ItemText" xml:space="preserve">
    <value>T_Item Text</value>
  </data>
  <data name="TheTextOfTheListviewItemToBeDraggedIfNotUniqueThenTheFirstMatchingItemFoundWillB" xml:space="preserve">
    <value>T_The text of the listview item to be dragged. T_If not unique, then the first matching item found will be dragged.</value>
  </data>
  <data name="DropOntoListviewItem" xml:space="preserve">
    <value>T_Drop Onto Listview Item</value>
  </data>
  <data name="DropOntoTheListviewItemWithTheSpecifiedTextMustFollowADrag" xml:space="preserve">
    <value>T_Drop onto the listview item with the specified text - must follow a drag</value>
  </data>
  <data name="TheTextOfTheListviewItemOntoWhichTheDropShouldBePerformedIfNotUniqueThenTheFirst" xml:space="preserve">
    <value>T_The text of the listview item onto which the drop should be performed. T_If not unique, then the first matching item found will be chosen.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>T_Close</value>
  </data>
  <data name="AsksAWindowToClose" xml:space="preserve">
    <value>T_Asks a window to close.</value>
  </data>
  <data name="Focus" xml:space="preserve">
    <value>T_Focus</value>
  </data>
  <data name="Hover" xml:space="preserve">
    <value>T_Hover</value>
  </data>
  <data name="HoverMouseOnElement" xml:space="preserve">
    <value>T_Global Mouse Hover</value>
  </data>
  <data name="FocusesAnHTMLElement" xml:space="preserve">
    <value>T_Focuses an HTML element.</value>
  </data>
  <data name="HoversOverAnHTMLElement" xml:space="preserve">
    <value>T_Hovers over an HTML element.</value>
  </data>
  <data name="HoverMouseOnAnHTMLElement" xml:space="preserve">
    <value>T_Moves the mouse over an HTML element to simulate hover. T_This action requires that the element is in view and the application is in the screen foreground.</value>
  </data>
  <data name="Press" xml:space="preserve">
    <value>T_Press</value>
  </data>
  <data name="PressAButton" xml:space="preserve">
    <value>T_Press a button</value>
  </data>
  <data name="SetField" xml:space="preserve">
    <value>T_Set Field</value>
  </data>
  <data name="SetTheContentsOfATerminalField" xml:space="preserve">
    <value>T_Set the contents of a terminal field</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>T_Text</value>
  </data>
  <data name="TheNewTextToBeEnteredIntoTheField" xml:space="preserve">
    <value>T_The new text to be entered into the field.</value>
  </data>
  <data name="ReadField" xml:space="preserve">
    <value>T_Read Field</value>
  </data>
  <data name="ReadTheContentsOfATerminalField" xml:space="preserve">
    <value>T_Read the contents of a terminal field</value>
  </data>
  <data name="SearchTerminal" xml:space="preserve">
    <value>T_Search Terminal</value>
  </data>
  <data name="SearchTheWholeTerminalForInstancesOfTheGivenTextCaseInsensitive" xml:space="preserve">
    <value>T_Search the whole terminal for instances of the given text. T_Case insensitive.</value>
  </data>
  <data name="TheTextToSearchFor" xml:space="preserve">
    <value>T_The text to search for.</value>
  </data>
  <data name="GetCursorPosition" xml:space="preserve">
    <value>T_Get Cursor Position</value>
  </data>
  <data name="GetsTheRowcolumnPositionOfTheCursorInThePresentationSpace" xml:space="preserve">
    <value>T_Gets the row/column position of the cursor in the presentation space</value>
  </data>
  <data name="SetCursorPosition" xml:space="preserve">
    <value>T_Set Cursor Position</value>
  </data>
  <data name="SetsTheRowcolumnPositionOfTheCursorInThePresentationSpace" xml:space="preserve">
    <value>T_Sets the row/column position of the cursor in the presentation space</value>
  </data>
  <data name="RowIndex" xml:space="preserve">
    <value>T_Row Index</value>
  </data>
  <data name="The1basedIndexOfTheRowAtWhichTheCursorShouldBeLocatedThisValueMustNotExceedTheNu" xml:space="preserve">
    <value>T_The 1-based index of the row at which the cursor should be located. T_This value must not exceed the number of rows available.</value>
  </data>
  <data name="ColumnIndex" xml:space="preserve">
    <value>T_Column Index</value>
  </data>
  <data name="The1basedIndexOfTheColumnAtWhichTheCursorShouldBeLocatedThisValueMustNotExceedTh" xml:space="preserve">
    <value>T_The 1-based index of the column at which the cursor should be located. T_This value must not exceed the number of columns available.</value>
  </data>
  <data name="GetWindowTitle" xml:space="preserve">
    <value>T_Get Window Title</value>
  </data>
  <data name="GetsTheTitleOfTheWindowInWhichTheTerminalEmulatorResides" xml:space="preserve">
    <value>T_Gets the title of the window in which the terminal emulator resides</value>
  </data>
  <data name="SetWindowTitle" xml:space="preserve">
    <value>T_Set Window Title</value>
  </data>
  <data name="SetsTheTitleOfTheWindowInWhichTheTerminalEmulatorResides" xml:space="preserve">
    <value>T_Sets the title of the window in which the terminal emulator resides</value>
  </data>
  <data name="NewTitle" xml:space="preserve">
    <value>T_New Title</value>
  </data>
  <data name="TheNewTitleOfTheMainframeEmulatorWindow" xml:space="preserve">
    <value>T_The new title of the mainframe emulator window.</value>
  </data>
  <data name="RunMacro" xml:space="preserve">
    <value>T_Run Macro</value>
  </data>
  <data name="RunsTheSpecifiedMacroDefinedOnTheEmulatorInstance" xml:space="preserve">
    <value>T_Runs the specified macro defined on the emulator instance</value>
  </data>
  <data name="MacroName" xml:space="preserve">
    <value>T_Macro Name</value>
  </data>
  <data name="TheNameOfTheMacroToBeRunOnlyFilePathsAreNotSupported" xml:space="preserve">
    <value>T_The name of the macro to be run, only. T_File paths are not supported.</value>
  </data>
  <data name="SetText" xml:space="preserve">
    <value>T_Set Text</value>
  </data>
  <data name="SetTheWindowtextForAWindow" xml:space="preserve">
    <value>T_Set the windowtext for a window.</value>
  </data>
  <data name="TheNewTextToBeSentToTheWindow" xml:space="preserve">
    <value>T_The new text to be sent to the window.</value>
  </data>
  <data name="ReadTextWithOCR" xml:space="preserve">
    <value>T_Read Text with OCR</value>
  </data>
  <data name="ReadTextUsingOCRFromARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Read text using OCR from a rectangular area on a window</value>
  </data>
  <data name="ReadTextWithOCRPlus" xml:space="preserve">
    <value>T_Read Text with OCR Plus</value>
  </data>
  <data name="ReadTextUsingOCRPlusFromARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Read text using OCR Plus from a rectangular area on a window</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>T_Language</value>
  </data>
  <data name="TheTesseractLanguageCodeToUseDefaultIsEng" xml:space="preserve">
    <value>T_The Tesseract language code to use. T_Default is 'eng'.</value>
  </data>
  <data name="PageSegmentationMode" xml:space="preserve">
    <value>T_Page Segmentation Mode</value>
  </data>
  <data name="TheTesseractPageSegmentationModeToUseDefaultIsAuto" xml:space="preserve">
    <value>T_The Tesseract page segmentation mode to use. T_Default is 'Auto'.</value>
  </data>
  <data name="CharacterWhitelist" xml:space="preserve">
    <value>T_Character Whitelist</value>
  </data>
  <data name="WhitelistOfCharactersToRecognise" xml:space="preserve">
    <value>T_Whitelist of characters to recognise.</value>
  </data>
  <data name="DiagnosticsPath" xml:space="preserve">
    <value>T_Diagnostics Path</value>
  </data>
  <data name="OptionalCanBeUsedToSpecifyADirectoryWhereDiagnosticsFilesWillBeSavedEgIntermedia" xml:space="preserve">
    <value>T_Optional. T_Can be used to specify a directory where diagnostics files will be saved - e.g. intermediate processed images.</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>T_Scale</value>
  </data>
  <data name="SetTheInternalImageScaleFactorDefaultIs4" xml:space="preserve">
    <value>T_Set the internal image scale factor. T_Default is 4.</value>
  </data>
  <data name="ReadText" xml:space="preserve">
    <value>T_Read Text</value>
  </data>
  <data name="ReadTextDiscoveredUsingInvasiveTechniquesWithinARectangularAreaOfAWindow" xml:space="preserve">
    <value>T_Read text discovered using invasive techniques within a rectangular area of a window</value>
  </data>
  <data name="RecogniseText" xml:space="preserve">
    <value>T_Recognise Text</value>
  </data>
  <data name="ReadTextUsingCharacterMatchingFromARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Read text using character matching from a rectangular area on a window</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>T_Font</value>
  </data>
  <data name="TheNameOfTheFontToUseDefaultIsSystem" xml:space="preserve">
    <value>T_The name of the font to use. T_Default is 'System'.</value>
  </data>
  <data name="Colour" xml:space="preserve">
    <value>T_Colour</value>
  </data>
  <data name="TheTextColourEgFF0000DefaultIsBlack" xml:space="preserve">
    <value>T_The text colour, e.g. FF0000. T_Default is black.</value>
  </data>
  <data name="BackgroundColour" xml:space="preserve">
    <value>T_Background Colour</value>
  </data>
  <data name="OptionalUsedToSpecifyTheBackgroundColourAgainstWhichTheTextIsSetIfUsedTheColourO" xml:space="preserve">
    <value>T_Optional. T_Used to specify the background colour against which the text is set. T_If used, the colour of the text must not be specified. T_Input format must be a six-character hex sequence specifying the background colour, e.g. FF0000.</value>
  </data>
  <data name="RecogniseSingleLineText" xml:space="preserve">
    <value>T_Recognise Single Line Text</value>
  </data>
  <data name="ReadTextUsingCharacterMatchingFromARectangularAreaOnAWindowWhichIsKnownToReprese" xml:space="preserve">
    <value>T_Read text using character matching from a rectangular area on a window, which is known to represent a single line of text.</value>
  </data>
  <data name="TheNameOfTheFontToUse" xml:space="preserve">
    <value>T_The name of the font to use.</value>
  </data>
  <data name="RecogniseMultilineText" xml:space="preserve">
    <value>T_Recognise Multi-line Text</value>
  </data>
  <data name="ReadTextUsingCharacterMatchingFromARectangularAreaOnAWindowWhichIsKnownToReprese_1" xml:space="preserve">
    <value>T_Read text using character matching from a rectangular area on a window, which is known to represent more than one line of text.</value>
  </data>
  <data name="EraseBlocks" xml:space="preserve">
    <value>T_Erase Blocks</value>
  </data>
  <data name="OptionalDefaultFalseSetToTrueToAutomaticallyDetectAndEraseColouredBlocksSurround" xml:space="preserve">
    <value>T_Optional; default False. T_Set to True to automatically detect and erase coloured blocks surrounding text, such as a highlighted selection in a listview.</value>
  </data>
  <data name="SplitLines" xml:space="preserve">
    <value>T_Split Lines</value>
  </data>
  <data name="TrueToSplitEachSubregionIntoLinesBeforeMatchingDefaultFalse" xml:space="preserve">
    <value>T_True to split each subregion into lines before matching. T_Default: T_False</value>
  </data>
  <data name="UseOriginalAlgorithm" xml:space="preserve">
    <value>T_Use Original Algorithm</value>
  </data>
  <data name="TrueToUseTheBackwardsCompatibleAlgorithmForReadingCharactersWhichScansAcrossThen" xml:space="preserve">
    <value>T_True to use the backwards compatible algorithm for reading characters which scans across then down. T_Default: T_False</value>
  </data>
  <data name="ReadImage" xml:space="preserve">
    <value>T_Read Image</value>
  </data>
  <data name="ReadImageFromARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Read image from a rectangular area on a window</value>
  </data>
  <data name="RecogniseTextInRange" xml:space="preserve">
    <value>T_Recognise Text In Range</value>
  </data>
  <data name="ReadTextUsingCharacterMatchingFromASeriesOfRectangularAreasOnAWindowWhichAreKnow" xml:space="preserve">
    <value>T_Read text using character matching from a series of rectangular areas on a window, which are known to represent a single line of text.</value>
  </data>
  <data name="FirstElement" xml:space="preserve">
    <value>T_First Element</value>
  </data>
  <data name="TheFirstElementInTheListRegionToReadDefaultIs1" xml:space="preserve">
    <value>T_The first element in the list region to read. T_Default is 1</value>
  </data>
  <data name="LastElement" xml:space="preserve">
    <value>T_Last Element</value>
  </data>
  <data name="TheLastElementInTheListRegionToReadDefaultIs1" xml:space="preserve">
    <value>T_The last element in the list region to read. T_Default is 1</value>
  </data>
  <data name="RecogniseTextInTable" xml:space="preserve">
    <value>T_Recognise Text In Table</value>
  </data>
  <data name="ReadsTheTextInEachCellDefinedInTheGridRegion" xml:space="preserve">
    <value>T_Reads the text in each cell defined in the grid region.</value>
  </data>
  <data name="GetConflictingFontCharacters" xml:space="preserve">
    <value>T_Get Conflicting Font Characters</value>
  </data>
  <data name="GetACollectionOfConflictingCharacterGroupsEachRowContainsAStringUnderTheCharacte" xml:space="preserve">
    <value>T_Get a collection of conflicting character groups. T_Each row contains a string under the 'Character Group' field, representing a group of characters whose appearance is identical within the font of interest.</value>
  </data>
  <data name="TheNameOfTheFontOfInterest" xml:space="preserve">
    <value>T_The name of the font of interest.</value>
  </data>
  <data name="GetText" xml:space="preserve">
    <value>T_Get Text</value>
  </data>
  <data name="GetTheTextForAWindow" xml:space="preserve">
    <value>T_Get the text for a window</value>
  </data>
  <data name="GetWin32ParentText" xml:space="preserve">
    <value>T_Get Win32 Parent Text</value>
  </data>
  <data name="GetTheTextForARegionsWin32ParentControlwindow" xml:space="preserve">
    <value>T_Get the text for a region's Win32 parent control/window</value>
  </data>
  <data name="IsWindowActive" xml:space="preserve">
    <value>T_Is Window Active</value>
  </data>
  <data name="IndicatesWhetherAWindowIsTheActiveWindowTheWindowWhichReceivesUserInput" xml:space="preserve">
    <value>T_Indicates whether a window is the active window - the window which receives user input</value>
  </data>
  <data name="GetChecked" xml:space="preserve">
    <value>T_Get Checked</value>
  </data>
  <data name="ReadsTheCheckedValueFromACheckboxRadioButtonEtc" xml:space="preserve">
    <value>T_Reads the 'checked' value from a checkbox, radio button, etc</value>
  </data>
  <data name="ShowDropdown" xml:space="preserve">
    <value>T_Show Dropdown</value>
  </data>
  <data name="ShowTheDropdownListOnAComboboxOrMenu" xml:space="preserve">
    <value>T_Show the dropdown list on a combobox or menu</value>
  </data>
  <data name="HideDropdown" xml:space="preserve">
    <value>T_Hide Dropdown</value>
  </data>
  <data name="HideTheDropdownListOnAComboboxOrMenu" xml:space="preserve">
    <value>T_Hide the dropdown list on a combobox or menu</value>
  </data>
  <data name="ReadTheTextOfAJavaElement" xml:space="preserve">
    <value>T_Read the text of a java element</value>
  </data>
  <data name="GetSelectedText" xml:space="preserve">
    <value>T_Get Selected Text</value>
  </data>
  <data name="ReadTheSelectedTextOfAJavaElement" xml:space="preserve">
    <value>T_Read the selected text of a java element</value>
  </data>
  <data name="SelectText" xml:space="preserve">
    <value>T_Select Text</value>
  </data>
  <data name="SelectAPortionOfTheTextInAnEditableJavaElement" xml:space="preserve">
    <value>T_Select a portion of the text in an editable java element</value>
  </data>
  <data name="StartPosition" xml:space="preserve">
    <value>T_Start Position</value>
  </data>
  <data name="TheOnebasedStartIndexOfTheTextToBeSelectedThisMustBeWithinTheRangeOfAvailableCha" xml:space="preserve">
    <value>T_The one-based start index of the text to be selected. T_This must be within the range of available characters.</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>T_Length</value>
  </data>
  <data name="TheNumberOfCharactersToBeSelectedThisMustBeWithinTheRangeOfAvailableCharactersRe" xml:space="preserve">
    <value>T_The number of characters to be selected. T_This must be within the range of available characters, relative to the specified start position.</value>
  </data>
  <data name="SelectAllText" xml:space="preserve">
    <value>T_Select All Text</value>
  </data>
  <data name="JABGetChecked" xml:space="preserve">
    <value>T_JABGetChecked</value>
  </data>
  <data name="SelectAllOfTheTextInAnEditableJavaElement" xml:space="preserve">
    <value>T_Select all of the text in an editable java element</value>
  </data>
  <data name="ReadsTheCheckedValueFromAJavaCheckboxRadioButtonToggleButtonEtc" xml:space="preserve">
    <value>T_Reads the 'checked' value from a java checkbox, radio button, toggle button, etc</value>
  </data>
  <data name="IsSelected" xml:space="preserve">
    <value>T_Is Selected</value>
  </data>
  <data name="ReadsTheSelectedValueFromAJavaElementSuchAsAListItemATabPageEtc" xml:space="preserve">
    <value>T_Reads the 'selected' value from a java element, such as a list item, a tab page, etc</value>
  </data>
  <data name="IsExpanded" xml:space="preserve">
    <value>T_Is Expanded</value>
  </data>
  <data name="ReadsTheExpandedValueFromAJavaElementSuchAsATreeNodeAComboBoxEtc" xml:space="preserve">
    <value>T_Reads the 'expanded' value from a java element, such as a tree node, a combo box, etc</value>
  </data>
  <data name="HideDropDown_1" xml:space="preserve">
    <value>T_Hide Drop Down</value>
  </data>
  <data name="HidesTheDropdownPortionOfAJavaElementSuchAsAMenuComboboxEtc" xml:space="preserve">
    <value>T_Hides the drop-down portion of a java element such as a menu, combobox, etc</value>
  </data>
  <data name="ShowDropDown_1" xml:space="preserve">
    <value>T_Show Drop Down</value>
  </data>
  <data name="ShowsTheDropdownPortionOfAJavaElementSuchAsAMenuComboboxEtc" xml:space="preserve">
    <value>T_Shows the drop-down portion of a java element such as a menu, combobox, etc</value>
  </data>
  <data name="CollapseItem" xml:space="preserve">
    <value>T_Collapse Item</value>
  </data>
  <data name="CollapseAJavaTreeNodeIfItIsExpanded" xml:space="preserve">
    <value>T_Collapse a java tree node, if it is expanded</value>
  </data>
  <data name="ExpandItem" xml:space="preserve">
    <value>T_Expand Item</value>
  </data>
  <data name="ExpandAJavaTreeNodeIfItIsExpanded" xml:space="preserve">
    <value>T_Expand a java tree node, if it is expanded</value>
  </data>
  <data name="ToggleItemExpansion" xml:space="preserve">
    <value>T_Toggle Item Expansion</value>
  </data>
  <data name="TogglesTheExpandedStateOfAJavaTreeNodeIfItHasChildren" xml:space="preserve">
    <value>T_Toggles the expanded state of a java tree node, if it has children</value>
  </data>
  <data name="SelectItem" xml:space="preserve">
    <value>T_Select Item</value>
  </data>
  <data name="SelectsAJavaItemIdentifiedByItsTextOrItsPositionEgFromAMenuDropdownAComboBoxATab" xml:space="preserve">
    <value>T_Selects a java item identified by its text or its position - eg from a menu dropdown, a combo box, a tab control, etc</value>
  </data>
  <data name="TheTextOfTheItemToBeSelectedIfNotUniqueThenTheFirstMatchingItemFoundWillBeSelect" xml:space="preserve">
    <value>T_The text of the item to be selected. T_If not unique, then the first matching item found will be selected.</value>
  </data>
  <data name="ItemPosition" xml:space="preserve">
    <value>T_Item Position</value>
  </data>
  <data name="The1basedIndexOfTheItemToBeSelectedThisParameterIsIgnoredUnlessTheItemTextParame" xml:space="preserve">
    <value>T_The 1-based index of the item to be selected. T_This parameter is ignored unless the 'Item Text' parameter is blank.</value>
  </data>
  <data name="EnsureItemVisible" xml:space="preserve">
    <value>T_Ensure Item Visible</value>
  </data>
  <data name="TheTextOfTheItemOnlyUsedWhenNoValueIsSuppliedToThePositionParameter" xml:space="preserve">
    <value>T_The text of the item. T_Only used when no value is supplied to the Position parameter</value>
  </data>
  <data name="The1basedIndexOfTheItemIfThisParameterIsUsedThenTheTextParameterWillBeIgnored" xml:space="preserve">
    <value>T_The 1-based index of the item. T_If this parameter is used then the Text parameter will be ignored</value>
  </data>
  <data name="SelectAllItems" xml:space="preserve">
    <value>T_Select All Items</value>
  </data>
  <data name="SelectsAllChildItemsEgInAList" xml:space="preserve">
    <value>T_Selects all child items - eg in a list</value>
  </data>
  <data name="ClearSelection" xml:space="preserve">
    <value>T_Clear Selection</value>
  </data>
  <data name="ClearsTheSelectionOfChildItemsEgInAList" xml:space="preserve">
    <value>T_Clears the selection of child items - eg in a list</value>
  </data>
  <data name="SetChecked" xml:space="preserve">
    <value>T_Set Checked</value>
  </data>
  <data name="WritesTheCheckedValueToAJavaCheckboxRadioButtonToggleButtonEtc" xml:space="preserve">
    <value>T_Writes the 'checked' value to a java checkbox, radio button, toggle button, etc</value>
  </data>
  <data name="CountSelectedItems" xml:space="preserve">
    <value>T_Count Selected Items</value>
  </data>
  <data name="CountsAndReturnsTheNumberOfSelectedItemsContainedInAJavaListviewTreeviewListBoxE" xml:space="preserve">
    <value>T_Counts and returns the number of selected items contained in a java listview, Treeview, ListBox, etc.</value>
  </data>
  <data name="GetAllItems" xml:space="preserve">
    <value>T_Get All Items</value>
  </data>
  <data name="GetsAllRowsAndColumnsOfAListviewComboboxDatagridEtcAsACollectionForSimpleControl" xml:space="preserve">
    <value>T_Gets all rows and columns (of a listview, combobox, datagrid etc) as a collection. T_For simple controls, the collection has a single field called 'Item Text'. T_For multi-column controls, the fields will be named as they are in the control, where possible - otherwise names such as 'Column1', 'Column2' will be used.</value>
  </data>
  <data name="GetTreenodeChildItems" xml:space="preserve">
    <value>T_Get Treenode Child Items</value>
  </data>
  <data name="GetsAllChildItemsOfTheSpecifiedItemInATreeviewAsACollection" xml:space="preserve">
    <value>T_Gets all child items of the specified item in a treeview, as a collection.</value>
  </data>
  <data name="TheTextOfTheTreenodeOfInterestIfNotUniqueThenTheFirstMatchingItemWillBeRetrieved" xml:space="preserve">
    <value>T_The text of the treenode of interest. T_If not unique, then the first matching item will be retrieved.</value>
  </data>
  <data name="GetTreenodeSiblingItems" xml:space="preserve">
    <value>T_Get Treenode Sibling Items</value>
  </data>
  <data name="GetsAllSiblingItemsOfTheSpecifiedItemInATreeviewAsACollectionTheReturnedCollecti" xml:space="preserve">
    <value>T_Gets all sibling items of the specified item in a treeview, as a collection. T_The returned collection includes the item specified, as well as its siblings.</value>
  </data>
  <data name="GoToCell" xml:space="preserve">
    <value>T_Go To Cell</value>
  </data>
  <data name="SetTheCurrentPositionToAParticularCell" xml:space="preserve">
    <value>T_Set the current position to a particular cell</value>
  </data>
  <data name="Row" xml:space="preserve">
    <value>T_Row</value>
  </data>
  <data name="The1basedRowNumber" xml:space="preserve">
    <value>T_The 1-based row number</value>
  </data>
  <data name="Column" xml:space="preserve">
    <value>T_Column</value>
  </data>
  <data name="The1basedColumnNumber" xml:space="preserve">
    <value>T_The 1-based column number</value>
  </data>
  <data name="SetTopRow" xml:space="preserve">
    <value>T_Set Top Row</value>
  </data>
  <data name="SetTheTopVisibleRowThisRowMayNotActuallyGoToTheTopIfThereAreNotEnoughRowsBelowIt" xml:space="preserve">
    <value>T_Set the top visible row - this row may not actually go to the top if there are not enough rows below it.</value>
  </data>
  <data name="GetRowOffset" xml:space="preserve">
    <value>T_Get Row Offset</value>
  </data>
  <data name="GetTheOffsetInPixelsOfTheTopOfTheGivenRowFromTheTopOfTheGrid" xml:space="preserve">
    <value>T_Get the offset, in pixels, of the top of the given row from the top of the grid.</value>
  </data>
  <data name="SelectRange" xml:space="preserve">
    <value>T_Select Range</value>
  </data>
  <data name="SelectARangeOfCells" xml:space="preserve">
    <value>T_Select a range of cells</value>
  </data>
  <data name="EndRow" xml:space="preserve">
    <value>T_End Row</value>
  </data>
  <data name="TheEndColumnNumber" xml:space="preserve">
    <value>T_The end column number</value>
  </data>
  <data name="EndColumn" xml:space="preserve">
    <value>T_End Column</value>
  </data>
  <data name="GetItem" xml:space="preserve">
    <value>T_Get Item</value>
  </data>
  <data name="GetsAllDataAssociatedWithAnItemAsACollectionEgEveryColumnOfAListviewForTheItemIn" xml:space="preserve">
    <value>T_Gets all data associated with an item, as a collection (eg every column of a listview, for the item in question).</value>
  </data>
  <data name="TheMainTextOfTheItemOfInterestEgTheTextOfTheFirstColumnInAListviewItemIfNotUniqu" xml:space="preserve">
    <value>T_The main text of the item of interest (eg the text of the first column in a listview item). T_If not unique, then the first matching item will be retrieved.</value>
  </data>
  <data name="The1basedIndexOfTheItemOfInterestThisParameterIsIgnoredUnlessTheItemTextParamete" xml:space="preserve">
    <value>T_The 1-based index of the item of interest. T_This parameter is ignored unless the 'Item Text' parameter is blank.</value>
  </data>
  <data name="GetSelectedItems" xml:space="preserve">
    <value>T_Get Selected Items</value>
  </data>
  <data name="GetsAllSelectedRowsAndColumnsOfAListviewComboboxDatagridEtcAsACollection" xml:space="preserve">
    <value>T_Gets all selected rows and columns (of a listview, combobox, datagrid etc) as a collection.</value>
  </data>
  <data name="IsItemSelected" xml:space="preserve">
    <value>T_Is Item Selected</value>
  </data>
  <data name="ReadsTheSelectedValueFromAChildOfTheChosenElementEgFromAnItemInAListviewEtc" xml:space="preserve">
    <value>T_Reads the 'selected' value from a child of the chosen element. T_Eg from an item in a listview, etc</value>
  </data>
  <data name="IsItemChecked" xml:space="preserve">
    <value>T_Is Item Checked</value>
  </data>
  <data name="ReadsTheCheckedValueFromAChildOfTheChosenElementEgFromAnItemInAListviewEtc" xml:space="preserve">
    <value>T_Reads the 'checked' value from a child of the chosen element. T_Eg from an item in a listview, etc</value>
  </data>
  <data name="IsItemExpanded" xml:space="preserve">
    <value>T_Is Item Expanded</value>
  </data>
  <data name="ReadsTheExpandedValueFromAChildOfTheChosenElementEgFromAnItemInATreeviewEtc" xml:space="preserve">
    <value>T_Reads the 'expanded' value from a child of the chosen element. T_Eg from an item in a treeview, etc</value>
  </data>
  <data name="IsItemFocused" xml:space="preserve">
    <value>T_Is Item Focused</value>
  </data>
  <data name="ReadsTheFocusedValueFromAChildOfTheChosenElementEgFromAnItemInATreeviewEtc" xml:space="preserve">
    <value>T_Reads the 'focused' value from a child of the chosen element. T_Eg from an item in a treeview, etc.</value>
  </data>
  <data name="GetItemImageIndex" xml:space="preserve">
    <value>T_Get Item Image Index</value>
  </data>
  <data name="ReadsTheImageIndexOfAChildOfTheChosenElementEgFromAnItemInAListviewTreeviewEtc" xml:space="preserve">
    <value>T_Reads the Image Index of a child of the chosen element. T_Eg from an item in a listview, treeview, etc.</value>
  </data>
  <data name="GetCurrentValue" xml:space="preserve">
    <value>T_Get Current Value</value>
  </data>
  <data name="GetsTheCurrentValueOfATextboxComboboxListviewCurrentRowCheckboxEtcTheDataTypeWil" xml:space="preserve">
    <value>T_Gets the current value (of a textbox, combobox, listview current row, checkbox, etc). T_The data type will be that of the calling control (eg flag for a checkbox).</value>
  </data>
  <data name="MakesSureThatTheSpecifiedItemIsVisibleInAListviewOrTreeviewByAdjustingTheScrollb" xml:space="preserve">
    <value>T_Makes sure that the specified item is visible in a Listview or Treeview, by adjusting the scrollbars where necessary.</value>
  </data>
  <data name="TheTextOfTheItemOnlyUsedWhenNoValueIsSuppliedToTheIndexParameter" xml:space="preserve">
    <value>T_The text of the item. T_Only used when no value is supplied to the Index parameter</value>
  </data>
  <data name="ScrollToTop" xml:space="preserve">
    <value>T_Scroll To Top</value>
  </data>
  <data name="ScrollsAListviewToTheTopWhenInDetailsMode" xml:space="preserve">
    <value>T_Scrolls a listview to the top when in details mode.</value>
  </data>
  <data name="ScrollToBottom" xml:space="preserve">
    <value>T_Scroll To Bottom</value>
  </data>
  <data name="ScrollsAListviewToTheBottomWhenInDetailsMode" xml:space="preserve">
    <value>T_Scrolls a listview to the bottom when in details mode.</value>
  </data>
  <data name="CountItems" xml:space="preserve">
    <value>T_Count Items</value>
  </data>
  <data name="CountsAndReturnsTheNumberOfItemsContainedInAListviewOrTreeview" xml:space="preserve">
    <value>T_Counts and returns the number of items contained in a listview or Treeview.</value>
  </data>
  <data name="CountsAndReturnsTheNumberOfSelectedItemsContainedInAListviewOrTreeview" xml:space="preserve">
    <value>T_Counts and returns the number of selected items contained in a listview or Treeview.</value>
  </data>
  <data name="GetPageCapacity" xml:space="preserve">
    <value>T_Get Page Capacity</value>
  </data>
  <data name="GetsTheNumberOfItemsThatCanBeDisplayedOnOnePageInAListviewInDetailsModeOrATreevi" xml:space="preserve">
    <value>T_Gets the number of items that can be displayed on one page, in a Listview (in details mode) or a Treeview.</value>
  </data>
  <data name="GetSelectedItemText" xml:space="preserve">
    <value>T_Get Selected Item Text</value>
  </data>
  <data name="GetsTheTextOfTheFirstSelectedItemReturnsAnErrorIfNoItemsAreSelected" xml:space="preserve">
    <value>T_Gets the text of the first selected item. T_Returns an error if no items are selected.</value>
  </data>
  <data name="ExpandsTheSpecifiedTreeviewItem" xml:space="preserve">
    <value>T_Expands the specified Treeview item.</value>
  </data>
  <data name="TheTextOfTheTreenodeToBeExpandedIfNotUniqueThenTheFirstMatchingNodeWillBeExpande" xml:space="preserve">
    <value>T_The text of the treenode to be expanded. T_If not unique, then the first matching node will be expanded.</value>
  </data>
  <data name="CollapsesTheSpecifiedTreeviewItem" xml:space="preserve">
    <value>T_Collapses the specified Treeview item.</value>
  </data>
  <data name="TheTextOfTheTreenodeToBeCollapsedIfNotUniqueThenTheFirstMatchingNodeWillBeCollap" xml:space="preserve">
    <value>T_The text of the treenode to be collapsed. T_If not unique, then the first matching node will be collapsed.</value>
  </data>
  <data name="TogglesTheExpandedStateOfTheSpecifiedTreeviewItem" xml:space="preserve">
    <value>T_Toggles the expanded state of the specified Treeview item.</value>
  </data>
  <data name="TheTextOfTheTreenodeToBeToggledIfNotUniqueThenTheFirstMatchingNodeWillBeToggled" xml:space="preserve">
    <value>T_The text of the treenode to be toggled. T_If not unique, then the first matching node will be toggled.</value>
  </data>
  <data name="GetValue" xml:space="preserve">
    <value>T_Get Value</value>
  </data>
  <data name="GetsTheNumericValueOfAControlSuchAsThePositionOnATrackbarAScrollbarOrTheValueInA" xml:space="preserve">
    <value>T_Gets the numeric value of a control such as the position on a trackbar, a scrollbar, or the value in a numeric up/down control.</value>
  </data>
  <data name="SetValue" xml:space="preserve">
    <value>T_Set Value</value>
  </data>
  <data name="SetsTheNumericValueOfAControlSuchAsThePositionOnATrackbarAScrollbarOrTheValueInA" xml:space="preserve">
    <value>T_Sets the numeric value of a control such as the position on a trackbar, a scrollbar, or the value in a numeric up/down control.</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>T_Value</value>
  </data>
  <data name="TheNewValueToBeSetInTheControl" xml:space="preserve">
    <value>T_The new value to be set in the control.</value>
  </data>
  <data name="GetMaxValue" xml:space="preserve">
    <value>T_Get Max Value</value>
  </data>
  <data name="GetsTheMaximumNumericValueAllowedByAControlSuchAsATrackbarAScrollbarOrANumericUp" xml:space="preserve">
    <value>T_Gets the maximum numeric value allowed by a control such as a trackbar, a scrollbar, or a numeric up/down control.</value>
  </data>
  <data name="GetMinValue" xml:space="preserve">
    <value>T_Get Min Value</value>
  </data>
  <data name="GetsTheMinimumNumericValueAllowedByAControlSuchAsATrackbarAScrollbarOrANumericUp" xml:space="preserve">
    <value>T_Gets the minimum numeric value allowed by a control such as a trackbar, a scrollbar or a numeric up/down control.</value>
  </data>
  <data name="GetsTheNumericValueOfAControlSuchAsAJavaTrackbarAJavaScrollbarOrAJavaNumericUpdo" xml:space="preserve">
    <value>T_Gets the numeric value of a control such as a java trackbar, a java scrollbar or a java numeric up/down control.</value>
  </data>
  <data name="SetsTheNumericValueOfAControlSuchAsAJavaTrackbarAJavaScrollbarOrAJavaNumericUpdo" xml:space="preserve">
    <value>T_Sets the numeric value of a control such as a java trackbar, a java scrollbar or a java numeric up/down control.</value>
  </data>
  <data name="GetsTheMaximumNumericValueAllowedByAControlSuchAsAJavaTrackbarAJavaScrollbarOrAJ" xml:space="preserve">
    <value>T_Gets the maximum numeric value allowed by a control such as a java trackbar, a java scrollbar or a java numeric up/down control.</value>
  </data>
  <data name="GetsTheMinimumNumericValueAllowedByAControlSuchAsAJavaTrackbarAJavaScrollbarOrAJ" xml:space="preserve">
    <value>T_Gets the minimum numeric value allowed by a control such as a java trackbar, a java scrollbar or a java numeric up/down control.</value>
  </data>
  <data name="GetsTheDatetimeValueOfAVB6DatePickerControl" xml:space="preserve">
    <value>T_Gets the datetime value of a VB6 date picker control.</value>
  </data>
  <data name="GetsTheDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Gets the datetime value of a control such as a date picker.</value>
  </data>
  <data name="SetsTheDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Sets the datetime value of a control such as a date picker.</value>
  </data>
  <data name="GetsTheMaximumAllowableDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Gets the maximum allowable datetime value of a control such as a date picker.</value>
  </data>
  <data name="SetsTheMinimumAllowableDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Sets the minimum allowable datetime value of a control such as a date picker.</value>
  </data>
  <data name="GetMaxSelectedValue" xml:space="preserve">
    <value>T_Get Max Selected Value</value>
  </data>
  <data name="GetsTheMaximumSelectedDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Gets the maximum selected datetime value of a control such as a date picker.</value>
  </data>
  <data name="GetMinSelectedValue" xml:space="preserve">
    <value>T_Get Min Selected Value</value>
  </data>
  <data name="GetsTheMinimumSelectedDatetimeValueOfAControlSuchAsADatePicker" xml:space="preserve">
    <value>T_Gets the minimum selected datetime value of a control such as a date picker.</value>
  </data>
  <data name="ScrollToMinimum" xml:space="preserve">
    <value>T_Scroll To Minimum</value>
  </data>
  <data name="SetsAScrollbarToItsMinimumValueIeEitherTheExtremeLeftOrToTheTopDependingOnItsOri" xml:space="preserve">
    <value>T_Sets a scrollbar to its minimum value - ie either the extreme left, or to the top depending on its orientation.</value>
  </data>
  <data name="ScrollToMaximum" xml:space="preserve">
    <value>T_Scroll To Maximum</value>
  </data>
  <data name="SetsAScrollbarToItsMaximumValueIeEitherTheExtremeRightOrToTheBottomDependingOnIt" xml:space="preserve">
    <value>T_Sets a scrollbar to its maximum value - ie either the extreme right, or to the bottom  depending on its orientation.</value>
  </data>
  <data name="ScrollByAmount" xml:space="preserve">
    <value>T_Scroll By Amount</value>
  </data>
  <data name="AdjustsTheValueOfAScrollBarByTheSpecifiedAmountInPagesWhereOnePageIsTheSizeRepre" xml:space="preserve">
    <value>T_Adjusts the value of a scroll bar by the specified amount in pages, where one page is the size represented by the "thumb" on the scroll bar. T_Both positive and negative values are permitted, as well as fractional values.</value>
  </data>
  <data name="NumberOfPages" xml:space="preserve">
    <value>T_Number of Pages</value>
  </data>
  <data name="TheNumberOfPagesToScrollFractionalValuesSuchAs05AreValidAsWellAsWholeValuesSuchA" xml:space="preserve">
    <value>T_The number of pages to scroll. T_Fractional values such as '0.5' are valid as well as whole values such as '3'. T_A negative value indicates scrolling up/left; a positive value indicates scrolling down/right.</value>
  </data>
  <data name="SetsAJavaScrollbarToItsMinimumValueIeEitherTheExtremeLeftOrToTheTopDependingOnIt" xml:space="preserve">
    <value>T_Sets a java scrollbar to its minimum value - ie either the extreme left, or to the top depending on its orientation.</value>
  </data>
  <data name="SetsAJavaScrollbarToItsMaximumValueIeEitherTheExtremeRightOrToTheBottomDepending" xml:space="preserve">
    <value>T_Sets a java scrollbar to its maximum value - ie either the extreme right, or to the bottom  depending on its orientation.</value>
  </data>
  <data name="AdjustsTheValueOfAJavaScrollBarByTheSpecifiedAmountInPagesWhereOnePageIsTheSizeR" xml:space="preserve">
    <value>T_Adjusts the value of a java scroll bar by the specified amount in pages, where one page is the size represented by the "thumb" on the scroll bar. T_Both positive and negative values are permitted, as well as fractional values.</value>
  </data>
  <data name="MultiSelectItem" xml:space="preserve">
    <value>T_Multi Select Item</value>
  </data>
  <data name="AddsTheItemToAMultipleSelectionInAWindowsListBoxThatMatchesTheGivenText" xml:space="preserve">
    <value>T_Adds the item to a multiple selection in a Windows ListBox that matches the given text.</value>
  </data>
  <data name="TheTextOfTheItemToBeSelectedIfNotUniqueThenTheFirstMatchingItemWillBeSelected" xml:space="preserve">
    <value>T_The text of the item to be selected. T_If not unique, then the first matching item will be selected.</value>
  </data>
  <data name="SelectsTheItemInAWindowsComboBoxListBoxListviewOrTreeviewThatMatchesTheGivenText" xml:space="preserve">
    <value>T_Selects the item in a Windows ComboBox, ListBox, Listview or Treeview that matches the given text.</value>
  </data>
  <data name="The1basedIndexOfTheItemToBeModifiedThisParameterIsIgnoredUnlessTheItemTextParame" xml:space="preserve">
    <value>T_The 1-based index of the item to be modified. T_This parameter is ignored unless the 'Item Text' parameter is blank.</value>
  </data>
  <data name="ClickItem" xml:space="preserve">
    <value>T_Click Item</value>
  </data>
  <data name="ClicksTheItemInAWindowsListviewThatMatchesTheGivenText" xml:space="preserve">
    <value>T_Clicks the item in a Windows Listview that matches the given text.</value>
  </data>
  <data name="TheTextOfTheItemToBeClickedIfNotUniqueThenTheFirstMatchingItemFoundWillBeSelecte" xml:space="preserve">
    <value>T_The text of the item to be clicked. T_If not unique, then the first matching item found will be selected.</value>
  </data>
  <data name="The1basedIndexOfTheItemToBeClickedThisParameterIsIgnoredUnlessTheItemTextParamet" xml:space="preserve">
    <value>T_The 1-based index of the item to be clicked. T_This parameter is ignored unless the 'Item Text' parameter is blank.</value>
  </data>
  <data name="GetItemBounds" xml:space="preserve">
    <value>T_Get Item Bounds</value>
  </data>
  <data name="GetsTheBoundsOfAnItemWithinAListviewRelativeToTheListviewsTopLeftCorner" xml:space="preserve">
    <value>T_Gets the bounds of an item within a Listview, relative to the listview's top left corner.</value>
  </data>
  <data name="TheTextOfTheItemOfInterestIfNotUniqueThenTheFirstMatchingItemFoundWillBeUsed" xml:space="preserve">
    <value>T_The text of the item of interest. T_If not unique, then the first matching item found will be used.</value>
  </data>
  <data name="GetItemScreenBounds" xml:space="preserve">
    <value>T_Get Item Screen Bounds</value>
  </data>
  <data name="GetsTheBoundsOfAnItemWithinAListviewInScreenCoordinates" xml:space="preserve">
    <value>T_Gets the bounds of an item within a Listview, in screen coordinates.</value>
  </data>
  <data name="SelectTreeNode" xml:space="preserve">
    <value>T_Select Tree Node</value>
  </data>
  <data name="SelectsANodeInATreeView" xml:space="preserve">
    <value>T_Selects a node in a TreeView.</value>
  </data>
  <data name="NodeText" xml:space="preserve">
    <value>T_Node Text</value>
  </data>
  <data name="TheTextOfTheNodeToBeSelectedIfNotUniqueThenTheFirstMatchingItemFoundWillBeSelect" xml:space="preserve">
    <value>T_The text of the node to be selected. T_If not unique, then the first matching item found will be selected.</value>
  </data>
  <data name="ClicksTheItemInAWindowsToolbarOrSimilarThatMatchesTheGivenText" xml:space="preserve">
    <value>T_Clicks the item in a Windows Toolbar (or similar) that matches the given text.</value>
  </data>
  <data name="IsButtonEnabled" xml:space="preserve">
    <value>T_Is Button Enabled</value>
  </data>
  <data name="ReadsTheEnabledValueOfAToolbarButton" xml:space="preserve">
    <value>T_Reads the 'enabled' value of a toolbar button.</value>
  </data>
  <data name="IsButtonChecked" xml:space="preserve">
    <value>T_Is Button Checked</value>
  </data>
  <data name="ReadsTheCheckedValueOfAToolbarButton" xml:space="preserve">
    <value>T_Reads the 'checked' value of a toolbar button.</value>
  </data>
  <data name="IsButtonPressed" xml:space="preserve">
    <value>T_Is Button Pressed</value>
  </data>
  <data name="ReadsThePressedValueOfAToolbarButton" xml:space="preserve">
    <value>T_Reads the 'pressed' value of a toolbar button.</value>
  </data>
  <data name="SelectMenuItem" xml:space="preserve">
    <value>T_Select Menu Item</value>
  </data>
  <data name="SelectsTheSpecifiedMenuItemFromTheMainMenu" xml:space="preserve">
    <value>T_Selects the specified menu item from the main menu.</value>
  </data>
  <data name="MenuPath" xml:space="preserve">
    <value>T_Menu Path</value>
  </data>
  <data name="ThePathToTheMenuItemOfInterestAsADescentThroughTheMenuTreestructureEgFileBackupO" xml:space="preserve">
    <value>T_The path to the menu item of interest, as a descent through the menu tree-structure. T_Eg "{File}{Backup Options}{Backup Configuration}". T_The escape character for the special "{","}" characters is the backslash: "\".</value>
  </data>
  <data name="IsMenuItemChecked" xml:space="preserve">
    <value>T_Is Menu Item Checked</value>
  </data>
  <data name="ReadsTheCheckedValueOfAMenuItem" xml:space="preserve">
    <value>T_Reads the 'checked' value of a menu item.</value>
  </data>
  <data name="ThePathToTheMenuItemOfInterestAsADescentThroughTheMenuTreestructureEgFileBack_1" xml:space="preserve">
    <value>T_The path to the menu item of interest, as a descent through the menu tree-structure. T_Eg "{File}{Backup Options}{Backup Configuration}". T_The escape character for the special "{","}" characters is the backslash: "\".</value>
  </data>
  <data name="IsMenuItemEnabled" xml:space="preserve">
    <value>T_Is Menu Item Enabled</value>
  </data>
  <data name="ReadsTheEnabledValueOfAMenuItem" xml:space="preserve">
    <value>T_Reads the 'enabled' value of a menu item.</value>
  </data>
  <data name="ThePathToTheMenuItemOfInterestAsADescentThroughTheMenuTreestructureEgFileBack_2" xml:space="preserve">
    <value>T_The path to the menu item of interest, as a descent through the menu tree-structure. T_Eg "{File}{Backup Options}{Backup Configuration}". T_The escape character for the special "{","}" characters is the backslash: "\".</value>
  </data>
  <data name="ClickTab" xml:space="preserve">
    <value>T_Click Tab</value>
  </data>
  <data name="SendsAClickMessageToATabControlLocatedAtTheCentreOfTheSpecifiedTab" xml:space="preserve">
    <value>T_Sends a click message to a tab control, located at the centre of the specified tab.</value>
  </data>
  <data name="TabText" xml:space="preserve">
    <value>T_Tab Text</value>
  </data>
  <data name="TheTextOfTheTabToReceiveTheClickMessagesIfNotUniqueThenTheFirstMatchingTabFoundW" xml:space="preserve">
    <value>T_The text of the tab to receive the click messages. T_If not unique, then the first matching tab found will be used.</value>
  </data>
  <data name="The1basedIndexOfTheTabToBeUsedThisParameterIsIgnoredUnlessTheTabTextParameterIsB" xml:space="preserve">
    <value>T_The 1-based index of the tab to be used. T_This parameter is ignored unless the 'Tab Text' parameter is blank.</value>
  </data>
  <data name="GlobalMouseClickTab" xml:space="preserve">
    <value>T_Global Mouse Click Tab</value>
  </data>
  <data name="ClicksATabControlAtTheCentreOfTheSpecifiedTabUsingAGlobalMouseClick" xml:space="preserve">
    <value>T_Clicks a tab control, at the centre of the specified tab, using a global mouse click.</value>
  </data>
  <data name="TheTextOfTheTabToBeClickedIfNotUniqueThenTheFirstMatchingTabFoundWillBeUsed" xml:space="preserve">
    <value>T_The text of the tab to be clicked. T_If not unique, then the first matching tab found will be used.</value>
  </data>
  <data name="The1basedIndexOfTheTabToBeClickedThisParameterIsIgnoredUnlessTheTabTextParameter" xml:space="preserve">
    <value>T_The 1-based index of the tab to be clicked. T_This parameter is ignored unless the 'Tab Text' parameter is blank.</value>
  </data>
  <data name="SetItemChecked" xml:space="preserve">
    <value>T_Set Item Checked</value>
  </data>
  <data name="SetsTheCheckedValueOfTheItemInAWindowsListviewOrTreeviewThatMatchesTheGivenText" xml:space="preserve">
    <value>T_Sets the 'checked' value of the item in a Windows Listview or Treeview that matches the given text.</value>
  </data>
  <data name="TheTextOfTheItemToBeModifiedIfNotUniqueThenTheFirstMatchingItemFoundWillBeUsed" xml:space="preserve">
    <value>T_The text of the item to be modified. T_If not unique, then the first matching item found will be used.</value>
  </data>
  <data name="AFlagValueIndicatingWhetherTheItemSpecifiedShouldBeCheckedOrUnchecked" xml:space="preserve">
    <value>T_A flag value indicating whether the item specified should be checked or unchecked.</value>
  </data>
  <data name="SelectsAChildItemIdentifiedByItsTextOrByItsIndexEgFromAMenuDropdownOrAComboBoxEt" xml:space="preserve">
    <value>T_Selects a child item identified by its text, or by its index - eg from a menu dropdown, or a combo box, etc</value>
  </data>
  <data name="CountsAndReturnsTheNumberOfItemsContainedInAnActiveAccessibilityElementSuchAsALi" xml:space="preserve">
    <value>T_Counts and returns the number of items contained in an active accessibility element such as a listview, Treeview or ComboBox.</value>
  </data>
  <data name="GetsAllRowsAndColumnsOfAListviewComboboxDatagridListboxEtcAsACollectionForSimple" xml:space="preserve">
    <value>T_Gets all rows and columns (of a listview, combobox, datagrid, listbox etc) as a collection. T_For simple controls, the collection has a single field called 'Item Text'. T_For multi-column controls, the fields will be named as they are in the control, where possible - otherwise names such as 'Column1', 'Column2' will be used.</value>
  </data>
  <data name="GetsAllSelectedRowsAndColumnsOfAListviewComboboxDatagridListboxEtcAsACollection" xml:space="preserve">
    <value>T_Gets all selected rows and columns (of a listview, combobox, datagrid, listbox etc) as a collection.</value>
  </data>
  <data name="GetsTheTextOfThePrincipalSelectionOfAListviewComboboxDatagridListboxEtc" xml:space="preserve">
    <value>T_Gets the text of the principal selection (of a listview, combobox, datagrid, listbox etc).</value>
  </data>
  <data name="ReadsTheCurrentValueFromAnActiveAccessibilityElement" xml:space="preserve">
    <value>T_Reads the current value from an active accessibility element</value>
  </data>
  <data name="ReadsTheCheckedValueFromAnActiveAccessibilityCheckboxRadioButtonEtc" xml:space="preserve">
    <value>T_Reads the 'checked' value from an active accessibility checkbox, radio button, etc</value>
  </data>
  <data name="ShowTheDropdownListOnAComboboxOrMenuEtc" xml:space="preserve">
    <value>T_Show the dropdown list on a combobox or menu, etc</value>
  </data>
  <data name="HideTheDropdownListOnAComboboxOrMenuEtc" xml:space="preserve">
    <value>T_Hide the dropdown list on a combobox or menu, etc</value>
  </data>
  <data name="ClearsTheSelectionOfChildItemsWhereAppropriateEgInAEditFieldListviewListboxEtc" xml:space="preserve">
    <value>T_Clears the selection (of child items where appropriate) - eg in a edit field, listview, listbox, etc</value>
  </data>
  <data name="SetsTheCheckedStatusOfARadioButtonOrCheckbox" xml:space="preserve">
    <value>T_Sets the checked status of a radio button or checkbox</value>
  </data>
  <data name="Checked" xml:space="preserve">
    <value>T_Checked</value>
  </data>
  <data name="TheNewValueToBeApplied" xml:space="preserve">
    <value>T_The new value to be applied.</value>
  </data>
  <data name="LaunchMainframe" xml:space="preserve">
    <value>T_Launch Mainframe</value>
  </data>
  <data name="LaunchTheMainframeTheParametersSuppliedInTheApplicationModellerWizardMayBeOption" xml:space="preserve">
    <value>T_Launch the mainframe. T_The parameters supplied in the Application Modeller wizard may be optionally overridden in this call. T_To use the value supplied in the wizard, leave the corresponding parameter blank. T_To supply an empty string to a parameter, use an expression which represents an empty string (eg "", or use a data item with an empty value).</value>
  </data>
  <data name="AttachMainframe" xml:space="preserve">
    <value>T_Attach Mainframe</value>
  </data>
  <data name="AttachToTheTargetMainframe" xml:space="preserve">
    <value>T_Attach to the target mainframe.</value>
  </data>
  <data name="OftenCalledTheSessionShortNameThisIsASingleLetterInTheRangeAZ" xml:space="preserve">
    <value>T_Often called the session short name this is a single letter in the range A..Z.</value>
  </data>
  <data name="DetachMainframe" xml:space="preserve">
    <value>T_Detach Mainframe</value>
  </data>
  <data name="DetachFromTheMainframe" xml:space="preserve">
    <value>T_Detach from the mainframe.</value>
  </data>
  <data name="TerminateMainframe" xml:space="preserve">
    <value>T_Terminate Mainframe</value>
  </data>
  <data name="TerminateTheMainframe" xml:space="preserve">
    <value>T_Terminate the mainframe.</value>
  </data>
  <data name="SendKeysMainframe" xml:space="preserve">
    <value>T_Send Keys Mainframe</value>
  </data>
  <data name="SendKeysToTheMainframeSeeTheMainframeIntegrationHelpPageForMoreDetails" xml:space="preserve">
    <value>T_Send keys to the mainframe. T_See the 'Mainframe Integration' help page for more details.</value>
  </data>
  <data name="TheKeycodesToBeSentToTheTargetApplication" xml:space="preserve">
    <value>T_The key-codes to be sent to the target application.</value>
  </data>
  <data name="Launch" xml:space="preserve">
    <value>T_Launch</value>
  </data>
  <data name="LaunchTheTargetApplicationTheParametersSuppliedInTheApplicationModellerWizardMay" xml:space="preserve">
    <value>T_Launch the target application. T_The parameters supplied in the Application Modeller wizard may be optionally overridden in this call. T_To use the value supplied in the wizard, leave the corresponding parameter blank. T_To supply an empty string to a parameter, use an expression which represents an empty string (eg "", or use a data item with an empty value).</value>
  </data>
  <data name="AttachesToAnExistingInstanceOfTheTargetApplicationTheParametersSuppliedInTheAppl" xml:space="preserve">
    <value>T_Attaches to an existing instance of the target application. T_The parameters supplied in the Application Modeller wizard may be optionally overridden in this call. T_To use the value supplied in the wizard, leave the corresponding parameter blank. T_To supply an empty string to a parameter, use an expression which represents an empty string (eg "", or use a data item with an empty value).</value>
  </data>
  <data name="Attach" xml:space="preserve">
    <value>T_Attach</value>
  </data>
  <data name="WindowTitlesAsCollection" xml:space="preserve">
    <value>T_Window Titles (as Collection)</value>
  </data>
  <data name="OptionalParameterACollectionOfDifferentPatternsDesignedToMatchAnyOneOfANumberOfW" xml:space="preserve">
    <value>T_Optional Parameter. T_A collection of different patterns designed to match any one of a number of window titles. T_Window title matching patterns should be contained in a field called "Window Title". T_A successful match amongst any of the patterns will cause the matching application to be attached. T_The wildcard characters "*", "?", "#" are valid, and may be escaped with a backslash character ("\").</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>T_Window Title</value>
  </data>
  <data name="OptionalParameterAPatternSpecifyingASingleWindowTitleToBeMatchedTheWildcardChara" xml:space="preserve">
    <value>T_Optional parameter. T_A pattern specifying a single window title to be matched. T_The wildcard characters "*", "?", "#" are valid, and may be escaped with a backslash character ("\").</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>T_Process Name</value>
  </data>
  <data name="OptionalParameterAPatternSpecifyingTheProcessNameOfTheApplicationTheWildcardChar" xml:space="preserve">
    <value>T_Optional parameter. T_A pattern specifying the process name of the application. T_The wildcard characters "*", "?", "#" are valid, and may be escaped with a backslash character ("\").</value>
  </data>
  <data name="ProcessID" xml:space="preserve">
    <value>T_Process ID</value>
  </data>
  <data name="OptionalParameterTheProcessIdentifierPidOfTheProcess" xml:space="preserve">
    <value>T_Optional parameter. T_The process identifier (pid) of the process.</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>T_User Name</value>
  </data>
  <data name="OptionalParameterTheUsernameOfTheUserWhoTheProcessIsRunningAs" xml:space="preserve">
    <value>T_Optional parameter. T_The username of the user who the process is running as.</value>
  </data>
  <data name="ChildIndex" xml:space="preserve">
    <value>T_Child Index</value>
  </data>
  <data name="OptionalParameterTheChildProcessIndex" xml:space="preserve">
    <value>T_Optional parameter. T_The child process index</value>
  </data>
  <data name="Detach" xml:space="preserve">
    <value>T_Detach</value>
  </data>
  <data name="DetachesFromTheCurrentlyConnectedApplication" xml:space="preserve">
    <value>T_Detaches from the currently connected application.</value>
  </data>
  <data name="Terminate" xml:space="preserve">
    <value>T_Terminate</value>
  </data>
  <data name="TerminateTheTargetApplicationForEmergencyUseOnly" xml:space="preserve">
    <value>T_Terminate the target application. T_For emergency use only</value>
  </data>
  <data name="IsConnected" xml:space="preserve">
    <value>T_Is Connected</value>
  </data>
  <data name="DetectsWhetherTheBusinessObjectIsCurrentlyConnectedToTheApplicationBeItThroughLa" xml:space="preserve">
    <value>T_Detects whether the business object is currently connected to the application (be it through launching or attaching).</value>
  </data>
  <data name="GlobalSendKeys" xml:space="preserve">
    <value>T_Global Send Keys</value>
  </data>
  <data name="SendKeysToTheActiveApplication" xml:space="preserve">
    <value>T_Send keys to the active application</value>
  </data>
  <data name="TheKeycodesToBeSentToTheTargetApplicationFullDetailsAtHttpmsdn2microsoftcomenusl" xml:space="preserve">
    <value>T_The key-codes to be sent to the target application. T_Full details at [http://msdn2.microsoft.com/en-us/library/system.windows.forms.sendkeys.send.aspx MSDN Sendkeys.Send()].</value>
  </data>
  <data name="Interval" xml:space="preserve">
    <value>T_Interval</value>
  </data>
  <data name="TheNumberOfSecondsToWaitBetweenEachKeypressNoteThatIfThisIsSetToANonzeroValueTex" xml:space="preserve">
    <value>T_The number of seconds to wait between each keypress. T_Note that if this is set to a non-zero value, 'Text' must not contain any control characters or an error will occur</value>
  </data>
  <data name="GlobalSendKeyEvents" xml:space="preserve">
    <value>T_Global Send Key Events</value>
  </data>
  <data name="SendKeysToTheApplicationUsingEventsTheseEventsTakePlaceAtTheLowestLevelAndAreRec" xml:space="preserve">
    <value>T_Send keys to the application using events. T_These events take place at the lowest level, and are received by whichever application is currently focused. T_The SendKeys method is preferred unless there is a special reason for using this method.</value>
  </data>
  <data name="TheKeyEventsToBeSentToTheTargetApplicationSpecialCharactersShouldBeEnclosedInCur" xml:space="preserve">
    <value>T_The key events to be sent to the target application. T_Special characters should be enclosed in curly braces (eg {{SPACE}}, {{ESC}}, {{PGUP}}, {{PGDN}}, {{LEFT}}, {{RIGHT}}, {{UP}}, {{DOWN}}). T_The modifiers "<" and ">" change the following letter into a key-down or key-up operation (respectively), instead of a full key-press (ie key-down followed by key-up operation).{0}For example "hello" sends those keystrokes; "<{{CTRL}}s>{{CTRL}}" simulates depressing the control key, pressing "s" and releasing the control key again. T_Special characters (such as "<", ">", "{{", "}}") should be enclosed in curly braces if meant literally. T_Any key name listed at [https://msdn.microsoft.com/en-us/library/system.windows.forms.keys.aspx MSDN Keys Enumeration] can also be used.</value>
  </data>
  <data name="TheNumberOfSecondsToWaitBetweenEachKeypressDefaultIs01Ie100ms" xml:space="preserve">
    <value>T_The number of seconds to wait between each keypress. T_Default is 0.1, ie. 100ms</value>
  </data>
  <data name="ActivateApplication" xml:space="preserve">
    <value>T_Activate Application</value>
  </data>
  <data name="ActivateTheApplicationIeBringsToTheForegroundTargetElementShouldBeTheAppsMainWin" xml:space="preserve">
    <value>T_Activate the application, i.e. brings to the foreground. T_Target element should be the app's main window.</value>
  </data>
  <data name="WindowPressKeys" xml:space="preserve">
    <value>T_Window Press Keys</value>
  </data>
  <data name="SendKeypressesToTheGivenWindowNoteThatCareMustSometimesBeTakenToDirectTheKeypres" xml:space="preserve">
    <value>T_Send keypresses to the given window. T_Note that care must sometimes be taken to direct the keypresses to the correct window. T_For example, in Notepad, sending to the main window will have no effect, but sending to the 'Edit' window contained within it will work.</value>
  </data>
  <data name="TheTextToBeSentEachLetterRepresentsADifferentKeystrokeWhichWillBeSentOneByOne" xml:space="preserve">
    <value>T_The text to be sent. T_Each letter represents a different keystroke, which will be sent one by one.</value>
  </data>
  <data name="TheNumberOfSecondsToWaitBetweenEachKeystroke" xml:space="preserve">
    <value>T_The number of seconds to wait between each keystroke.</value>
  </data>
  <data name="WindowPressKeysWithAlt" xml:space="preserve">
    <value>T_Window Press Keys with Alt</value>
  </data>
  <data name="SendKeypressesToTheGivenWindowWithTheAltKeyDown" xml:space="preserve">
    <value>T_Send keypresses to the given window with the alt key down</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>T_Default</value>
  </data>
  <data name="PerformTheDefaultActionForTheApplicationElement" xml:space="preserve">
    <value>T_Perform the default action for the application element</value>
  </data>
  <data name="Move" xml:space="preserve">
    <value>T_Move</value>
  </data>
  <data name="MoveAWindowToTheSpecifiedLocation" xml:space="preserve">
    <value>T_Move a window to the specified location.</value>
  </data>
  <data name="TheXCoordinateOfTheNewWindowLocationRelativeToTheTopleftCornerOfTheScreen" xml:space="preserve">
    <value>T_The X coordinate of the new window location, relative to the top-left corner of the screen.</value>
  </data>
  <data name="TheYCoordinateOfTheNewWindowLocationRelativeToTheTopleftCornerOfTheScreen" xml:space="preserve">
    <value>T_The Y coordinate of the new window location, relative to the top-left corner of the screen.</value>
  </data>
  <data name="Resize" xml:space="preserve">
    <value>T_Resize</value>
  </data>
  <data name="ResizeAWindow" xml:space="preserve">
    <value>T_Resize a window.</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>T_Width</value>
  </data>
  <data name="TheNewWidthOfTheWindowInPixels" xml:space="preserve">
    <value>T_The new width of the window, in pixels.</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>T_Height</value>
  </data>
  <data name="Maximise" xml:space="preserve">
    <value>T_Maximise</value>
  </data>
  <data name="MaximisesTheWindowToFillTheScreen" xml:space="preserve">
    <value>T_Maximises the window to fill the screen.</value>
  </data>
  <data name="Minimise" xml:space="preserve">
    <value>T_Minimise</value>
  </data>
  <data name="MinimisesTheWindowToTheTaskTray" xml:space="preserve">
    <value>T_Minimises the window to the task tray.</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>T_Restore</value>
  </data>
  <data name="RestoresTheWindowFromItsMinimisedOrMaximisedState" xml:space="preserve">
    <value>T_Restores the window from its minimised or maximised state.</value>
  </data>
  <data name="HideAllWindows" xml:space="preserve">
    <value>T_Hide All Windows</value>
  </data>
  <data name="HidesAllToplevelWindowsBelongingToAnApplicationUseHideWindowToHideAnIndividualWi" xml:space="preserve">
    <value>T_Hides all top-level windows belonging to an application. T_Use 'Hide Window' to hide an individual window</value>
  </data>
  <data name="HideWindow" xml:space="preserve">
    <value>T_Hide Window</value>
  </data>
  <data name="HidesAToplevelWindowByMovingItOffscreenAndRemovingFromTheTaskbar" xml:space="preserve">
    <value>T_Hides a top-level window by moving it offscreen, and removing from the taskbar.</value>
  </data>
  <data name="UnhideWindow" xml:space="preserve">
    <value>T_Unhide Window</value>
  </data>
  <data name="UnhidesAToplevelWindowWhichHasPreviouslyBeenHidden" xml:space="preserve">
    <value>T_Unhides a top-level window which has previously been hidden.</value>
  </data>
  <data name="IsWindowHidden" xml:space="preserve">
    <value>T_Is Window Hidden</value>
  </data>
  <data name="DeterminesWhetherAWindowHasPreviouslyBeenHiddenUsingACallToHideWindow" xml:space="preserve">
    <value>T_Determines whether a window has previously been hidden using a call to 'Hide Window'.</value>
  </data>
  <data name="PerformsAnAction" xml:space="preserve">
    <value>T_Performs an action</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>T_Action</value>
  </data>
  <data name="BringsAJavaElementIntoFocusReadyToReceiveKeyboardInput" xml:space="preserve">
    <value>T_Brings a java element into focus, ready to receive keyboard input</value>
  </data>
  <data name="SelectTab" xml:space="preserve">
    <value>T_Select Tab</value>
  </data>
  <data name="SelectsAJavaTabFromAJavaTabControl" xml:space="preserve">
    <value>T_Selects a java tab from a java tab control</value>
  </data>
  <data name="GetsTheNumberOfItemsContainedInAJavaComponentEgTheNumberOfRowsInATableEgTheNumbe" xml:space="preserve">
    <value>T_Gets the number of items contained in a java component, eg the number of rows in a table, eg the number of items in a combo box</value>
  </data>
  <data name="GetsAllItemsFromAJavaTableComboBoxEtcForSimpleControlsTheCollectionHasASingleFie" xml:space="preserve">
    <value>T_Gets all items from a java table, combo box, etc. T_For simple controls, the collection has a single field called 'Item Text'. T_For multi-column controls, the fields will be named as they are in the control, where possible - otherwise names such as 'Column1', 'Column2' will be used.</value>
  </data>
  <data name="GetsAllSelectedItemsFromAJavaTableComboBoxEtc" xml:space="preserve">
    <value>T_Gets all selected items from a java table, combo box, etc</value>
  </data>
  <data name="ClickAtTheCentreOfTheActiveAccessibilityElement" xml:space="preserve">
    <value>T_Click at the centre of the Active Accessibility element.</value>
  </data>
  <data name="GetName" xml:space="preserve">
    <value>T_Get Name</value>
  </data>
  <data name="GetsTheNameOfTheAccessibilityElementSomeApplicationsExposeCurrentValueInformatio" xml:space="preserve">
    <value>T_Gets the name of the Accessibility element. T_Some applications expose current value information in the Name Attribute</value>
  </data>
  <data name="GetDescription" xml:space="preserve">
    <value>T_Get Description</value>
  </data>
  <data name="GetsTheDescriptionOfTheAccessibilityElementSomeApplicationsExposeCurrentValueInf" xml:space="preserve">
    <value>T_Gets the description of the Accessibility element. T_Some applications expose current value information in the Description Attribute</value>
  </data>
  <data name="GetTable" xml:space="preserve">
    <value>T_Get Table</value>
  </data>
  <data name="GetTheActiveAccessibilityTableSpecified" xml:space="preserve">
    <value>T_Get the Active Accessibility table specified</value>
  </data>
  <data name="FocusTheActiveAccessibilityElement" xml:space="preserve">
    <value>T_Focus the Active Accessibility element.</value>
  </data>
  <data name="TheNumberOfSecondsToWaitBeforeEachKeypressNoteThatIfThisIsSetToANonzeroValueText" xml:space="preserve">
    <value>T_The number of seconds to wait before each keypress. T_Note that if this is set to a non-zero value, 'Text' must not contain any control characters or an error will occur</value>
  </data>
  <data name="GetDocumentURL" xml:space="preserve">
    <value>T_Get Document URL</value>
  </data>
  <data name="RetrievesTheURLOfTheCurrentlyLoadedDocument" xml:space="preserve">
    <value>T_Retrieves the URL of the currently loaded document</value>
  </data>
  <data name="GetDocumentURLDomain" xml:space="preserve">
    <value>T_Get Document URL Domain</value>
  </data>
  <data name="RetrievesTheURLDomainOfTheCurrentlyLoadedDocument" xml:space="preserve">
    <value>T_Retrieves the URL domain of the currently loaded document</value>
  </data>
  <data name="Navigate" xml:space="preserve">
    <value>T_Navigate</value>
  </data>
  <data name="NavigateToAURL" xml:space="preserve">
    <value>T_Navigate to a URL</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>T_URL</value>
  </data>
  <data name="TheURLToNavigateTo" xml:space="preserve">
    <value>T_The URL to navigate to.</value>
  </data>
  <data name="ClickTheCentreOfAnHTMLElement" xml:space="preserve">
    <value>T_Click the centre of an HTML element.</value>
  </data>
  <data name="DoubleClickCentre" xml:space="preserve">
    <value>T_Double Click Centre</value>
  </data>
  <data name="DoubleClickTheCentreOfAnHTMLElement" xml:space="preserve">
    <value>T_Double click the centre of an HTML element.</value>
  </data>
  <data name="GetAllChildItemsOfAnHTMLElementAsACollectionForSimpleControlsTheCollectionHasASi" xml:space="preserve">
    <value>T_Get all child items of an HTML element, as a collection. T_For simple controls, the collection has a single field called 'Item Text'. T_For multi-column controls, the fields will be named as they are in the control, where possible - otherwise names such as 'Column1', 'Column2' will be used.</value>
  </data>
  <data name="GetsAllElementsOfAHTMLTableAsACollection" xml:space="preserve">
    <value>T_Gets all elements of a HTML table, as a collection.</value>
  </data>
  <data name="GetAllChildItemsOfAnHTMLElementWhichAreSelectedAsACollection" xml:space="preserve">
    <value>T_Get all child items of an HTML element which are selected, as a collection.</value>
  </data>
  <data name="SelectsTheItemInAComboBoxThatMatchesTheGivenParameters" xml:space="preserve">
    <value>T_Selects the item in a ComboBox that matches the given parameters.</value>
  </data>
  <data name="ItemValue" xml:space="preserve">
    <value>T_Item Value</value>
  </data>
  <data name="TheValueOfTheItemToSelectedThisParameterIsIgnoredUnlessTheItemTextAndItemPositio" xml:space="preserve">
    <value>T_The value of the item to selected. T_This parameter is ignored unless the 'Item Text' and 'Item Position' parameter is blank.</value>
  </data>
  <data name="GetTheNumberOfChildItemsOfAnHTMLElement" xml:space="preserve">
    <value>T_Get the number of child items of an HTML element.</value>
  </data>
  <data name="GetTheNumberOfChildItemsOfAnHTMLElementWhichAreSelected" xml:space="preserve">
    <value>T_Get the number of child items of an HTML element, which are selected.</value>
  </data>
  <data name="InvokeJavascriptFunction" xml:space="preserve">
    <value>T_Invoke Javascript Function</value>
  </data>
  <data name="CallsTheSpecifiedJavascriptFunctionThisCanBeAStandardJavascriptFunctionOrOneWhic" xml:space="preserve">
    <value>T_Calls the specified javascript function. T_This can be a standard javascript function, or one which is defined in the target HTML page.</value>
  </data>
  <data name="FunctionName" xml:space="preserve">
    <value>T_Function Name</value>
  </data>
  <data name="TheNameOfTheFunctionToBeCalled" xml:space="preserve">
    <value>T_The name of the function to be called.</value>
  </data>
  <data name="Arguments" xml:space="preserve">
    <value>T_Arguments</value>
  </data>
  <data name="TheArgumentsToPassToTheFunctionAsAnArrayOfObjectsInJSONFormat" xml:space="preserve">
    <value>T_The arguments to pass to the function, as an array of objects in JSON format</value>
  </data>
  <data name="InsertJavascriptFragment" xml:space="preserve">
    <value>T_Insert Javascript Fragment</value>
  </data>
  <data name="InsertsTheSuppliedJavascriptFragmentIntoTheTargetDocumentThisCanBeAMixtureOfMeth" xml:space="preserve">
    <value>T_Inserts the supplied javascript fragment into the target document. T_This can be a mixture of methods and variables. T_The methods can later be invoked using the corresponding method.</value>
  </data>
  <data name="Fragment" xml:space="preserve">
    <value>T_Fragment</value>
  </data>
  <data name="TheJavascriptFragmentToBeInsertedEg0varSuccess0functionDoSomethingAlerthello0Suc" xml:space="preserve">
    <value>T_The javascript fragment to be inserted. T_Eg {0}var Success;{0}function doSomething() {{ alert('hello');{0}Success = true;{0}}}</value>
  </data>
  <data name="UpdateCookie" xml:space="preserve">
    <value>T_Update Cookie</value>
  </data>
  <data name="UpdatesTheGivenCookieOnTheTargetDocumentCookiesNeedToBeSpecifiedInTheFormatNamev" xml:space="preserve">
    <value>T_Updates the given cookie on the target document. T_Cookies need to be specified in the format "name=value". T_By default the cookie will expire when the browser is closed, but to have the cookie persist set an expiry date using "name=value; expires=date". T_To delete a cookie use "name=; expires=date", where name is the name of the cookie and date is in the past. T_Dates should be in UTC format e.g. Thu, 18 Dec 2013 12:00:00 UTC</value>
  </data>
  <data name="Cookie" xml:space="preserve">
    <value>T_Cookie</value>
  </data>
  <data name="TheCookieDataToBeSet" xml:space="preserve">
    <value>T_The cookie data to be set</value>
  </data>
  <data name="HTMLSnapshot" xml:space="preserve">
    <value>T_HTML Snapshot</value>
  </data>
  <data name="TakeASnapshotOfAllHTMLDocumentElements" xml:space="preserve">
    <value>T_Take a snapshot of all HTML document elements.</value>
  </data>
  <data name="SourceCapture" xml:space="preserve">
    <value>T_Source Capture</value>
  </data>
  <data name="CaptureTheSourceOfTheHTMLDocument" xml:space="preserve">
    <value>T_Capture the source of the HTML document.</value>
  </data>
  <data name="GetHTML" xml:space="preserve">
    <value>T_Get HTML</value>
  </data>
  <data name="GetsTheHTMLOfAnElement" xml:space="preserve">
    <value>T_Gets the HTML of an element.</value>
  </data>
  <data name="GetPath" xml:space="preserve">
    <value>T_Get Path</value>
  </data>
  <data name="GetsPathOfTheHTMLElement" xml:space="preserve">
    <value>T_Gets Path of the HTML element.</value>
  </data>
  <data name="Snapshot" xml:space="preserve">
    <value>T_Snapshot</value>
  </data>
  <data name="TakeASnapshotOfAllElements" xml:space="preserve">
    <value>T_Take a snapshot of all elements.</value>
  </data>
  <data name="ClickLink" xml:space="preserve">
    <value>T_Click Link</value>
  </data>
  <data name="ClicksANetLinkLabel" xml:space="preserve">
    <value>T_Clicks a .Net Link Label</value>
  </data>
  <data name="ReadTextDDE" xml:space="preserve">
    <value>T_Read Text (DDE)</value>
  </data>
  <data name="ReadsTheValueOfADDEField" xml:space="preserve">
    <value>T_Reads the value of a DDE field</value>
  </data>
  <data name="ExecuteCommandDDE" xml:space="preserve">
    <value>T_Execute Command (DDE)</value>
  </data>
  <data name="ExecutesTheCommandRepresentedByTheCurrentDDEElement" xml:space="preserve">
    <value>T_Executes the command represented by the current DDE element.</value>
  </data>
  <data name="TheValueIfAnyToSupplyToTheDDECommand" xml:space="preserve">
    <value>T_The value (if any) to supply to the DDE command.</value>
  </data>
  <data name="NoCheck" xml:space="preserve">
    <value>T_No Check</value>
  </data>
  <data name="IfTrueThenNoCheckWillBeMadeAsToTheSuccessOfTheOperationThisProvidesAWorkaroundFo" xml:space="preserve">
    <value>T_If true, then no check will be made as to the success of the operation. T_This provides a workaround for a badly behaved application which performs the requested command, but fails to feed back a success status. T_Defaults to False.</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>T_Verify</value>
  </data>
  <data name="VerifiesThatAnElementExistsAndOptionallyHighlightsTheElement" xml:space="preserve">
    <value>T_Verifies that an element exists, and optionally highlights the element</value>
  </data>
  <data name="Highlight" xml:space="preserve">
    <value>T_Highlight</value>
  </data>
  <data name="SpecifiesThatTheElementShouldBeHighlighted" xml:space="preserve">
    <value>T_Specifies that the element should be highlighted</value>
  </data>
  <data name="Click" xml:space="preserve">
    <value>T_Click</value>
  </data>
  <data name="ClicksOnTheGivenElement" xml:space="preserve">
    <value>T_Clicks on the given element</value>
  </data>
  <data name="DoubleClick" xml:space="preserve">
    <value>T_Double Click</value>
  </data>
  <data name="DoubleClickTheGivenElement" xml:space="preserve">
    <value>T_Double click the given element</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>T_Select</value>
  </data>
  <data name="SelectsTheCurrentElementAndAnyDescendantElements" xml:space="preserve">
    <value>T_Selects the current element and any descendant elements</value>
  </data>
  <data name="SetsTheKeyboardFocusToTheGivenElement" xml:space="preserve">
    <value>T_Sets the keyboard focus to the given element</value>
  </data>
  <data name="SetAttribute" xml:space="preserve">
    <value>T_Set Attribute</value>
  </data>
  <data name="SetsTheGivenAttributeOnTheElement" xml:space="preserve">
    <value>T_Sets the given attribute on the element</value>
  </data>
  <data name="TheNameOfTheAttributeToSet" xml:space="preserve">
    <value>T_The name of the attribute to set</value>
  </data>
  <data name="TheValueToSetTheAttributeTo" xml:space="preserve">
    <value>T_The value to set the attribute to</value>
  </data>
  <data name="SetsTheCheckedStateOfTheElement" xml:space="preserve">
    <value>T_Sets the checked state of the element</value>
  </data>
  <data name="WhetherTheControlShouldBeChecked" xml:space="preserve">
    <value>T_Whether the control should be checked</value>
  </data>
  <data name="ScrollTo" xml:space="preserve">
    <value>T_Scroll To</value>
  </data>
  <data name="ScrollTheParentToTheElement" xml:space="preserve">
    <value>T_Scroll the parent to the element</value>
  </data>
  <data name="SetAddress" xml:space="preserve">
    <value>T_Set Address</value>
  </data>
  <data name="NavigatesToTheGivenAddress" xml:space="preserve">
    <value>T_Navigates to the given address</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>T_Address</value>
  </data>
  <data name="TheWebAddressToNavigateTo" xml:space="preserve">
    <value>T_The Web address to navigate to</value>
  </data>
  <data name="UpdatesTheGivenCookieOnTheTargetDocumentCookiesNeedToBeSpecifiedInTheFormatNa_1" xml:space="preserve">
    <value>T_Updates the given cookie on the target document. T_Cookies need to be specified in the format "name=value". T_By default the cookie will expire when the browser is closed, but to have the cookie persist set an expiry date using "name=value; expires=date". T_To delete a cookie use "name=; expires=date", where name is the name of the cookie and date is in the past. T_Dates should be in UTC format e.g. Thu, 18 Dec 2013 12:00:00 UTC</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>T_Submit</value>
  </data>
  <data name="SubmitsTheForm" xml:space="preserve">
    <value>T_Submits the form</value>
  </data>
  <data name="SelectListItem" xml:space="preserve">
    <value>T_Select List Item</value>
  </data>
  <data name="SelectsAnItemInTheListByNameOrIndex" xml:space="preserve">
    <value>T_Selects an item in the list by name or index</value>
  </data>
  <data name="ItemIndex" xml:space="preserve">
    <value>T_Item Index</value>
  </data>
  <data name="TheIndexOfTheItemToSelect" xml:space="preserve">
    <value>T_The index of the item to select</value>
  </data>
  <data name="TheTextOfTheItemToSelect" xml:space="preserve">
    <value>T_The text of the item to select</value>
  </data>
  <data name="AddToSelection" xml:space="preserve">
    <value>T_Add To Selection</value>
  </data>
  <data name="AddsAnItemToTheListsSelectedItemsByNameOrIndex" xml:space="preserve">
    <value>T_Adds an item to the list's selected items by name or index</value>
  </data>
  <data name="TheIndexOfTheItem" xml:space="preserve">
    <value>T_The index of the item</value>
  </data>
  <data name="TheTextOfTheItem" xml:space="preserve">
    <value>T_The text of the item</value>
  </data>
  <data name="RemoveFromSelection" xml:space="preserve">
    <value>T_Remove From Selection</value>
  </data>
  <data name="RemovesAnItemFromTheListsSelectedItemsByNameOrIndex" xml:space="preserve">
    <value>T_Removes an item from the list's selected items by name or index</value>
  </data>
  <data name="ClickMenuItem" xml:space="preserve">
    <value>T_Click Menu Item</value>
  </data>
  <data name="ClicksTheMenuItemIdentifiedByNameOrIndex" xml:space="preserve">
    <value>T_Clicks the menu item identified by name or index</value>
  </data>
  <data name="TheIndexOfTheItemToClick" xml:space="preserve">
    <value>T_The index of the item to click</value>
  </data>
  <data name="TheTextOfTheItemToClick" xml:space="preserve">
    <value>T_The text of the item to click</value>
  </data>
  <data name="ToggleExpandCollapse" xml:space="preserve">
    <value>T_Toggle Expand/Collapse</value>
  </data>
  <data name="TogglesWhetherTheElementIsExpandedOrCollapsed" xml:space="preserve">
    <value>T_Toggles whether the element is expanded or collapsed</value>
  </data>
  <data name="Expand" xml:space="preserve">
    <value>T_Expand</value>
  </data>
  <data name="ExpandsTheElement" xml:space="preserve">
    <value>T_Expands the element</value>
  </data>
  <data name="Collapse" xml:space="preserve">
    <value>T_Collapse</value>
  </data>
  <data name="CollapsesTheElement" xml:space="preserve">
    <value>T_Collapses the element</value>
  </data>
  <data name="CheckRadio" xml:space="preserve">
    <value>T_Check Radio</value>
  </data>
  <data name="SetsTheRadioButtonToBeTheOneInItsGroupThatsChecked" xml:space="preserve">
    <value>T_Sets the radio button to be the one in its group that's checked</value>
  </data>
  <data name="SelectTextRange" xml:space="preserve">
    <value>T_Select Text Range</value>
  </data>
  <data name="SelectsARangeOfTextWithinTheElement" xml:space="preserve">
    <value>T_Selects a range of text within the element</value>
  </data>
  <data name="StartIndex" xml:space="preserve">
    <value>T_Start Index</value>
  </data>
  <data name="TheCharacterToStartTheSelectionAt" xml:space="preserve">
    <value>T_The character to start the selection at</value>
  </data>
  <data name="TheNumberOfCharactersToSelect" xml:space="preserve">
    <value>T_The number of characters to select</value>
  </data>
  <data name="GetAttribute" xml:space="preserve">
    <value>T_Get Attribute</value>
  </data>
  <data name="GetsTheGivenAttributeOfTheElement" xml:space="preserve">
    <value>T_Gets the given attribute of the element</value>
  </data>
  <data name="GetsTheBoundsOfTheElementRelativeToThePage" xml:space="preserve">
    <value>T_Gets the bounds of the element relative to the page</value>
  </data>
  <data name="GetCheckState" xml:space="preserve">
    <value>T_Get Check State</value>
  </data>
  <data name="GetsTheCheckedStateOfTheElement" xml:space="preserve">
    <value>T_Gets the checked state of the element</value>
  </data>
  <data name="GetColumnCount" xml:space="preserve">
    <value>T_Get Column Count</value>
  </data>
  <data name="GetsTheNumberOfColumnsInTheTable" xml:space="preserve">
    <value>T_Gets the number of columns in the table</value>
  </data>
  <data name="GetFormValues" xml:space="preserve">
    <value>T_Get Form Values</value>
  </data>
  <data name="GetsTheValuesFromEachInputElementInAForm" xml:space="preserve">
    <value>T_Gets the values from each input element in a form</value>
  </data>
  <data name="GetID" xml:space="preserve">
    <value>T_Get ID</value>
  </data>
  <data name="GetsTheIDOfTheElement" xml:space="preserve">
    <value>T_Gets the ID of the element</value>
  </data>
  <data name="GetIsOnScreen" xml:space="preserve">
    <value>T_Get Is On Screen</value>
  </data>
  <data name="GetsAValueIndicatingWhetherTheElementIsVisibleOnScreen" xml:space="preserve">
    <value>T_Gets a value indicating whether the element is visible on screen</value>
  </data>
  <data name="GetIsSelected" xml:space="preserve">
    <value>T_Get Is Selected</value>
  </data>
  <data name="GetsAValueIndicatingWhetherTheListItemIsSelected" xml:space="preserve">
    <value>T_Gets a value indicating whether the list item is selected</value>
  </data>
  <data name="GetIsVisible" xml:space="preserve">
    <value>T_Get Is Visible</value>
  </data>
  <data name="GetsAValueIndicatingWhetherTheElementIsVisible" xml:space="preserve">
    <value>T_Gets a value indicating whether the element is visible</value>
  </data>
  <data name="GetItems" xml:space="preserve">
    <value>T_Get Items</value>
  </data>
  <data name="GetsAllItemsFromAList" xml:space="preserve">
    <value>T_Gets all items from a list</value>
  </data>
  <data name="GetLabel" xml:space="preserve">
    <value>T_Get Label</value>
  </data>
  <data name="GetsTheLabelAssociatedWithAnElement" xml:space="preserve">
    <value>T_Gets the label associated with an element</value>
  </data>
  <data name="GetLinkAddress" xml:space="preserve">
    <value>T_Get Link Address</value>
  </data>
  <data name="GetsTheWebAddressThatALinkPointsTo" xml:space="preserve">
    <value>T_Gets the web address that a link points to</value>
  </data>
  <data name="GetsTheMaximumValueOfANumericElement" xml:space="preserve">
    <value>T_Gets the maximum value of a numeric element</value>
  </data>
  <data name="GetsTheMinimumValueOfANumericElement" xml:space="preserve">
    <value>T_Gets the minimum value of a numeric element</value>
  </data>
  <data name="GetPageURL" xml:space="preserve">
    <value>T_Get Page URL</value>
  </data>
  <data name="GetsTheURLOfTheWebPageThatContainsThisElement" xml:space="preserve">
    <value>T_Gets the URL of the web page that contains this element</value>
  </data>
  <data name="GetRowCount" xml:space="preserve">
    <value>T_Get Row Count</value>
  </data>
  <data name="GetsTheNumberOfRowsInTheTable" xml:space="preserve">
    <value>T_Gets the number of rows in the table</value>
  </data>
  <data name="GetsTheItemsInAListWhichAreSelected" xml:space="preserve">
    <value>T_Gets the items in a list which are selected</value>
  </data>
  <data name="GetSelectedItemsText" xml:space="preserve">
    <value>T_Get Selected Items Text</value>
  </data>
  <data name="GetsTheTextSelectedInAnElement" xml:space="preserve">
    <value>T_Gets the text selected in an element</value>
  </data>
  <data name="GetTableItem" xml:space="preserve">
    <value>T_Get Table Item</value>
  </data>
  <data name="GetsTheItemInATableAtTheGivenRowAndColumn" xml:space="preserve">
    <value>T_Gets the item in a table at the given row and column</value>
  </data>
  <data name="ColumnIndex_1" xml:space="preserve">
    <value>T_Column index</value>
  </data>
  <data name="RowIndex_1" xml:space="preserve">
    <value>T_Row index</value>
  </data>
  <data name="GetTableItems" xml:space="preserve">
    <value>T_Get Table Items</value>
  </data>
  <data name="GetsAllItemsInATable" xml:space="preserve">
    <value>T_Gets all items in a table</value>
  </data>
  <data name="GetsTheTextContainedInAnElement" xml:space="preserve">
    <value>T_Gets the text contained in an element</value>
  </data>
  <data name="ReadsTheCurrentValueFromAWebElement" xml:space="preserve">
    <value>T_Reads the current value from a Web element</value>
  </data>
  <data name="GetsTheNameOfTheUIAElementSomeApplicationsExposeCurrentValueInformationInTheName" xml:space="preserve">
    <value>T_Gets the name of the UIA element. T_Some applications expose current value information in the Name Attribute</value>
  </data>
  <data name="FocusTheUIAElement" xml:space="preserve">
    <value>T_Focus the UIA element.</value>
  </data>
  <data name="PressTheUIAutomationButtonElementThisWillInvokeToggleOrExpandcollapseTheButtonDe" xml:space="preserve">
    <value>T_Press the UI Automation button element (this will invoke, toggle or expand/collapse the button depending which action the button supports.</value>
  </data>
  <data name="PressTheUIAutomationElement" xml:space="preserve">
    <value>T_Press the UI Automation element</value>
  </data>
  <data name="DeselectsAnySelectedItemsAndThenSelectsTheUIAutomationElement" xml:space="preserve">
    <value>T_Deselects any selected items and then selects the UI Automation element</value>
  </data>
  <data name="PressMenuItem" xml:space="preserve">
    <value>T_Press Menu Item</value>
  </data>
  <data name="PressTheUIAutomationMenuItemElementEitherByExpandingASubmenuOrInvokingTheMenuIte" xml:space="preserve">
    <value>T_Press the UI Automation menu item element, either by expanding a submenu or invoking the menu item itself</value>
  </data>
  <data name="Toggle" xml:space="preserve">
    <value>T_Toggle</value>
  </data>
  <data name="ChangeTheToggleStateOfTheUIAutomationElement" xml:space="preserve">
    <value>T_Change the toggle state of the UI Automation element</value>
  </data>
  <data name="GetTheCheckedStateOfTheUIAutomationElement" xml:space="preserve">
    <value>T_Get the checked state of the UI Automation element</value>
  </data>
  <data name="UIAGetToggleState" xml:space="preserve">
    <value>T_UIAGetToggleState</value>
  </data>
  <data name="GetPressed" xml:space="preserve">
    <value>T_Get Pressed</value>
  </data>
  <data name="GetThePressedStateOfTheUIAutomationElement" xml:space="preserve">
    <value>T_Get the pressed state of the UI Automation element</value>
  </data>
  <data name="SetsTheCheckedStateOfTheUIAutomationElement" xml:space="preserve">
    <value>T_Sets the checked state of the UI Automation element</value>
  </data>
  <data name="ReadsTheCurrentValueFromAUIAutomationElement" xml:space="preserve">
    <value>T_Reads the current value from a UI Automation element</value>
  </data>
  <data name="SetCurrentValue" xml:space="preserve">
    <value>T_Set Current Value</value>
  </data>
  <data name="WritesTheCurrentValueToAUIAutomationElement" xml:space="preserve">
    <value>T_Writes the current value to a UI Automation element</value>
  </data>
  <data name="ExpandCollapse" xml:space="preserve">
    <value>T_Expand/Collapse</value>
  </data>
  <data name="ExpandsOrCollapsesTheUIAutomationElement" xml:space="preserve">
    <value>T_Expands or collapses the UI Automation element.</value>
  </data>
  <data name="SetsTheCheckedStatusOfAUIARadioButton" xml:space="preserve">
    <value>T_Sets the checked status of a UIA radio button</value>
  </data>
  <data name="GetsTheTextOfTheSelectedItem" xml:space="preserve">
    <value>T_Gets the text of the selected item.</value>
  </data>
  <data name="GetsTheTextSelectedInTheElement" xml:space="preserve">
    <value>T_Gets the text selected in the element</value>
  </data>
  <data name="ReadsTheCurrentStateOfWhetherTheElementIsExpandedOrCollapsedIfTheElementCannotBe" xml:space="preserve">
    <value>T_Reads the current state of whether the element is expanded or collapsed. T_If the element cannot be expanded, this will return False</value>
  </data>
  <data name="GetsTheSelectedItemsInTheList" xml:space="preserve">
    <value>T_Gets the selected items in the list</value>
  </data>
  <data name="GetItemCount" xml:space="preserve">
    <value>T_Get Item Count</value>
  </data>
  <data name="GetsTheNumberOfItemsInTheList" xml:space="preserve">
    <value>T_Gets the number of items in the list</value>
  </data>
  <data name="GetsAllItemsInTheList" xml:space="preserve">
    <value>T_Gets all items in the list</value>
  </data>
  <data name="DeselectsAnySelectedItemsAndThenSelectsTheCurrentElementIfTheItemTextParameterIs" xml:space="preserve">
    <value>T_Deselects any selected items and then selects the current element. T_If the Item Text parameter is supplied, this takes precedence over the Item Position parameter.</value>
  </data>
  <data name="TheOnebasedIndexOfTheItemToSelect" xml:space="preserve">
    <value>T_The one-based index of the item to select</value>
  </data>
  <data name="SelectsTheSpecifiedItemInAUIAComboBoxIfTheItemTextParameterIsSuppliedThisTakesPr" xml:space="preserve">
    <value>T_Selects the specified item in a UIA combo box. T_If the Item Text parameter is supplied, this takes precedence over the Item Position parameter.</value>
  </data>
  <data name="GetsTheNumberOfItemsInTheListInAUIAComboBox" xml:space="preserve">
    <value>T_Gets the number of items in the list in a UIA combo box.</value>
  </data>
  <data name="GetsAllItemsInTheListInAUIAComboBox" xml:space="preserve">
    <value>T_Gets all items in the list in a UIA combo box.</value>
  </data>
  <data name="ScrollVertically" xml:space="preserve">
    <value>T_Scroll Vertically</value>
  </data>
  <data name="ScrollsAnElementVertically" xml:space="preserve">
    <value>T_Scrolls an element vertically</value>
  </data>
  <data name="BigStep" xml:space="preserve">
    <value>T_Big Step</value>
  </data>
  <data name="WhetherTheScrollShouldBeABigStep" xml:space="preserve">
    <value>T_Whether the scroll should be a big step.</value>
  </data>
  <data name="ScrollUp" xml:space="preserve">
    <value>T_Scroll Up</value>
  </data>
  <data name="WhetherTheScrollShouldBeInTheUpwardsDirection" xml:space="preserve">
    <value>T_Whether the scroll should be in the upwards direction.</value>
  </data>
  <data name="ScrollHorizontally" xml:space="preserve">
    <value>T_Scroll Horizontally</value>
  </data>
  <data name="ScrollsAnElementHorizontally" xml:space="preserve">
    <value>T_Scrolls an element horizontally</value>
  </data>
  <data name="AddsAnItemToItsParentsSelectedItems" xml:space="preserve">
    <value>T_Adds an item to its parent's selected items</value>
  </data>
  <data name="RemovesAnItemFromItsParentsSelectedItems" xml:space="preserve">
    <value>T_Removes an item from its parent's selected items</value>
  </data>
  <data name="ScrollIntoView" xml:space="preserve">
    <value>T_Scroll Into View</value>
  </data>
  <data name="ScrollsTheElementIntoView" xml:space="preserve">
    <value>T_Scrolls the element into view</value>
  </data>
  <data name="AddsTheSpecfiedItemToTheListsSelectedItemsIfTheItemTextParameterIsSuppliedThisTa" xml:space="preserve">
    <value>T_Adds the specfied item to the list's selected items. T_If the Item Text parameter is supplied, this takes precedence over the Item Position parameter.</value>
  </data>
  <data name="RemovesTheGivenItemFromTheListsSelectedItemsIfTheItemTextParameterIsSuppliedThis" xml:space="preserve">
    <value>T_Removes the given item from the list's selected items. T_If the Item Text parameter is supplied, this takes precedence over the Item Position parameter.</value>
  </data>
  <data name="TheOnebasedIndexOfTheItemToDeselect" xml:space="preserve">
    <value>T_The one-based index of the item to de-select</value>
  </data>
  <data name="TheTextOfTheItemToDeselect" xml:space="preserve">
    <value>T_The text of the item to de-select</value>
  </data>
  <data name="WhetherTheItemIsCurrentlySelected" xml:space="preserve">
    <value>T_Whether the item is currently selected</value>
  </data>
  <data name="GetAllTabsText" xml:space="preserve">
    <value>T_Get All Tabs Text</value>
  </data>
  <data name="ReturnsACollectionOfTheTextOfAllTheTabsContainedWithinTheTabControl" xml:space="preserve">
    <value>T_Returns a collection of the text of all the tabs contained within the tab control</value>
  </data>
  <data name="SelectsTheTabItem" xml:space="preserve">
    <value>T_Selects the Tab Item</value>
  </data>
  <data name="SelectsTheTabWithinAUIATabControlIfTheTabTextParameterIsSuppliedThisTakesPrecede" xml:space="preserve">
    <value>T_Selects the Tab within a UIA Tab Control. T_If the Tab Text parameter is supplied, this takes precedence over the Tab Position parameter.</value>
  </data>
  <data name="TabPosition" xml:space="preserve">
    <value>T_Tab Position</value>
  </data>
  <data name="TheOnebasedIndexOfTheTabToSelect" xml:space="preserve">
    <value>T_The one-based index of the tab to select</value>
  </data>
  <data name="TheTextValueOfTheTabToSelect" xml:space="preserve">
    <value>T_The text value of the tab to select</value>
  </data>
  <data name="TheTextOfTheTreeViewItemOfInterest" xml:space="preserve">
    <value>T_The text of the tree view item of interest.</value>
  </data>
  <data name="The1basedIndexOfTheTreeViewItemOfInterestThisParameterIsIgnoredUnlessTheItemText" xml:space="preserve">
    <value>T_The 1-based index of the tree view item of interest. T_This parameter is ignored unless the 'Item Text' parameter is blank.</value>
  </data>
  <data name="SelectsAnItemInATree" xml:space="preserve">
    <value>T_Selects an item in a tree</value>
  </data>
  <data name="AddsTheGivenItemToTheTreesSelectedItems" xml:space="preserve">
    <value>T_Adds the given item to the tree's selected items.</value>
  </data>
  <data name="RemovesTheGivenItemFromTheTreesSelectedItems" xml:space="preserve">
    <value>T_Removes the given item from the tree's selected items.</value>
  </data>
  <data name="The1basedColumnNumberIndicatingWhichColumnToActOn" xml:space="preserve">
    <value>T_The 1-based column number indicating which column to act on.</value>
  </data>
  <data name="The1basedRowNumberIndicatingWhichRowToActOn" xml:space="preserve">
    <value>T_The 1-based row number indicating which row to act on.</value>
  </data>
  <data name="ComponentIndexWithinTheCell0IndicatesTheCellItself" xml:space="preserve">
    <value>T_Component index within the cell, 0 indicates the cell itself.</value>
  </data>
  <data name="ReadCellText" xml:space="preserve">
    <value>T_Read Cell Text</value>
  </data>
  <data name="ReadsTheTextFromTheCell" xml:space="preserve">
    <value>T_Reads the text from the cell</value>
  </data>
  <data name="WriteCellText" xml:space="preserve">
    <value>T_Write Cell Text</value>
  </data>
  <data name="SetsTheTextIntoTheSpecifiedCell" xml:space="preserve">
    <value>T_Sets the text into the specified cell</value>
  </data>
  <data name="CellText" xml:space="preserve">
    <value>T_Cell Text</value>
  </data>
  <data name="TheNewTextForTheCellDefaultIsBlank" xml:space="preserve">
    <value>T_The new text for the cell. T_Default is blank.</value>
  </data>
  <data name="ScrollsTheTableCellIntoView" xml:space="preserve">
    <value>T_Scrolls the table cell into view</value>
  </data>
  <data name="GetRows" xml:space="preserve">
    <value>T_Get Rows</value>
  </data>
  <data name="GetsTheDataInTheSpecifiedRows" xml:space="preserve">
    <value>T_Gets the data in the specified rows</value>
  </data>
  <data name="FirstRowNumber" xml:space="preserve">
    <value>T_First Row Number</value>
  </data>
  <data name="The1basedRowNumberIndicatingTheFirstRowToIncludeInTheCollectionDefaultsTo1IfNotS" xml:space="preserve">
    <value>T_The 1-based row number indicating the first row to include in the collection. T_Defaults to 1 if not specified.</value>
  </data>
  <data name="LastRowNumber" xml:space="preserve">
    <value>T_Last Row Number</value>
  </data>
  <data name="The1basedRowNumberIndicatingTheLastRowToIncludeInTheCollectionDefaultsToTheLastR" xml:space="preserve">
    <value>T_The 1-based row number indicating the last row to include in the collection. T_Defaults to the last row in the table if not specified.</value>
  </data>
  <data name="AddRowToSelection" xml:space="preserve">
    <value>T_Add Row To Selection</value>
  </data>
  <data name="AddsARowToTheCurrentSelection" xml:space="preserve">
    <value>T_Adds a row to the current selection.</value>
  </data>
  <data name="RemoveRowFromSelection" xml:space="preserve">
    <value>T_Remove Row From Selection</value>
  </data>
  <data name="RemovesARowFromTheCurrentSelection" xml:space="preserve">
    <value>T_Removes a row from the current selection.</value>
  </data>
  <data name="ClearsTheCurrentSelection" xml:space="preserve">
    <value>T_Clears the current selection.</value>
  </data>
  <data name="GetSelectedRows" xml:space="preserve">
    <value>T_Get Selected Rows</value>
  </data>
  <data name="GetsTheSelectedRowsAsACollection" xml:space="preserve">
    <value>T_Gets the selected rows as a collection.</value>
  </data>
  <data name="GetTheNumberOfRowsInTheTable" xml:space="preserve">
    <value>T_Get the number of rows in the table.</value>
  </data>
  <data name="GetTheNumberOfColumnsInTheTable" xml:space="preserve">
    <value>T_Get the number of columns in the table.</value>
  </data>
  <data name="GetSelectedRowNumber" xml:space="preserve">
    <value>T_Get Selected Row Number</value>
  </data>
  <data name="GetsTheNumberOfTheFirstSelectedRowInTheTable" xml:space="preserve">
    <value>T_Gets the number of the first selected row in the table.</value>
  </data>
  <data name="GetSelectedColumnNumber" xml:space="preserve">
    <value>T_Get Selected Column Number</value>
  </data>
  <data name="GetsNumberOfTheFirstSelectedColumnInTheTable" xml:space="preserve">
    <value>T_Gets number of the first selected column in the table.</value>
  </data>
  <data name="ToggleCell" xml:space="preserve">
    <value>T_Toggle Cell</value>
  </data>
  <data name="ChangesTheToggleStateOfTheTableCell" xml:space="preserve">
    <value>T_Changes the Toggle state of the table cell.</value>
  </data>
  <data name="GetsCheckedStateOfTheTableCell" xml:space="preserve">
    <value>T_Gets checked state of the table cell.</value>
  </data>
  <data name="ExpandCollapseCell" xml:space="preserve">
    <value>T_Expand/Collapse Cell</value>
  </data>
  <data name="ExpandsOrCollapsesTheTableCell" xml:space="preserve">
    <value>T_Expands or collapses the table cell.</value>
  </data>
  <data name="GetExpandedCell" xml:space="preserve">
    <value>T_Get Expanded Cell</value>
  </data>
  <data name="ReadsTheCurrentStateOfWhetherTheCellElementIsExpandedOrCollapsed" xml:space="preserve">
    <value>T_Reads the current state of whether the cell element is expanded or collapsed.</value>
  </data>
  <data name="SelectComboboxItem" xml:space="preserve">
    <value>T_Select Combobox Item</value>
  </data>
  <data name="SelectsAnItemFromAComboboxWithinTheTableCellElementIfTheItemTextParameterIsSuppl" xml:space="preserve">
    <value>T_Selects an item from a combobox within the table cell element. T_If the Item Text parameter is supplied, this takes precedence over the Item Position parameter.</value>
  </data>
  <data name="TheTextValueOfTheItemToSelect" xml:space="preserve">
    <value>T_The text value of the item to select</value>
  </data>
  <data name="CountComboboxItems" xml:space="preserve">
    <value>T_Count Combobox Items</value>
  </data>
  <data name="TheNumberOfItemsWithinAComboboxInsideTheUIAutomationElementCell" xml:space="preserve">
    <value>T_The number of items within a combobox inside the UI Automation element cell.</value>
  </data>
  <data name="GetAllComboboxItems" xml:space="preserve">
    <value>T_Get All Combobox Items</value>
  </data>
  <data name="GetAllItemsFromAComboboxWithinTheCellElementAsACollection" xml:space="preserve">
    <value>T_Get all items from a combobox within the cell element as a collection.</value>
  </data>
  <data name="GetSelectedComboboxItem" xml:space="preserve">
    <value>T_Get Selected Combobox Item</value>
  </data>
  <data name="GetsTheValueOfTheSelectedItemFromAComboboxInATableCell" xml:space="preserve">
    <value>T_Gets the value of the selected item from a combobox in a table cell.</value>
  </data>
  <data name="ClickAtTheCentreOfTheUIAElement" xml:space="preserve">
    <value>T_Click at the centre of the UIA element.</value>
  </data>
  <data name="MissingDataTypeForArgument0" xml:space="preserve">
    <value>T_Missing data type for argument {0}</value>
  </data>
  <data name="MissingDescriptionForArgument0" xml:space="preserve">
    <value>T_Missing description for argument {0}</value>
  </data>
  <data name="MissingNameForArgument0" xml:space="preserve">
    <value>T_Missing name for argument {0}</value>
  </data>
  <data name="MissingIDForAction" xml:space="preserve">
    <value>T_Missing ID for action</value>
  </data>
  <data name="MissingNameForAction0" xml:space="preserve">
    <value>T_Missing name for action {0}</value>
  </data>
  <data name="MissingHelptextForAction0" xml:space="preserve">
    <value>T_Missing helptext for action {0}</value>
  </data>
  <data name="ComparesAgainstDrawnTextRetrievedFromARectangularRegion" xml:space="preserve">
    <value>T_Compares against drawn text retrieved from a rectangular region</value>
  </data>
  <data name="ComparesAgainstDrawnTextRetrievedFromAListElementInARectangularRegion" xml:space="preserve">
    <value>T_Compares against drawn text retrieved from a list element in a rectangular region</value>
  </data>
  <data name="TheElementNumberToCheckDefaultIs1" xml:space="preserve">
    <value>T_The element number to check. T_Default is 1.</value>
  </data>
  <data name="ComparesAgainstDrawnTextRetrievedFromAGridCellInARectangularRegion" xml:space="preserve">
    <value>T_Compares against drawn text retrieved from a grid cell in a rectangular region</value>
  </data>
  <data name="TheColumnNumberOfTheGridToCheckDefaultIs1" xml:space="preserve">
    <value>T_The column number of the grid to check. T_Default is 1.</value>
  </data>
  <data name="TheRowNumberOfTheGridToCheckDefaultIs1" xml:space="preserve">
    <value>T_The row number of the grid to check. T_Default is 1.</value>
  </data>
  <data name="MatchesImage" xml:space="preserve">
    <value>T_Matches Image</value>
  </data>
  <data name="ComparesAgainstAnImageRetrievedFromARectangularRegion" xml:space="preserve">
    <value>T_Compares against an image retrieved from a rectangular region</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>T_Image</value>
  </data>
  <data name="TheImageToCompareAgainstIfEmptyItWillCheckForAnElementSnapshotOnTheImageIfNoneFo" xml:space="preserve">
    <value>T_The image to compare against. T_If empty, it will check for an 'Element Snapshot' on the image. T_If none found, an error will occur</value>
  </data>
  <data name="ComparesAgainstAnImageRetrievedFromAListElementInARectangularRegion" xml:space="preserve">
    <value>T_Compares against an image retrieved from a list element in a rectangular region</value>
  </data>
  <data name="ComparesAgainstAnImageRetrievedFromAGridElementInARectangularRegion" xml:space="preserve">
    <value>T_Compares against an image retrieved from a grid element in a rectangular region</value>
  </data>
  <data name="ContainsImage" xml:space="preserve">
    <value>T_Contains Image</value>
  </data>
  <data name="DeterminesIfTheRegionContainsAParticularImage" xml:space="preserve">
    <value>T_Determines if the region contains a particular image.</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheListRegionContainsAParticularImage" xml:space="preserve">
    <value>T_Determines if the specified element in the list region contains a particular image.</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheGridRegionContainsAParticularImage" xml:space="preserve">
    <value>T_Determines if the specified element in the grid region contains a particular image.</value>
  </data>
  <data name="ContainsColour" xml:space="preserve">
    <value>T_Contains Colour</value>
  </data>
  <data name="DeterminesIfTheRegionContainsAParticularColour" xml:space="preserve">
    <value>T_Determines if the region contains a particular colour.</value>
  </data>
  <data name="TheColourToCheckForThisCanBeEnteredAsAColourNameEgRedOrAHexColourCodeEgFF0000" xml:space="preserve">
    <value>T_The colour to check for. T_This can be entered as a colour name (e.g. red) or a Hex colour code (e.g. #FF0000).</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheListRegionContainsAParticularColour" xml:space="preserve">
    <value>T_Determines if the specified element in the list region contains a particular colour.</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheGridRegionContainsAParticularColour" xml:space="preserve">
    <value>T_Determines if the specified element in the grid region contains a particular colour.</value>
  </data>
  <data name="UniformColour" xml:space="preserve">
    <value>T_Uniform Colour</value>
  </data>
  <data name="DeterminesIfTheRegionConsistsOfAUniformColour" xml:space="preserve">
    <value>T_Determines if the region consists of a uniform colour.</value>
  </data>
  <data name="TheColourToCheckForThisCanBeEnteredAsAColourNameEgRedOrAHexColourCodeEgFF0000IfN" xml:space="preserve">
    <value>T_The colour to check for. T_This can be entered as a colour name (e.g. red) or a Hex colour code (e.g. #FF0000). T_If not specified _then returns true if the region consists of any uniform colour.</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheListRegionConsistsOfAUniformColour" xml:space="preserve">
    <value>T_Determines if the specified element in the list region consists of a uniform colour.</value>
  </data>
  <data name="DeterminesIfTheSpecifiedElementInTheGridRegionConsistsOfAUniformColour" xml:space="preserve">
    <value>T_Determines if the specified element in the grid region consists of a uniform colour.</value>
  </data>
  <data name="ComparesTextUsingCharacterMatchingFromARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Compares text using character matching from a rectangular area on a window</value>
  </data>
  <data name="ComparesTextUsingCharacterMatchingFromAListElementInARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Compares text using character matching from a list element in a rectangular area on a window</value>
  </data>
  <data name="ComparesTextUsingCharacterMatchingFromAGridCellInARectangularAreaOnAWindow" xml:space="preserve">
    <value>T_Compares text using character matching from a grid cell in a rectangular area on a window</value>
  </data>
  <data name="ComparesAgainstTextRetrievedFromAJavaElement" xml:space="preserve">
    <value>T_Compares against text retrieved from a java element</value>
  </data>
  <data name="IsFocused" xml:space="preserve">
    <value>T_IsFocused</value>
  </data>
  <data name="DeterminesWhetherAJavaElementIsFocused" xml:space="preserve">
    <value>T_Determines whether a java element is focused</value>
  </data>
  <data name="GetField" xml:space="preserve">
    <value>T_Get Field</value>
  </data>
  <data name="ComparesContentsOfATerminalField" xml:space="preserve">
    <value>T_Compares contents of a terminal field</value>
  </data>
  <data name="GetWindowText" xml:space="preserve">
    <value>T_Get Window Text</value>
  </data>
  <data name="ComparesMainTextOfAWindowOrControl" xml:space="preserve">
    <value>T_Compares main text of a window or control</value>
  </data>
  <data name="CheckExists" xml:space="preserve">
    <value>T_Check Exists</value>
  </data>
  <data name="CheckTheElementExistsTrueOrFalse" xml:space="preserve">
    <value>T_Check the element exists - True or False</value>
  </data>
  <data name="CheckThatTheActiveAccessibilityElementExistsTrueOrFalse" xml:space="preserve">
    <value>T_Check that the Active Accessibility element exists - True or False</value>
  </data>
  <data name="CheckThatTheJavaElementExistsTrueOrFalse" xml:space="preserve">
    <value>T_Check that the Java element exists - True or False</value>
  </data>
  <data name="CheckIfTheTerminalFieldExistsWithTheTextContainedWhenSpiedTrueOrFalse" xml:space="preserve">
    <value>T_Check if the terminal field exists, with the text contained when spied - True or False</value>
  </data>
  <data name="CheckIfTheItemEgACheckboxIsCheckedTrueOrFalse" xml:space="preserve">
    <value>T_Check if the item (e.g a checkbox) is checked - True or False</value>
  </data>
  <data name="DocumentLoaded" xml:space="preserve">
    <value>T_Document Loaded</value>
  </data>
  <data name="CheckIfTheCurrentDocumentHasLoadedTrueOrFalseRelevantOnlyForBrowserApplicationsD" xml:space="preserve">
    <value>T_Check if the current document has loaded - True or False. T_Relevant only for browser applications. T_Do not use this unless you know you are already on the page which you are waiting to load, otherwise it is more appropriate to use Parent Document Loaded on an element on the target page. T_Parent Document Loaded includes an implicit Check exists on the element as well as a Document Loaded check.</value>
  </data>
  <data name="ParentDocumentLoaded" xml:space="preserve">
    <value>T_Parent Document Loaded</value>
  </data>
  <data name="CheckTheElementExistsAndThatTheEntirePageAndAllOfItsChildFramesAreFullyLoadedPar" xml:space="preserve">
    <value>T_Check the element exists and that the entire page and all of its child frames are fully loaded. T_Parent Document Loaded includes an implicit Check exists on the element as well as a Document Loaded check.</value>
  </data>
  <data name="CheckURL" xml:space="preserve">
    <value>T_Check URL</value>
  </data>
  <data name="CheckIfTheURLOfTheCurrentlyLoadedDocumentEqualsAParticularValueRelevantOnlyForBr" xml:space="preserve">
    <value>T_Check if the URL of the currently loaded document equals a particular value. T_Relevant only for browser applications</value>
  </data>
  <data name="CheckURLDomain" xml:space="preserve">
    <value>T_Check URL Domain</value>
  </data>
  <data name="CheckIfTheDomainOfTheURLOfTheCurrentlyLoadedDocumentEqualsAParticularValueReleva" xml:space="preserve">
    <value>T_Check if the domain of the URL of the currently loaded document equals a particular value. T_Relevant only for browser applications</value>
  </data>
  <data name="CheckValue" xml:space="preserve">
    <value>T_Check Value</value>
  </data>
  <data name="CheckIfTheHTMLElementIsASpecificValue" xml:space="preserve">
    <value>T_Check if the HTML element is a specific value</value>
  </data>
  <data name="CheckDDEElementReadable" xml:space="preserve">
    <value>T_Check DDE Element Readable</value>
  </data>
  <data name="ChecksWhetherTheSuppliedDDEElementCanBeLocatedAndItsValueCanBeRead" xml:space="preserve">
    <value>T_Checks whether the supplied DDE element can be located and its value can be read.</value>
  </data>
  <data name="CheckDDETopicAvailable" xml:space="preserve">
    <value>T_Check DDE Topic Available</value>
  </data>
  <data name="ChecksWhetherADDEConversationCanBeInitiatedWithTheSpecifiedServerTopicPairTheIte" xml:space="preserve">
    <value>T_Checks whether a DDE conversation can be initiated with the specified Server/Topic pair. T_The Item attribute of the supplied element is ignored.</value>
  </data>
  <data name="Pressed" xml:space="preserve">
    <value>T_Pressed</value>
  </data>
  <data name="CheckIfTheButtonHasBeenPressed" xml:space="preserve">
    <value>T_Check if the button has been pressed</value>
  </data>
  <data name="MouseLeftDown" xml:space="preserve">
    <value>T_MouseLeftDown</value>
  </data>
  <data name="CheckIfTheLeftMouseButtonHasBeenPressed" xml:space="preserve">
    <value>T_Check if the left mouse button has been pressed</value>
  </data>
  <data name="ChecksWhetherTheBusinessObjectIsCurrentlyConnectedToTheApplicationBeItThroughLau" xml:space="preserve">
    <value>T_Checks whether the business object is currently connected to the application (be it through launching or attaching).</value>
  </data>
  <data name="CheckWindowActive" xml:space="preserve">
    <value>T_Check Window Active</value>
  </data>
  <data name="ChecksWhetherAWindowIsTheCurrentActiveWindowTheWindowWhichReceivesUserInput" xml:space="preserve">
    <value>T_Checks whether a window is the current active window - the window which receives user input.</value>
  </data>
  <data name="Focused" xml:space="preserve">
    <value>T_Focused</value>
  </data>
  <data name="ChecksIfTheElementHasFocus" xml:space="preserve">
    <value>T_Checks if the element has focus</value>
  </data>
  <data name="GetsTheNumberOfItemsInTheComboBox" xml:space="preserve">
    <value>T_Gets the number of items in the combo box</value>
  </data>
  <data name="GetsIfTheElementIsChecked" xml:space="preserve">
    <value>T_Gets if the element is checked</value>
  </data>
  <data name="CheckThatTheWebElementExistsTrueOrFalse" xml:space="preserve">
    <value>T_Check that the Web element exists - True or False</value>
  </data>
  <data name="CheckWindowAttribute" xml:space="preserve">
    <value>T_Check Window Attribute</value>
  </data>
  <data name="CheckTheCurrentValueOfAWindowAttribute" xml:space="preserve">
    <value>T_Check the current value of a window attribute.</value>
  </data>
  <data name="TheNameOfTheAttributeToCheck" xml:space="preserve">
    <value>T_The name of the attribute to check.</value>
  </data>
  <data name="CheckAAAttribute" xml:space="preserve">
    <value>T_Check AA Attribute</value>
  </data>
  <data name="CheckHTMLAttribute" xml:space="preserve">
    <value>T_Check HTML Attribute</value>
  </data>
  <data name="CheckJABAttribute" xml:space="preserve">
    <value>T_Check JAB Attribute</value>
  </data>
  <data name="CheckUIAutomationAttribute" xml:space="preserve">
    <value>T_Check UI Automation Attribute</value>
  </data>
  <data name="Application" xml:space="preserve">
    <value>T_Application</value>
  </data>
  <data name="AnElementRepresentingTheTargetApplicationAsAWhole" xml:space="preserve">
    <value>T_An element representing the target application as a whole.</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>T_Edit</value>
  </data>
  <data name="AStandardWindowsTextEditField" xml:space="preserve">
    <value>T_A standard Windows text edit field.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>T_Password</value>
  </data>
  <data name="AWindowsPasswordTextBox" xml:space="preserve">
    <value>T_A Windows password text box.</value>
  </data>
  <data name="ListBox" xml:space="preserve">
    <value>T_List Box</value>
  </data>
  <data name="AStandardWindowsListBox" xml:space="preserve">
    <value>T_A standard Windows List Box.</value>
  </data>
  <data name="RadioButton" xml:space="preserve">
    <value>T_Radio button</value>
  </data>
  <data name="AStandardWindowsRadioButton" xml:space="preserve">
    <value>T_A standard Windows Radio Button</value>
  </data>
  <data name="CheckBox" xml:space="preserve">
    <value>T_Check box</value>
  </data>
  <data name="AStandardWindowsCheckBox" xml:space="preserve">
    <value>T_A standard Windows check box</value>
  </data>
  <data name="CheckBoxNET" xml:space="preserve">
    <value>T_Check box (.NET)</value>
  </data>
  <data name="ANETCheckBox" xml:space="preserve">
    <value>T_A .NET check box</value>
  </data>
  <data name="Button" xml:space="preserve">
    <value>T_Button</value>
  </data>
  <data name="AStandardWindowsButton" xml:space="preserve">
    <value>T_A standard Windows Button</value>
  </data>
  <data name="ComboBox" xml:space="preserve">
    <value>T_Combo Box</value>
  </data>
  <data name="AStandardWindowsComboBox" xml:space="preserve">
    <value>T_A standard Windows Combo Box</value>
  </data>
  <data name="ListView" xml:space="preserve">
    <value>T_List View</value>
  </data>
  <data name="AStandardWindowsListView" xml:space="preserve">
    <value>T_A standard Windows List View</value>
  </data>
  <data name="AnActiveXListView" xml:space="preserve">
    <value>T_An ActiveX List View</value>
  </data>
  <data name="TreeView" xml:space="preserve">
    <value>T_Tree View</value>
  </data>
  <data name="AStandardWindowsTreeView" xml:space="preserve">
    <value>T_A standard Windows Tree View</value>
  </data>
  <data name="AnActiveXTreeView" xml:space="preserve">
    <value>T_An ActiveX Tree View</value>
  </data>
  <data name="StatusBar" xml:space="preserve">
    <value>T_Status Bar</value>
  </data>
  <data name="AnActiveXStatusBar" xml:space="preserve">
    <value>T_An ActiveX Status Bar</value>
  </data>
  <data name="TabControl" xml:space="preserve">
    <value>T_Tab Control</value>
  </data>
  <data name="AStandardWindowsTabControl" xml:space="preserve">
    <value>T_A standard Windows Tab Control</value>
  </data>
  <data name="TrackBar" xml:space="preserve">
    <value>T_Track Bar</value>
  </data>
  <data name="AStandardWindowsTrackBarControl" xml:space="preserve">
    <value>T_A standard Windows Track Bar Control</value>
  </data>
  <data name="UpDownBox" xml:space="preserve">
    <value>T_Up-Down Box</value>
  </data>
  <data name="AStandardWindowsUpDownControl" xml:space="preserve">
    <value>T_A standard Windows Up-Down Control</value>
  </data>
  <data name="DateTimePicker" xml:space="preserve">
    <value>T_DateTime Picker</value>
  </data>
  <data name="AStandardWindowsDateTimePickerControl" xml:space="preserve">
    <value>T_A standard Windows DateTime-Picker Control</value>
  </data>
  <data name="MonthCalendarPicker" xml:space="preserve">
    <value>T_Month Calendar Picker</value>
  </data>
  <data name="AStandardWindowsMonthCalendarPickerControl" xml:space="preserve">
    <value>T_A standard Windows Month Calendar Picker Control</value>
  </data>
  <data name="ScrollBar" xml:space="preserve">
    <value>T_Scroll Bar</value>
  </data>
  <data name="AStandardWindowsScrollBar" xml:space="preserve">
    <value>T_A standard Windows Scroll Bar</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>T_Label</value>
  </data>
  <data name="AStandardWindowsLabel" xml:space="preserve">
    <value>T_A standard Windows Label</value>
  </data>
  <data name="LinkLabelNET" xml:space="preserve">
    <value>T_Link Label (.NET)</value>
  </data>
  <data name="AStandardNETLinkLabel" xml:space="preserve">
    <value>T_A standard .NET Link Label</value>
  </data>
  <data name="Toolbar" xml:space="preserve">
    <value>T_Toolbar</value>
  </data>
  <data name="AStandardWindowsToolbar" xml:space="preserve">
    <value>T_A standard Windows Toolbar</value>
  </data>
  <data name="NETDataGrid" xml:space="preserve">
    <value>T_.NET DataGrid</value>
  </data>
  <data name="ANETDataGridControl" xml:space="preserve">
    <value>T_A .NET DataGrid control</value>
  </data>
  <data name="NETDataGridView" xml:space="preserve">
    <value>T_.NET DataGridView</value>
  </data>
  <data name="ANETDataGridViewControl" xml:space="preserve">
    <value>T_A .NET DataGridView control</value>
  </data>
  <data name="Window" xml:space="preserve">
    <value>T_Window</value>
  </data>
  <data name="AStandardWindowsWindow" xml:space="preserve">
    <value>T_A standard Windows Window.</value>
  </data>
  <data name="MSFlexGrid" xml:space="preserve">
    <value>T_MSFlexGrid</value>
  </data>
  <data name="AMicrosoftFlexGridActiveXControl" xml:space="preserve">
    <value>T_A Microsoft FlexGrid ActiveX Control</value>
  </data>
  <data name="ApexGrid" xml:space="preserve">
    <value>T_ApexGrid</value>
  </data>
  <data name="AnApexGridActiveXControl" xml:space="preserve">
    <value>T_An Apex Grid ActiveX Control</value>
  </data>
  <data name="DTPicker" xml:space="preserve">
    <value>T_DTPicker</value>
  </data>
  <data name="AVB6DatePickerControl" xml:space="preserve">
    <value>T_A VB6 Date Picker control</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>T_Region</value>
  </data>
  <data name="ARectangularRegionWithinAWindowIdentifiedUsingEitherCoordinatesOrAnImageForRegio" xml:space="preserve">
    <value>T_A rectangular region within a Window identified using either coordinates or an image. T_For regions located using an image, actions and conditions will search the parent element in the application window for the region's image to identify its location - actions will raise an error if the region cannot be found.</value>
  </data>
  <data name="ListRegion" xml:space="preserve">
    <value>T_List Region</value>
  </data>
  <data name="AListOfContiguousRegionsWithinAWindow" xml:space="preserve">
    <value>T_A list of contiguous regions within a window</value>
  </data>
  <data name="GridRegion" xml:space="preserve">
    <value>T_Grid Region</value>
  </data>
  <data name="ATableOfRegionsWithinAWindow" xml:space="preserve">
    <value>T_A table of regions within a window</value>
  </data>
  <data name="Field" xml:space="preserve">
    <value>T_Field</value>
  </data>
  <data name="ATerminalEmulatorField" xml:space="preserve">
    <value>T_A terminal emulator field</value>
  </data>
  <data name="ActiveAccessibility" xml:space="preserve">
    <value>T_Active Accessibility</value>
  </data>
  <data name="AnActiveAccessibilityElement" xml:space="preserve">
    <value>T_An Active Accessibility element.</value>
  </data>
  <data name="ButtonAA" xml:space="preserve">
    <value>T_Button (AA)</value>
  </data>
  <data name="AnActiveAccessibilityButtonElement" xml:space="preserve">
    <value>T_An Active Accessibility Button element.</value>
  </data>
  <data name="CheckBoxAA" xml:space="preserve">
    <value>T_Check Box (AA)</value>
  </data>
  <data name="AnActiveAccessibilityCheckboxElement" xml:space="preserve">
    <value>T_An Active Accessibility Checkbox element.</value>
  </data>
  <data name="ComboBoxAA" xml:space="preserve">
    <value>T_Combo Box (AA)</value>
  </data>
  <data name="AnActiveAccessibilityComboBoxElement" xml:space="preserve">
    <value>T_An Active Accessibility Combo Box element.</value>
  </data>
  <data name="ListBoxAA" xml:space="preserve">
    <value>T_List Box (AA)</value>
  </data>
  <data name="AnActiveAccessibilityListBoxElement" xml:space="preserve">
    <value>T_An Active Accessibility List Box element.</value>
  </data>
  <data name="RadioButtonAA" xml:space="preserve">
    <value>T_Radio Button (AA)</value>
  </data>
  <data name="AnActiveAccessibilityRadioButtonElement" xml:space="preserve">
    <value>T_An Active Accessibility Radio button element.</value>
  </data>
  <data name="EditAA" xml:space="preserve">
    <value>T_Edit (AA)</value>
  </data>
  <data name="AnActiveAccessibilityEditBoxElement" xml:space="preserve">
    <value>T_An Active Accessibility Edit box element.</value>
  </data>
  <data name="UIAutomation" xml:space="preserve">
    <value>T_UI Automation</value>
  </data>
  <data name="AGenericUIAutomationElement" xml:space="preserve">
    <value>T_A generic UI Automation element.</value>
  </data>
  <data name="ButtonUIA" xml:space="preserve">
    <value>T_Button (UIA)</value>
  </data>
  <data name="AUIAutomationButtonElement" xml:space="preserve">
    <value>T_A UI Automation button element.</value>
  </data>
  <data name="CheckBoxUIA" xml:space="preserve">
    <value>T_Check Box (UIA)</value>
  </data>
  <data name="AUIAutomationCheckBoxElement" xml:space="preserve">
    <value>T_A UI Automation check box element.</value>
  </data>
  <data name="RadioButtonUIA" xml:space="preserve">
    <value>T_Radio Button (UIA)</value>
  </data>
  <data name="AUIAutomationRadioButtonElement" xml:space="preserve">
    <value>T_A UI Automation radio button element.</value>
  </data>
  <data name="ComboBoxUIA" xml:space="preserve">
    <value>T_Combo Box (UIA)</value>
  </data>
  <data name="AUIAutomationComboBoxElement" xml:space="preserve">
    <value>T_A UI Automation combo box element.</value>
  </data>
  <data name="EditBoxUIA" xml:space="preserve">
    <value>T_Edit Box (UIA)</value>
  </data>
  <data name="AUIAutomationEditBoxElement" xml:space="preserve">
    <value>T_A UI Automation edit box element.</value>
  </data>
  <data name="MenuUIA" xml:space="preserve">
    <value>T_Menu (UIA)</value>
  </data>
  <data name="AUIAutomationMenuElement" xml:space="preserve">
    <value>T_A UI Automation menu element</value>
  </data>
  <data name="MenuItemUIA" xml:space="preserve">
    <value>T_Menu Item (UIA)</value>
  </data>
  <data name="AUIAutomationMenuItemElement" xml:space="preserve">
    <value>T_A UI Automation menu item element</value>
  </data>
  <data name="ListUIA" xml:space="preserve">
    <value>T_List (UIA)</value>
  </data>
  <data name="AUIAutomationListElement" xml:space="preserve">
    <value>T_A UI Automation list element.</value>
  </data>
  <data name="ListItemUIA" xml:space="preserve">
    <value>T_List Item (UIA)</value>
  </data>
  <data name="AUIAutomationListItemElement" xml:space="preserve">
    <value>T_A UI Automation list item element.</value>
  </data>
  <data name="TableUIA" xml:space="preserve">
    <value>T_Table (UIA)</value>
  </data>
  <data name="AUIAutomationTableElement" xml:space="preserve">
    <value>T_A UI Automation table element.</value>
  </data>
  <data name="TabControlUIA" xml:space="preserve">
    <value>T_Tab Control (UIA)</value>
  </data>
  <data name="AUIAutomationTabControl" xml:space="preserve">
    <value>T_A UI Automation Tab Control.</value>
  </data>
  <data name="TabItemUIA" xml:space="preserve">
    <value>T_Tab Item (UIA)</value>
  </data>
  <data name="AUIAutomationTabItem" xml:space="preserve">
    <value>T_A UI Automation Tab Item.</value>
  </data>
  <data name="HyperlinkUIA" xml:space="preserve">
    <value>T_Hyperlink (UIA)</value>
  </data>
  <data name="AUIAutomationHyperlinkElement" xml:space="preserve">
    <value>T_A UI Automation hyperlink element.</value>
  </data>
  <data name="TreeViewUIA" xml:space="preserve">
    <value>T_Tree View (UIA)</value>
  </data>
  <data name="AUIAutomationTreeViewElement" xml:space="preserve">
    <value>T_A UI Automation tree view element.</value>
  </data>
  <data name="TreeViewItemUIA" xml:space="preserve">
    <value>T_Tree View Item (UIA)</value>
  </data>
  <data name="AUIAutomationTreeViewItemElement" xml:space="preserve">
    <value>T_A UI Automation tree view item element.</value>
  </data>
  <data name="WindowUIA" xml:space="preserve">
    <value>T_Window (UIA)</value>
  </data>
  <data name="AUIAutomationWindowElement" xml:space="preserve">
    <value>T_A UI Automation window element.</value>
  </data>
  <data name="WebElement" xml:space="preserve">
    <value>T_Web Element</value>
  </data>
  <data name="AGenericWebElement" xml:space="preserve">
    <value>T_A generic Web element.</value>
  </data>
  <data name="ButtonWeb" xml:space="preserve">
    <value>T_Button (Web)</value>
  </data>
  <data name="AWebPageButtonElement" xml:space="preserve">
    <value>T_A Web page button element.</value>
  </data>
  <data name="CheckBoxWeb" xml:space="preserve">
    <value>T_Check Box (Web)</value>
  </data>
  <data name="AWebPageCheckBoxElement" xml:space="preserve">
    <value>T_A Web page check box element.</value>
  </data>
  <data name="FormWeb" xml:space="preserve">
    <value>T_Form (Web)</value>
  </data>
  <data name="AWebFormElement" xml:space="preserve">
    <value>T_A Web form element.</value>
  </data>
  <data name="HyperlinkWeb" xml:space="preserve">
    <value>T_Hyperlink (Web)</value>
  </data>
  <data name="AWebHyperlinkElement" xml:space="preserve">
    <value>T_A Web hyperlink element.</value>
  </data>
  <data name="ListWeb" xml:space="preserve">
    <value>T_List (Web)</value>
  </data>
  <data name="AWebListElement" xml:space="preserve">
    <value>T_A Web list element.</value>
  </data>
  <data name="ListItemWeb" xml:space="preserve">
    <value>T_List Item (Web)</value>
  </data>
  <data name="AWebListItemElement" xml:space="preserve">
    <value>T_A Web list item element.</value>
  </data>
  <data name="MenuWeb" xml:space="preserve">
    <value>T_Menu (Web)</value>
  </data>
  <data name="AWebMenuElement" xml:space="preserve">
    <value>T_A Web menu element</value>
  </data>
  <data name="MenuItemWeb" xml:space="preserve">
    <value>T_Menu Item (Web)</value>
  </data>
  <data name="AWebMenuItemElement" xml:space="preserve">
    <value>T_A Web menu item element.</value>
  </data>
  <data name="ProgressBarWeb" xml:space="preserve">
    <value>T_Progress Bar (Web)</value>
  </data>
  <data name="AWebProgressBarElement" xml:space="preserve">
    <value>T_A Web progress bar element</value>
  </data>
  <data name="RadioButtonWeb" xml:space="preserve">
    <value>T_Radio Button (Web)</value>
  </data>
  <data name="AWebRadioButtonElement" xml:space="preserve">
    <value>T_A Web radio button element.</value>
  </data>
  <data name="SliderWeb" xml:space="preserve">
    <value>T_Slider (Web)</value>
  </data>
  <data name="AWebSliderElement" xml:space="preserve">
    <value>T_A Web slider element</value>
  </data>
  <data name="TableWeb" xml:space="preserve">
    <value>T_Table (Web)</value>
  </data>
  <data name="AWebTableElement" xml:space="preserve">
    <value>T_A Web table element.</value>
  </data>
  <data name="TableItemWeb" xml:space="preserve">
    <value>T_Table Item (Web)</value>
  </data>
  <data name="AWebTableItemElement" xml:space="preserve">
    <value>T_A Web table item element.</value>
  </data>
  <data name="TextWeb" xml:space="preserve">
    <value>T_Text (Web)</value>
  </data>
  <data name="AWebTextElement" xml:space="preserve">
    <value>T_A Web text element</value>
  </data>
  <data name="TextEditWeb" xml:space="preserve">
    <value>T_Text Edit (Web)</value>
  </data>
  <data name="AWebTextEditElement" xml:space="preserve">
    <value>T_A Web text edit element</value>
  </data>
  <data name="HTMLElement" xml:space="preserve">
    <value>T_HTML Element</value>
  </data>
  <data name="AnHTMLDOMElement" xml:space="preserve">
    <value>T_An HTML DOM element.</value>
  </data>
  <data name="HTMLButton" xml:space="preserve">
    <value>T_HTML Button</value>
  </data>
  <data name="AnHTMLButtonElement" xml:space="preserve">
    <value>T_An HTML Button element.</value>
  </data>
  <data name="HTMLCheckBox" xml:space="preserve">
    <value>T_HTML Check Box</value>
  </data>
  <data name="AnHTMLCheckboxElement" xml:space="preserve">
    <value>T_An HTML Checkbox element.</value>
  </data>
  <data name="HTMLRadioButton" xml:space="preserve">
    <value>T_HTML Radio Button</value>
  </data>
  <data name="AnHTMLRadioButtonElement" xml:space="preserve">
    <value>T_An HTML Radio button element.</value>
  </data>
  <data name="HTMLEdit" xml:space="preserve">
    <value>T_HTML Edit</value>
  </data>
  <data name="AnHTMLEditBoxElement" xml:space="preserve">
    <value>T_An HTML Edit box element.</value>
  </data>
  <data name="HTMLComboBox" xml:space="preserve">
    <value>T_HTML Combo Box</value>
  </data>
  <data name="AnHTMLComboBoxElement" xml:space="preserve">
    <value>T_An HTML Combo box element.</value>
  </data>
  <data name="HTMLTable" xml:space="preserve">
    <value>T_HTML Table</value>
  </data>
  <data name="AnHTMLTableElement" xml:space="preserve">
    <value>T_An HTML Table element.</value>
  </data>
  <data name="EditJava" xml:space="preserve">
    <value>T_Edit (Java)</value>
  </data>
  <data name="AJavaEditBox" xml:space="preserve">
    <value>T_A Java edit box.</value>
  </data>
  <data name="PasswordEditJava" xml:space="preserve">
    <value>T_Password Edit (Java)</value>
  </data>
  <data name="AJavaPasswordEditField" xml:space="preserve">
    <value>T_A Java password edit field.</value>
  </data>
  <data name="CheckBoxJava" xml:space="preserve">
    <value>T_Check Box (Java)</value>
  </data>
  <data name="AJavaCheckBox" xml:space="preserve">
    <value>T_A Java check box.</value>
  </data>
  <data name="RadioButtonJava" xml:space="preserve">
    <value>T_Radio Button (Java)</value>
  </data>
  <data name="AJavaRadioButton" xml:space="preserve">
    <value>T_A Java radio button.</value>
  </data>
  <data name="ToggleButtonJava" xml:space="preserve">
    <value>T_Toggle Button (Java)</value>
  </data>
  <data name="AToggleButtonIeAButtonThatRetainsItsPressedStateUntilItIsPressedAgain" xml:space="preserve">
    <value>T_A toggle button - ie a button that retains its pressed state until it is pressed again.</value>
  </data>
  <data name="MenuItemJava" xml:space="preserve">
    <value>T_Menu Item (Java)</value>
  </data>
  <data name="AJavaMenuItem" xml:space="preserve">
    <value>T_A Java menu item.</value>
  </data>
  <data name="MenuJava" xml:space="preserve">
    <value>T_Menu (Java)</value>
  </data>
  <data name="AJavaMenuOftenFoundAtTheTopOfAMainApplicationWindow" xml:space="preserve">
    <value>T_A Java menu, often found at the top of a main application window.</value>
  </data>
  <data name="ButtonJava" xml:space="preserve">
    <value>T_Button (Java)</value>
  </data>
  <data name="AJavaButton" xml:space="preserve">
    <value>T_A Java button.</value>
  </data>
  <data name="ScrollbarJava" xml:space="preserve">
    <value>T_Scrollbar (Java)</value>
  </data>
  <data name="AJavaScrollbar" xml:space="preserve">
    <value>T_A Java scrollbar.</value>
  </data>
  <data name="ComboBoxJava" xml:space="preserve">
    <value>T_ComboBox (Java)</value>
  </data>
  <data name="AJavaCombobox" xml:space="preserve">
    <value>T_A Java combobox.</value>
  </data>
  <data name="DialogWindowJava" xml:space="preserve">
    <value>T_Dialog Window (Java)</value>
  </data>
  <data name="ADialogWindowAsOftenUsedInPopupForms" xml:space="preserve">
    <value>T_A dialog window, as often used in pop-up forms.</value>
  </data>
  <data name="TabPageSelectorJava" xml:space="preserve">
    <value>T_Tab Page Selector (Java)</value>
  </data>
  <data name="ATabInATabControlWhichWhenSelectedChangesTheCurrentlyViewedPage" xml:space="preserve">
    <value>T_A tab in a tab control, which when selected changes the currently viewed page.</value>
  </data>
  <data name="ProgessBarJava" xml:space="preserve">
    <value>T_Progess Bar (Java)</value>
  </data>
  <data name="AJavaProgressBar" xml:space="preserve">
    <value>T_A Java progress bar.</value>
  </data>
  <data name="TrackBarJava" xml:space="preserve">
    <value>T_Track Bar (Java)</value>
  </data>
  <data name="ATrackBarControlWhichConsistsOfAPointerOnASlidingScaleToIndicateANumericValue" xml:space="preserve">
    <value>T_A track bar control, which consists of a pointer on a sliding scale to indicate a numeric value.</value>
  </data>
  <data name="UpDownBoxJava" xml:space="preserve">
    <value>T_Up-Down Box (Java)</value>
  </data>
  <data name="AnUpdownBoxConsistingOfATextboxWithSomeUpdownButtonsForAdjustingTheValueInTheBox" xml:space="preserve">
    <value>T_An up-down box, consisting of a textbox with some up/down buttons for adjusting the value in the box.</value>
  </data>
  <data name="TableJava" xml:space="preserve">
    <value>T_Table (Java)</value>
  </data>
  <data name="AJavaTableAnAnalogousControlToTheWindowsListviewWhenViewedInDetailsMode" xml:space="preserve">
    <value>T_A java table - an analogous control to the windows listview, when viewed in details mode.</value>
  </data>
  <data name="TreeViewJava" xml:space="preserve">
    <value>T_Tree View (Java)</value>
  </data>
  <data name="AJavaTreeView" xml:space="preserve">
    <value>T_A java tree view.</value>
  </data>
  <data name="TreeNodeJava" xml:space="preserve">
    <value>T_Tree Node (Java)</value>
  </data>
  <data name="AJavaTreeViewNode" xml:space="preserve">
    <value>T_A java tree view node.</value>
  </data>
  <data name="ListBoxJava" xml:space="preserve">
    <value>T_List Box (Java)</value>
  </data>
  <data name="AJavaListBox" xml:space="preserve">
    <value>T_A java list box.</value>
  </data>
  <data name="TabControlJava" xml:space="preserve">
    <value>T_Tab Control (Java)</value>
  </data>
  <data name="AJavaTabControl" xml:space="preserve">
    <value>T_A java tab control.</value>
  </data>
  <data name="ToolBarJava" xml:space="preserve">
    <value>T_Tool Bar (Java)</value>
  </data>
  <data name="AJavaToolBar" xml:space="preserve">
    <value>T_A java tool bar.</value>
  </data>
  <data name="PopupMenuJava" xml:space="preserve">
    <value>T_Popup Menu (Java)</value>
  </data>
  <data name="AJavaPopupMenu" xml:space="preserve">
    <value>T_A Java popup menu.</value>
  </data>
  <data name="Java" xml:space="preserve">
    <value>T_Java</value>
  </data>
  <data name="AJavaElement" xml:space="preserve">
    <value>T_A Java element.</value>
  </data>
  <data name="DDEElement" xml:space="preserve">
    <value>T_DDE Element</value>
  </data>
  <data name="ADynamicDataExchangeDDEField" xml:space="preserve">
    <value>T_A Dynamic Data Exchange (DDE) field.</value>
  </data>
  <data name="elements" xml:space="preserve">
    <value>T_elements</value>
  </data>
  <data name="InvalidActionID0" xml:space="preserve">
    <value>T_Invalid action ID {0}</value>
  </data>
  <data name="MissingIDForElement" xml:space="preserve">
    <value>T_Missing ID for element</value>
  </data>
  <data name="MissingNameForElement0" xml:space="preserve">
    <value>T_Missing name for element {0}</value>
  </data>
  <data name="MissingHelptextForElement0" xml:space="preserve">
    <value>T_Missing helptext for element {0}</value>
  </data>
  <data name="InvalidApplicationTypeForElement0" xml:space="preserve">
    <value>T_Invalid application type for element {0}</value>
  </data>
  <data name="MissingAlternate0For1" xml:space="preserve">
    <value>T_Missing alternate {0} for {1}</value>
  </data>
  <data name="WindowText" xml:space="preserve">
    <value>T_Window Text</value>
  </data>
  <data name="ClassName" xml:space="preserve">
    <value>T_Class Name</value>
  </data>
  <data name="ControlID" xml:space="preserve">
    <value>T_Control ID</value>
  </data>
  <data name="Visible" xml:space="preserve">
    <value>T_Visible</value>
  </data>
  <data name="ScreenVisible" xml:space="preserve">
    <value>T_Screen Visible</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>T_Enabled</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>T_Active</value>
  </data>
  <data name="Ordinal" xml:space="preserve">
    <value>T_Ordinal</value>
  </data>
  <data name="ChildCount" xml:space="preserve">
    <value>T_Child Count</value>
  </data>
  <data name="Style" xml:space="preserve">
    <value>T_Style</value>
  </data>
  <data name="AncestorsText" xml:space="preserve">
    <value>T_Ancestors Text</value>
  </data>
  <data name="TypeName" xml:space="preserve">
    <value>T_Type Name</value>
  </data>
  <data name="Screenshot" xml:space="preserve">
    <value>T_Screenshot</value>
  </data>
  <data name="StartX" xml:space="preserve">
    <value>T_Start X</value>
  </data>
  <data name="StartY" xml:space="preserve">
    <value>T_Start Y</value>
  </data>
  <data name="EndX" xml:space="preserve">
    <value>T_End X</value>
  </data>
  <data name="EndY" xml:space="preserve">
    <value>T_End Y</value>
  </data>
  <data name="RetainImage" xml:space="preserve">
    <value>T_Retain Image</value>
  </data>
  <data name="ElementSnapshot" xml:space="preserve">
    <value>T_Element Snapshot</value>
  </data>
  <data name="FontName" xml:space="preserve">
    <value>T_Font Name</value>
  </data>
  <data name="ImageValue" xml:space="preserve">
    <value>T_Image Value</value>
  </data>
  <data name="LocationMethod" xml:space="preserve">
    <value>T_Location Method</value>
  </data>
  <data name="RegionPosition" xml:space="preserve">
    <value>T_Region Position</value>
  </data>
  <data name="ImageSearchPadding" xml:space="preserve">
    <value>T_Image Search Padding</value>
  </data>
  <data name="RelativeParent" xml:space="preserve">
    <value>T_Relative Parent</value>
  </data>
  <data name="ColourTolerance" xml:space="preserve">
    <value>T_Colour Tolerance</value>
  </data>
  <data name="Greyscale" xml:space="preserve">
    <value>T_Grayscale</value>
  </data>
  <data name="ListDirection" xml:space="preserve">
    <value>T_List Direction</value>
  </data>
  <data name="Padding" xml:space="preserve">
    <value>T_Padding</value>
  </data>
  <data name="GridSchema" xml:space="preserve">
    <value>T_Grid Schema</value>
  </data>
  <data name="ComponentType" xml:space="preserve">
    <value>T_ComponentType</value>
  </data>
  <data name="SubType" xml:space="preserve">
    <value>T_SubType</value>
  </data>
  <data name="MatchIndex" xml:space="preserve">
    <value>T_Match Index</value>
  </data>
  <data name="MatchReverse" xml:space="preserve">
    <value>T_Match Reverse</value>
  </data>
  <data name="aX" xml:space="preserve">
    <value>T_aX</value>
  </data>
  <data name="aY" xml:space="preserve">
    <value>T_aY</value>
  </data>
  <data name="aWidth" xml:space="preserve">
    <value>T_aWidth</value>
  </data>
  <data name="aHeight" xml:space="preserve">
    <value>T_aHeight</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>T_Name</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>T_Description</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>T_Role</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>T_State</value>
  </data>
  <data name="KeyboardShortcut" xml:space="preserve">
    <value>T_Keyboard Shortcut</value>
  </data>
  <data name="DefaultAction" xml:space="preserve">
    <value>T_Default Action</value>
  </data>
  <data name="ElementCount" xml:space="preserve">
    <value>T_Element Count</value>
  </data>
  <data name="Unavailable" xml:space="preserve">
    <value>T_Unavailable</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>T_Selected</value>
  </data>
  <data name="aChecked" xml:space="preserve">
    <value>T_aChecked</value>
  </data>
  <data name="Mixed" xml:space="preserve">
    <value>T_Mixed</value>
  </data>
  <data name="ReadOnly" xml:space="preserve">
    <value>T_Read Only</value>
  </data>
  <data name="Hottracked" xml:space="preserve">
    <value>T_Hottracked</value>
  </data>
  <data name="xDefault" xml:space="preserve">
    <value>T_Default</value>
  </data>
  <data name="xSelect" xml:space="preserve">
    <value>T_Select</value>
  </data>
  <data name="xReadOnly" xml:space="preserve">
    <value>T_Read Only</value>
  </data>
  <data name="X" xml:space="preserve">
    <value>T_X</value>
  </data>
  <data name="Y" xml:space="preserve">
    <value>T_Y</value>
  </data>
  <data name="ID" xml:space="preserve">
    <value>T_ID</value>
  </data>
  <data name="Expanded" xml:space="preserve">
    <value>T_Expanded</value>
  </data>
  <data name="Collapsed" xml:space="preserve">
    <value>T_Collapsed</value>
  </data>
  <data name="Busy" xml:space="preserve">
    <value>T_Busy</value>
  </data>
  <data name="Floating" xml:space="preserve">
    <value>T_Floating</value>
  </data>
  <data name="Marqueed" xml:space="preserve">
    <value>T_Marqueed</value>
  </data>
  <data name="Animated" xml:space="preserve">
    <value>T_Animated</value>
  </data>
  <data name="Invisible" xml:space="preserve">
    <value>T_Invisible</value>
  </data>
  <data name="Offscreen" xml:space="preserve">
    <value>T_Offscreen</value>
  </data>
  <data name="Sizeable" xml:space="preserve">
    <value>T_Sizeable</value>
  </data>
  <data name="Moveable" xml:space="preserve">
    <value>T_Moveable</value>
  </data>
  <data name="SelfVoicing" xml:space="preserve">
    <value>T_Self Voicing</value>
  </data>
  <data name="Focusable" xml:space="preserve">
    <value>T_Focusable</value>
  </data>
  <data name="Selectable" xml:space="preserve">
    <value>T_Selectable</value>
  </data>
  <data name="Linked" xml:space="preserve">
    <value>T_Linked</value>
  </data>
  <data name="Traversed" xml:space="preserve">
    <value>T_Traversed</value>
  </data>
  <data name="Multiselectable" xml:space="preserve">
    <value>T_Multiselectable</value>
  </data>
  <data name="Extselectable" xml:space="preserve">
    <value>T_Extselectable</value>
  </data>
  <data name="AlertLow" xml:space="preserve">
    <value>T_Alert Low</value>
  </data>
  <data name="AlertMedium" xml:space="preserve">
    <value>T_Alert Medium</value>
  </data>
  <data name="AlertHigh" xml:space="preserve">
    <value>T_Alert High</value>
  </data>
  <data name="OffScreen_1" xml:space="preserve">
    <value>T_OffScreen</value>
  </data>
  <data name="UIAX" xml:space="preserve">
    <value>T_UIA X</value>
  </data>
  <data name="UIAY" xml:space="preserve">
    <value>T_UIA Y</value>
  </data>
  <data name="UIAWidth" xml:space="preserve">
    <value>T_UIA Width</value>
  </data>
  <data name="UIAHeight" xml:space="preserve">
    <value>T_UIA Height</value>
  </data>
  <data name="UIAClassName" xml:space="preserve">
    <value>T_UIA Class Name</value>
  </data>
  <data name="UIAAutomationId" xml:space="preserve">
    <value>T_UIA Automation Id</value>
  </data>
  <data name="UIALocalizedControlType" xml:space="preserve">
    <value>T_UIA Localized Control Type</value>
  </data>
  <data name="UIAControlType" xml:space="preserve">
    <value>T_UIA Control Type</value>
  </data>
  <data name="UIAName" xml:space="preserve">
    <value>T_UIA Name</value>
  </data>
  <data name="UIAPassword" xml:space="preserve">
    <value>T_UIA Password</value>
  </data>
  <data name="UIARequired" xml:space="preserve">
    <value>T_UIA Required</value>
  </data>
  <data name="UIAOrientation" xml:space="preserve">
    <value>T_UIA Orientation</value>
  </data>
  <data name="UIAItemStatus" xml:space="preserve">
    <value>T_UIA Item Status</value>
  </data>
  <data name="UIAItemType" xml:space="preserve">
    <value>T_UIA Item Type</value>
  </data>
  <data name="UIALabeledBy" xml:space="preserve">
    <value>T_UIA Labeled By</value>
  </data>
  <data name="UIAOffscreen" xml:space="preserve">
    <value>T_UIA Offscreen</value>
  </data>
  <data name="UIATopLevelWindowID" xml:space="preserve">
    <value>T_UIA Top Level Window ID</value>
  </data>
  <data name="UIAProcessId" xml:space="preserve">
    <value>T_UIA Process Id</value>
  </data>
  <data name="UIAEnabled" xml:space="preserve">
    <value>T_UIA Enabled</value>
  </data>
  <data name="UIAHelpText" xml:space="preserve">
    <value>T_UIA Help Text</value>
  </data>
  <data name="UIAHasKeyboardFocus" xml:space="preserve">
    <value>T_UIA Has Keyboard Focus</value>
  </data>
  <data name="UIAAcceleratorKey" xml:space="preserve">
    <value>T_UIA Accelerator Key</value>
  </data>
  <data name="UIAAccessKey" xml:space="preserve">
    <value>T_UIA Access Key</value>
  </data>
  <data name="WebX" xml:space="preserve">
    <value>T_Web X</value>
  </data>
  <data name="WebY" xml:space="preserve">
    <value>T_Web Y</value>
  </data>
  <data name="WebWidth" xml:space="preserve">
    <value>T_Web Width</value>
  </data>
  <data name="WebHeight" xml:space="preserve">
    <value>T_Web Height</value>
  </data>
  <data name="WebName" xml:space="preserve">
    <value>T_Web Name</value>
  </data>
  <data name="WebID" xml:space="preserve">
    <value>T_Web ID</value>
  </data>
  <data name="WebPath" xml:space="preserve">
    <value>T_Web Path/XPath</value>
  </data>
  <data name="WebElementType" xml:space="preserve">
    <value>T_Web Element Type</value>
  </data>
  <data name="WebValue" xml:space="preserve">
    <value>T_Web Value</value>
  </data>
  <data name="WebPageAddress" xml:space="preserve">
    <value>T_Web Page Address</value>
  </data>
  <data name="WebClass" xml:space="preserve">
    <value>T_Web Class</value>
  </data>
  <data name="WebClientX" xml:space="preserve">
    <value>T_Web Client X</value>
  </data>
  <data name="WebClientY" xml:space="preserve">
    <value>T_Web Client Y</value>
  </data>
  <data name="WebClientWidth" xml:space="preserve">
    <value>T_Web Client Width</value>
  </data>
  <data name="WebClientHeight" xml:space="preserve">
    <value>T_Web Client Height</value>
  </data>
  <data name="WebOffsetX" xml:space="preserve">
    <value>T_Web Offset X</value>
  </data>
  <data name="WebOffsetY" xml:space="preserve">
    <value>T_Web Offset Y</value>
  </data>
  <data name="WebOffsetWidth" xml:space="preserve">
    <value>T_Web Offset Width</value>
  </data>
  <data name="WebOffsetHeight" xml:space="preserve">
    <value>T_Web Offset Height</value>
  </data>
  <data name="WebScrollX" xml:space="preserve">
    <value>T_Web Scroll X</value>
  </data>
  <data name="WebScrollY" xml:space="preserve">
    <value>T_Web Scroll Y</value>
  </data>
  <data name="WebScrollWidth" xml:space="preserve">
    <value>T_Web Scroll Width</value>
  </data>
  <data name="WebScrollHeight" xml:space="preserve">
    <value>T_Web Scroll Height</value>
  </data>
  <data name="WebChildCount" xml:space="preserve">
    <value>T_Web Child Count</value>
  </data>
  <data name="WebElementIsEditable" xml:space="preserve">
    <value>T_Web Element Is Editable</value>
  </data>
  <data name="WebStyle" xml:space="preserve">
    <value>T_Web Style</value>
  </data>
  <data name="WebTabIndex" xml:space="preserve">
    <value>T_Web Tab Index</value>
  </data>
  <data name="WebInputType" xml:space="preserve">
    <value>T_Web Input Type</value>
  </data>
  <data name="WebAccessKey" xml:space="preserve">
    <value>T_Web Access Key</value>
  </data>
  <data name="WebText" xml:space="preserve">
    <value>T_Web Text</value>
  </data>
  <data name="WebSource" xml:space="preserve">
    <value>T_Web Source</value>
  </data>
  <data name="WebTargetAddress" xml:space="preserve">
    <value>T_Web Target Address</value>
  </data>
  <data name="WebAltText" xml:space="preserve">
    <value>T_Web Alt Text</value>
  </data>
  <data name="WebInputPattern" xml:space="preserve">
    <value>T_Web Input Pattern</value>
  </data>
  <data name="WebLinkRelationship" xml:space="preserve">
    <value>T_Web Link Relationship</value>
  </data>
  <data name="WebLinkTarget" xml:space="preserve">
    <value>T_Web Link Target</value>
  </data>
  <data name="WebPlaceholderText" xml:space="preserve">
    <value>T_Web Placeholder Text</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>T_Path</value>
  </data>
  <data name="TagName" xml:space="preserve">
    <value>T_Tag Name</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>T_Title</value>
  </data>
  <data name="Link" xml:space="preserve">
    <value>T_Link</value>
  </data>
  <data name="InputType" xml:space="preserve">
    <value>T_Input Type</value>
  </data>
  <data name="InputIdentifier" xml:space="preserve">
    <value>T_Input Identifier</value>
  </data>
  <data name="ParentURL" xml:space="preserve">
    <value>T_Parent URL</value>
  </data>
  <data name="VirtualName" xml:space="preserve">
    <value>T_VirtualName</value>
  </data>
  <data name="AllowedActions" xml:space="preserve">
    <value>T_Allowed Actions</value>
  </data>
  <data name="Armed" xml:space="preserve">
    <value>T_Armed</value>
  </data>
  <data name="AncestorCount" xml:space="preserve">
    <value>T_Ancestor Count</value>
  </data>
  <data name="aAncestorCount" xml:space="preserve">
    <value>T_aAncestor Count</value>
  </data>
  <data name="Editable" xml:space="preserve">
    <value>T_Editable</value>
  </data>
  <data name="Expandable" xml:space="preserve">
    <value>T_Expandable</value>
  </data>
  <data name="Horizontal" xml:space="preserve">
    <value>T_Horizontal</value>
  </data>
  <data name="Iconified" xml:space="preserve">
    <value>T_Iconified</value>
  </data>
  <data name="JavaText" xml:space="preserve">
    <value>T_Java Text</value>
  </data>
  <data name="KeyBindings" xml:space="preserve">
    <value>T_Key Bindings</value>
  </data>
  <data name="Modal" xml:space="preserve">
    <value>T_Modal</value>
  </data>
  <data name="MultipleLine" xml:space="preserve">
    <value>T_Multiple Line</value>
  </data>
  <data name="MultiSelectable_1" xml:space="preserve">
    <value>T_MultiSelectable</value>
  </data>
  <data name="Opaque" xml:space="preserve">
    <value>T_Opaque</value>
  </data>
  <data name="Resizeable" xml:space="preserve">
    <value>T_Resizeable</value>
  </data>
  <data name="Showing" xml:space="preserve">
    <value>T_Showing</value>
  </data>
  <data name="SingleLine" xml:space="preserve">
    <value>T_Single Line</value>
  </data>
  <data name="Transient" xml:space="preserve">
    <value>T_Transient</value>
  </data>
  <data name="Vertical" xml:space="preserve">
    <value>T_Vertical</value>
  </data>
  <data name="FieldType" xml:space="preserve">
    <value>T_Field Type</value>
  </data>
  <data name="FieldText" xml:space="preserve">
    <value>T_Field Text</value>
  </data>
  <data name="DDEServerName" xml:space="preserve">
    <value>T_DDE Server Name</value>
  </data>
  <data name="DDETopicName" xml:space="preserve">
    <value>T_DDE Topic Name</value>
  </data>
  <data name="DDEItemName" xml:space="preserve">
    <value>T_DDE Item Name</value>
  </data>
  <data name="InformationalNote" xml:space="preserve">
    <value>T_Informational Note</value>
  </data>
  <data name="ScreenBounds" xml:space="preserve">
    <value>T_Screen Bounds</value>
  </data>
  <data name="ApplicationManagerOperations" xml:space="preserve">
    <value>T_Application Manager Operations</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>T_Actions</value>
  </data>
  <data name="Parameters" xml:space="preserve">
    <value>T_Parameters</value>
  </data>
  <data name="DataType" xml:space="preserve">
    <value>T_Data Type</value>
  </data>
  <data name="NoDescriptionFoundPleaseFixThisProblem" xml:space="preserve">
    <value>T_No Description Found. T_Please fix this problem</value>
  </data>
  <data name="ThisActionTakesNoParameters" xml:space="preserve">
    <value>T_This action takes no parameters</value>
  </data>
  <data name="TheInternalIDForThisActionIs0" xml:space="preserve">
    <value>T_The internal ID for this action is '{0}'</value>
  </data>
  <data name="WorksWithTheFollowingElementTypes" xml:space="preserve">
    <value>T_Works with the following element types:</value>
  </data>
  <data name="xElements" xml:space="preserve">
    <value> T_elements</value>
  </data>
  <data name="ElementsReadStage" xml:space="preserve">
    <value> T_elements (read stage)</value>
  </data>
  <data name="GlobalActionTheTargetApplicationMustHaveFocus" xml:space="preserve">
    <value>T_'''Global action''' - the target application must have focus.</value>
  </data>
  <data name="Conditions" xml:space="preserve">
    <value>T_Conditions</value>
  </data>
  <data name="ElementTypes" xml:space="preserve">
    <value>T_Element Types</value>
  </data>
  <data name="SupportsTheFollowingActions" xml:space="preserve">
    <value>T_Supports the following actions:</value>
  </data>
  <data name="SupportsTheFollowingReadActions" xml:space="preserve">
    <value>T_Supports the following read actions:</value>
  </data>
  <data name="SupportsTheFollowingConditions" xml:space="preserve">
    <value>T_Supports the following conditions:</value>
  </data>
  <data name="TheFollowingAlternateTypesCanBeSelected" xml:space="preserve">
    <value>T_The following alternate types can be selected:</value>
  </data>
  <data name="InternalID0" xml:space="preserve">
    <value>T_Internal ID: T_{0}</value>
  </data>
  <data name="ApplicationTypes" xml:space="preserve">
    <value>T_Application Types</value>
  </data>
  <data name="Subtypes" xml:space="preserve">
    <value>T_Subtypes</value>
  </data>
  <data name="ApplicationAlreadyLaunched" xml:space="preserve">
    <value>T_Application already launched</value>
  </data>
  <data name="UnableToParseExternalApplicationManagerTimeoutParameter" xml:space="preserve">
    <value>T_Unable to parse external application manager timeout parameter</value>
  </data>
  <data name="CantLaunchApplicationType0" xml:space="preserve">
    <value>T_Can't launch application type {0}</value>
  </data>
  <data name="FailedToLaunch0" xml:space="preserve">
    <value>T_Failed to launch - {0}</value>
  </data>
  <data name="UnhandledElementType0Detected" xml:space="preserve">
    <value>T_Unhandled element type '{0}' detected</value>
  </data>
  <data name="AlreadyConnectedToAnApplication" xml:space="preserve">
    <value>T_Already connected to an application</value>
  </data>
  <data name="FailedToParseCollectionOfWindowTitlesXMLEngineReportedError0" xml:space="preserve">
    <value>T_Failed to parse collection of window titles. T_XML engine reported error - {0}</value>
  </data>
  <data name="AtLeastOneOfWindowTitleProcessNameOrProcessIdMustBeSpecified" xml:space="preserve">
    <value>T_At least one of window title, process name or process id must be specified</value>
  </data>
  <data name="FailedToAttach0" xml:space="preserve">
    <value>T_Failed to attach - {0}</value>
  </data>
  <data name="NoExecutableSpecified" xml:space="preserve">
    <value>T_No executable specified</value>
  </data>
  <data name="MainframeAlreadyLaunched" xml:space="preserve">
    <value>T_Mainframe already launched</value>
  </data>
  <data name="AlreadyAttachedToAMainframe" xml:space="preserve">
    <value>T_Already attached to a mainframe</value>
  </data>
  <data name="NoSessionIdOrSessionFileSpecified" xml:space="preserve">
    <value>T_No session id or session file specified</value>
  </data>
  <data name="InvalidHookValue0" xml:space="preserve">
    <value>T_Invalid hook value - {0}</value>
  </data>
  <data name="UnrecognisedRole0" xml:space="preserve">
    <value>T_Unrecognised role: T_{0}</value>
  </data>
  <data name="TheSAPElementTypeCannotBeIndentifiedSpecifcallyAndNoWildcardTypeHasBeenDefined" xml:space="preserve">
    <value>T_The SAP element type cannot be indentified specifcally, and no wildcard type has been defined.</value>
  </data>
  <data name="InvalidSpyResponseAt0" xml:space="preserve">
    <value>T_Invalid spy response at '{0}'</value>
  </data>
  <data name="UnrecognisedSpyResultOf0" xml:space="preserve">
    <value>T_Unrecognised spy result of {0}</value>
  </data>
  <data name="ProcessingQuery" xml:space="preserve">
    <value>T_Processing query</value>
  </data>
  <data name="ParsingResponse" xml:space="preserve">
    <value>T_Parsing response</value>
  </data>
  <data name="FailedToGetSnapshot01" xml:space="preserve">
    <value>T_Failed to get snapshot - {0} - {1}</value>
  </data>
  <data name="BadSnapshotResultFormat" xml:space="preserve">
    <value>T_Bad snapshot result format</value>
  </data>
  <data name="ElementTreeComplete" xml:space="preserve">
    <value>T_Element Tree Complete</value>
  </data>
  <data name="OnlyWin32ElementsSupportSnapshotsNot0" xml:space="preserve">
    <value>T_Only Win32 elements support snapshots. T_Not: T_{0}</value>
  </data>
  <data name="UnknownResponseType0" xml:space="preserve">
    <value>T_Unknown response type {0}</value>
  </data>
  <data name="TheReadCurrentValueActionIsObsoletePleaseUseTheSuggestedAlternative" xml:space="preserve">
    <value>T_The ReadCurrentValue action is obsolete - please use the suggested alternative</value>
  </data>
  <data name="TheJABSnapshotActionIsReplacedByTheMoreDetailedWindowsSnapshotActionWhichWillInc" xml:space="preserve">
    <value>T_The JABSnapshot action is replaced by the more detailed WindowsSnapshot action, which will include all the JAB information, but in a better context</value>
  </data>
  <data name="GetWindowTextForRegionsHasBeenSlightlyAlteredToGiveBetterInformationToTheEndUser" xml:space="preserve">
    <value>T_GetWindowText for regions has been slightly altered to give better information to the end user</value>
  </data>
  <data name="TheRecogniseTextActionsHaveBeenCoalescedIntoASingleActionWithParametersDetailing" xml:space="preserve">
    <value>T_The RecogniseText actions have been coalesced into a single action with parameters detailing the different modes of operation</value>
  </data>
  <data name="AllCheckExistsActionsAreNowCombined" xml:space="preserve">
    <value>T_All CheckExists actions are now combined</value>
  </data>
  <data name="MissingActionType0" xml:space="preserve">
    <value>T_Missing action type {0}</value>
  </data>
  <data name="UnrecognisedResponse" xml:space="preserve">
    <value>T_Unrecognised response</value>
  </data>
  <data name="PrequerySyntaxErrorMissing" xml:space="preserve">
    <value>T_Prequery syntax error - missing =</value>
  </data>
  <data name="PrequerySyntaxErrorMissing_1" xml:space="preserve">
    <value>T_Prequery syntax error - missing {</value>
  </data>
  <data name="PrequerySyntaxErrorMissing_2" xml:space="preserve">
    <value>T_Prequery syntax error - missing }</value>
  </data>
  <data name="CanNotWriteToElementsOfType0BecauseTheyAreReadonly" xml:space="preserve">
    <value>T_Can not write to elements of type '{0}' because they are readonly</value>
  </data>
  <data name="ThatActionIsOnlyValidForAnActiveXTreeView" xml:space="preserve">
    <value>T_That action is only valid for an ActiveX TreeView</value>
  </data>
  <data name="GetRowOffsetDoesNotWorkWithElementsOfType0" xml:space="preserve">
    <value>T_GetRowOffset does not work with elements of type '{0}</value>
  </data>
  <data name="SetTopRowDoesNotWorkWithElementsOfType0" xml:space="preserve">
    <value>T_SetTopRow does not work with elements of type '{0}</value>
  </data>
  <data name="GoToCellDoesNotWorkWithElementsOfType0" xml:space="preserve">
    <value>T_GoToCell does not work with elements of type '{0}</value>
  </data>
  <data name="SelectRangeDoesNotWorkWithElementsOfType0" xml:space="preserve">
    <value>T_SelectRange does not work with elements of type '{0}</value>
  </data>
  <data name="InvalidAction0" xml:space="preserve">
    <value>T_Invalid action {0}</value>
  </data>
  <data name="Equal" xml:space="preserve">
    <value>T_=  (Equal)</value>
  </data>
  <data name="NotEqual" xml:space="preserve">
    <value>T_<> (Not Equal)</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>T_<  (Less Than)</value>
  </data>
  <data name="LessThanOrEqual" xml:space="preserve">
    <value>T_<= (Less Than or Equal)</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>T_>  (Greater Than)</value>
  </data>
  <data name="GreaterThanOrEqual" xml:space="preserve">
    <value>T_>= (Greater Than or Equal)</value>
  </data>
  <data name="Wildcard" xml:space="preserve">
    <value>T_*  (Wildcard)</value>
  </data>
  <data name="RegEx" xml:space="preserve">
    <value>T_.* (Reg Ex)</value>
  </data>
  <data name="UnrecognisedComparisonType0" xml:space="preserve">
    <value>T_Unrecognised comparison type: T_{0}</value>
  </data>
  <data name="xDo" xml:space="preserve">
    <value>T_Do</value>
  </data>
  <data name="x0Java" xml:space="preserve">
    <value>T_({0}) Java</value>
  </data>
  <data name="x0AA" xml:space="preserve">
    <value>T_({0}) AA</value>
  </data>
  <data name="AAElement" xml:space="preserve">
    <value>T_AAElement</value>
  </data>
  <data name="x0HTML" xml:space="preserve">
    <value>T_({0}) HTML</value>
  </data>
  <data name="x0WebElement" xml:space="preserve">
    <value>T_({0}) Web Element</value>
  </data>
  <data name="HTML" xml:space="preserve">
    <value>T_HTML</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>T_Options</value>
  </data>
  <data name="ExternalProcessTimeout" xml:space="preserve">
    <value>T_ExternalProcessTimeout</value>
  </data>
  <data name="ProcessMode" xml:space="preserve">
    <value>T_ProcessMode</value>
  </data>
  <data name="CommandLineParams" xml:space="preserve">
    <value>T_CommandLineParams</value>
  </data>
  <data name="WindowTitle_1" xml:space="preserve">
    <value>T_WindowTitle</value>
  </data>
  <data name="SessionID" xml:space="preserve">
    <value>T_Session ID</value>
  </data>
  <data name="Port" xml:space="preserve">
    <value>T_Port</value>
  </data>
  <data name="AttachmateVariant" xml:space="preserve">
    <value>T_Attachmate Variant</value>
  </data>
  <data name="WaitTimeout" xml:space="preserve">
    <value>T_WaitTimeout</value>
  </data>
  <data name="WaitSleepTime" xml:space="preserve">
    <value>T_WaitSleepTime</value>
  </data>
  <data name="CodePage" xml:space="preserve">
    <value>T_CodePage</value>
  </data>
  <data name="ExcludeHTC" xml:space="preserve">
    <value>T_ExcludeHTC</value>
  </data>
  <data name="UseJavaInBrowser" xml:space="preserve">
    <value>T_UseJavaInBrowser</value>
  </data>
  <data name="ActiveTabOnly" xml:space="preserve">
    <value>T_ActiveTabOnly</value>
  </data>
  <data name="ProcessName_1" xml:space="preserve">
    <value>T_ProcessName</value>
  </data>
  <data name="WorkingDirectory" xml:space="preserve">
    <value>T_WorkingDirectory</value>
  </data>
  <data name="NonInvasive" xml:space="preserve">
    <value>T_NonInvasive</value>
  </data>
  <data name="xError" xml:space="preserve">
    <value>T_Error</value>
  </data>
  <data name="Info" xml:space="preserve">
    <value>T_Info</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>T_Warning</value>
  </data>
  <data name="GetsPathOfTheWebElement" xml:space="preserve">
    <value>T_Gets Path of the Web element.</value>
  </data>
  <data name="DeprecatedActionLabelTemplate" xml:space="preserve">
    <value>T_{0} (deprecated)</value>
    <comment>Placeholder 0 contains the action name.</comment>
  </data>
  <data name="WebCssSelector" xml:space="preserve">
    <value>T_Web CSS Selector</value>
  </data>
  <data name="TrackingId" xml:space="preserve">
    <value>T_Tracking ID</value>
  </data>
  <data name="TrackingIdDescription" xml:space="preserve">
    <value>T_The tracking ID restricts spying to a specific browser and is output by the Launch action in a Navigate stage. T_This optional output can be assigned to a data item so when the browser is launched a unique ID is stored in the data item and then passed as an input into any other stages that interact with the browser to ensure the search is restricted to a specific web page.</value>
  </data>
  <data name="WebWrite" xml:space="preserve">
    <value>T_Write</value>
  </data>
  <data name="WriteTheValueToTheGivenWebElement" xml:space="preserve">
    <value>T_Write the value to the given web element</value>
  </data>
  <data name="ClosesTheTabs" xml:space="preserve">
    <value>T_Writes on the given element</value>
  </data>
  <data name="WritesToTheGivenElement" xml:space="preserve">
    <value>T_Writes to the given element</value>
  </data>
  <data name="CitrixApplication" xml:space="preserve">
    <value>T_Citrix Application</value>
  </data>
</root>
