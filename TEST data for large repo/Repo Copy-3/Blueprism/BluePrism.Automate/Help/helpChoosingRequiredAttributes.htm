<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link type="text/css" href="AutomateHelp.css" rel="stylesheet" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
	<title>Application Modeller</title>
	<script type="text/javascript" src="script/imagezoom.js"></script>
</head>

<body class="slick">
	<div class="header">
		<h1 class="pagetitle">Application Modeller</h1>
		<h2>Choosing Attributes</h2>
	</div>

	<h3 id="intro">Introduction</h3>

	<p>Below is a discussion about the pros and cons of choosing each
	attribute. For an exhaustive description of each attribute, see the
	<a href="attributes.htm">list of windows spy attributes</a>, the
	<a href="attributes-aa.htm">active accessibility attributes list</a>
	and the <a href="attributes-uia.html">UI Automation attributes list</a>.
	</p>

	<h3 id="spy-attributes">Windows Spy Attributes</h3>
	<dl class="listplease bulleted">
		
		<dt><a href="attributes.htm#windowtext">WindowText</a></dt>
		<dd>
			In general, the window text is very useful, because it is
			often unique (eg there is only one button with the text "OK"
			per top-level window). However, it can be counter-productive
			to use this attribute in the following circumstances:
		</dd>
		<dd>
			<ul>
				<li>When you intend to write to the element. If you are
				changing the text of the element, then you cannot use
				the element's default text to identify it (unless you
				make it <a href="frmIntegrationAssistant.htm#dynamic">
				dynamic</a>).</li>

				<li>The text changes unpredictably. However if the text
				does change predictably, then you could make it
				<a href="frmIntegrationAssistant.htm#dynamic">dynamic</a>.
				</li>
			</ul>
		</dd>
		
		<dt><a href="attributes.htm#classname">ClassName</a></dt>
		<dd>
			This is very useful in general, since it rarely changes.
			Be aware that some exotic applications may exchange an
			element for another one which looks the same but which has a
			different implementation, thus in effect changing the class
			name.
		</dd>

		<dt><a href="attributes.htm#ordinal">Ordinal</a></dt>
		<dd>
			Usually very useful, but be aware of the following caveats:
		</dd>
		<dd>
			<ul>
				<li>The ordinal may differ each time the application is
				run if the application has a multi-threaded user
				interface, or a multiple document interface (MDI).</li>

				<li>
					<p>If there are other elements which are usually
					present, but which are not present in special
					circumstances (eg on an accounts system, the "Update"
					button is missing for an inactive account), then the
					absence of these elements can affect the ordinal in
					those special circumstances.</p>

					<p>This would lead to your business object working
					most of the time, but failing each time such a 
					'special' screen appears.</p>
				</li>
			</ul>
		</li>

		<dt><a href="attributes.htm#x">X, Y, Width, Height</a></dt>
		<dd>
			It is best to avoid using any one of X, Y, Width, Height
			where possible since these attributes may differ according
			to screen resolution, the size of the parent form, whether
			or not the parent form is maximised etc.
		</dd>

		<dt><a href="attributes.htm#visible">Visible</a></dt>
		<dd>
			Usually useful for elements involved in a wait query. For
			example some applications will hide an "Update" button until
			they have finished loading. By waiting for an element with
			Visibility of value True you can detect the 'ready' state
			of your target application.
		</dd>
		
		<dt id="enabled"><a href="attributes.htm#enabled">Enabled</a></dt>
		<dd>
			As with visible, useful in wait queries. Some applications
			will disable a button until they are ready to process the
			button click event.
		</dd>
		<dd>
			See also the active accessibility <a 
			href="#unavailable">Unavailable</a> attribute.</p>
		</dd>

		<dt><a href="attributes.htm#active">Active</a></dt>
		<dd>
			Useful when detecting error states for applications which
			show a modal error dialog. Such a dialog would have an
			Active attribute value of True. Also useful in waiting for
			your main application window to finish loading.
		</dd>

		<dt><a href="attributes.htm#childcount">ChildCount</a></dt>
		<dd>
			Often a reliable identifier of an attribute, except in
			circumstances such as those described in the Visible
			attribute, in which elements appear and disappear according
			to the status of the target application.
		</dd>
	</dl>
	
	
	<h3 id="aa-attributes">Active Accessibility Attributes</h3>
	<dl class="listplease bulleted">
		<dt id="unavailable">
			<a href="attributes-aa.htm#unavailable">Unavailable</a>
		</dt>
		<dd>
			Often confused with the windows attribute <a href="#enabled">
			Enabled</a>. When an element has been spied with the active
			accessibility spy tool, this attribute is often more
			reliable than the windows <a href="#enabled">Enabled</a>
			attribute. This is because active accessibility spy tool
			often offers greater granularity than the windows spy. For
			example, the active accessibility spy tool may allow
			individual toolbar buttons to be identified, whereas the
			windows spy tool might only allow the toolbar itself to be
			identified. In this case, the Enabled attribute refers
			to the parent toolbar, whereas the Unavailable attribute
			refers to the individual button that was spied.
		</dd>
	</dl>
</body>
</html>
