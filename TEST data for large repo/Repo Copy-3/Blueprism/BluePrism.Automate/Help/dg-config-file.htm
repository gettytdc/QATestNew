<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Advanced setup">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png" />
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png" />
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png" />
        <link rel="icon" sizes="2263x2263" href="../../Skins/Favicons/BP_Prism_RGB.png" />
        <meta charset="utf-8" />
        <meta name="description" content="" />
        <meta name="author" content="" /><title>Configuration file structure</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet" />
        <link href="../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/select-language.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.feedback-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="./AutomateHelp.css" rel="stylesheet" />
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
                                            <div>
                                                <h1>Configuration file structure</h1>
                                                <p>Configuration files are created from the configured Data Gateways settings and outputs. They are composed of three main sections, Input, Output, and Filter, as outlined below.</p>
                                                <h2>Input</h2>
                                                <p>This section is automatically generated by Blue Prism based on the Blue Prism database settings. It determines how events are pulled into the Data Gateways engine for processing. In the example below, they are retrieved from the BPADataPipelineInput table in the Blue Prism database. </p>
                                                <p class="code_sample">input {</p>
                                                <p class="code_sample">jdbc {</p>
                                                <p class="code_sample">jdbc_driver_library =&gt; "..\sqljdbc_4.2\enu\jre8\sqljdbc42.jar"</p>
                                                <p class="code_sample">jdbc_connection_string =&gt; "jdbc:sqlserver://SQL_SERVER_INSTANCE:1433;databaseName=BP_DATABASE;"</p>
                                                <p class="code_sample">jdbc_driver_class =&gt; "com.microsoft.sqlserver.jdbc.SQLServerDriver"</p>
                                                <p class="code_sample">jdbc_user =&gt; "&lt;%Data Gateways BP Database SQL User.username%&gt;"</p>
                                                <p class="code_sample">jdbc_password =&gt; "&lt;%Data Gateways BP Database SQL User.password%&gt;"</p>
                                                <p class="code_sample">statement =&gt; "delete top(3000)from BPADataPipelineInput with (rowlock, readpast) output deleted.eventdata"</p>
                                                <p class="code_sample">schedule =&gt; "*/3* * * * *"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>If required, the following areas of the input can be edited to suit the required preferences.</p>
                                                <p>&#160;</p>
                                                <p><span class="code_sample">`schedule =&gt; "*/3* * * * *"`</span>
                                                </p>
                                                <p>This determines how often the SQL query to request data from the BPADataPipelineInput table is executed. The default value of every three seconds can be updated by replacing <span class="code_sample">3</span> with the required value.</p>
                                                <p>&#160;</p>
                                                <p class="code_sample">`statement =&gt; "delete top(3000)from BPADataPipelineInput with (rowlock, readpast) output deleted.eventdata"`</p>
                                                <p>This is the SQL statement that is executed against the Blue Prism database to pull events out of the BPADataPipelineInput table. The value controls the maximum number of rows pulled from the BPADatapipelineInput table every interval. The default value of 3000 can be changed if required.</p>
                                                <h2 class="pagebreak">Filter</h2>
                                                <p>Filters can be used to perform intermediary processing on an event. These could be actions such as adding, removing, or modifying certain fields of an event before they are sent to the outputs, for example, removing the AttributeXML field of a session log.</p>
                                                <p>A list of all filter plug-ins available are listed here: <a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html">https://www.elastic.co/guide/en/logstash/current/filter-plugins.html</a></p>
                                                <p>By default, the configuration generated by Blue Prism will contains a single filter:</p>
                                                <p class="code_sample">filter{</p>
                                                <p class="code_sample">json {</p>
                                                <p class="code_sample">source =&gt; "eventdata"</p>
                                                <p class="code_sample">target =&gt; "event"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>By default, configurations contain a single filter for JSON that is used to parse and expand the JSON&#160;string that contains the configured data types (session logs, dashboards etc.) so the contents are accessible in the configuration file.</p>
                                                <p>This section can be edited to add and remove filters but the default JSON filter should not be removed or amended.</p>
                                                <h2>Output</h2>
                                                <p>Outputs determine where events are sent. If outputs have been configured using the Data Gateways wizard, they will be included here. Every event processed will be sent to every output listed in the configuration.</p>
                                                <p class="code_sample">output {</p>
                                                <p class="code_sample">file {</p>
                                                <p class="code_sample">path =&gt; "C:\data.txt"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">&#160;</p>
                                                <p class="code_sample">csv {</p>
                                                <p class="code_sample">path =&gt; "C:\data.csv"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>In the example above, a .txt file and a .csv output are specified. Every event sent to the Data Gateway system will be written into a text file at C:\data.txt and also a csv file at C:\data.csv</p>
                                                <p>For a list of outputs available see here: <a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html">https://www.elastic.co/guide/en/logstash/current/output-plugins.html</a></p>
                                                <p>&#160;</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>