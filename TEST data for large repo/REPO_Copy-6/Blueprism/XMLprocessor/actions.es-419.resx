<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="name_SelectDate" xml:space="preserve">
    <value>Seleccionar fecha</value>
  </data>
  <data name="helptext_Setthedaterangeforacontrol" xml:space="preserve">
    <value>Establecer el intervalo de fechas para un control</value>
  </data>
  <data name="name_StartDate" xml:space="preserve">
    <value>Fecha inicial</value>
  </data>
  <data name="description_Thestartdateoftherange" xml:space="preserve">
    <value>La fecha inicial del rango</value>
  </data>
  <data name="name_EndDate" xml:space="preserve">
    <value>Fecha final</value>
  </data>
  <data name="description_Theenddateoftherange" xml:space="preserve">
    <value>La fecha final del rango</value>
  </data>
  <data name="name_GetDate" xml:space="preserve">
    <value>Obtener fecha</value>
  </data>
  <data name="helptext_Getthedaterangeforacontrol" xml:space="preserve">
    <value>Obtener el intervalo de fechas para un control</value>
  </data>
  <data name="name_GetHorizontalMinimum" xml:space="preserve">
    <value>Obtener mínimo horizontal</value>
  </data>
  <data name="helptext_Gettheminimumhorizontalvalue" xml:space="preserve">
    <value>Obtener el valor horizontal mínimo</value>
  </data>
  <data name="name_GetHorizontalMaximum" xml:space="preserve">
    <value>Obtener máximo horizontal</value>
  </data>
  <data name="helptext_Getthemaximumhorizontalvalue" xml:space="preserve">
    <value>Obtener el valor horizontal máximo</value>
  </data>
  <data name="name_GetHorizontalValue" xml:space="preserve">
    <value>Obtener valor horizontal</value>
  </data>
  <data name="helptext_Getthecurrenthorizontalvalue" xml:space="preserve">
    <value>Obtener el valor horizontal actual</value>
  </data>
  <data name="name_SetHorizontalValue" xml:space="preserve">
    <value>Establecer valor horizontal</value>
  </data>
  <data name="helptext_Setthehorizontalvalue" xml:space="preserve">
    <value>Establecer el valor horizontal</value>
  </data>
  <data name="name_Value" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="description_Thenewvalue" xml:space="preserve">
    <value>El nuevo valor</value>
  </data>
  <data name="name_GetVerticalMinimum" xml:space="preserve">
    <value>Obtener mínimo vertical</value>
  </data>
  <data name="helptext_Gettheminimumverticalvalue" xml:space="preserve">
    <value>Obtener el valor vertical mínimo</value>
  </data>
  <data name="name_GetVerticalMaximum" xml:space="preserve">
    <value>Obtener máximo vertical</value>
  </data>
  <data name="helptext_Getthemaximumverticalvalue" xml:space="preserve">
    <value>Obtener el valor vertical máximo</value>
  </data>
  <data name="name_GetVerticalValue" xml:space="preserve">
    <value>Obtener valor vertical</value>
  </data>
  <data name="helptext_Getthecurrentverticalvalue" xml:space="preserve">
    <value>Obtener el valor vertical actual</value>
  </data>
  <data name="name_SetVerticalValue" xml:space="preserve">
    <value>Establecer valor vertical</value>
  </data>
  <data name="helptext_Settheverticalvalue" xml:space="preserve">
    <value>Establecer el valor vertical</value>
  </data>
  <data name="name_GetSelectedNodeKey" xml:space="preserve">
    <value>Obtener clave de nodo seleccionado</value>
  </data>
  <data name="helptext_Getthekeyoftheselectednodeinatreeview" xml:space="preserve">
    <value>Obtener la clave de un nodo seleccionado en una vista de árbol</value>
  </data>
  <data name="name_GetNodeText" xml:space="preserve">
    <value>Obtener texto de nodo</value>
  </data>
  <data name="helptext_Getthetextofthenodewiththespecifiedkey" xml:space="preserve">
    <value>Obtener el texto del nodo con la clave especificada</value>
  </data>
  <data name="name_Key" xml:space="preserve">
    <value>Clave</value>
  </data>
  <data name="description_Thekeyofthenode" xml:space="preserve">
    <value>La clave del nodo</value>
  </data>
  <data name="name_DoubleClickNode" xml:space="preserve">
    <value>Hacer doble clic en el nodo</value>
  </data>
  <data name="helptext_Simulatedoubleclickingthetreenode" xml:space="preserve">
    <value>Simular hacer doble clic en el nodo de árbol</value>
  </data>
  <data name="name_Text" xml:space="preserve">
    <value>Texto</value>
  </data>
  <data name="description_Thetextofthenode" xml:space="preserve">
    <value>El texto del nodo</value>
  </data>
  <data name="name_Select" xml:space="preserve">
    <value>Seleccionar</value>
  </data>
  <data name="helptext_Selectsanitem" xml:space="preserve">
    <value>Selecciona un elemento</value>
  </data>
  <data name="name_SelectItem" xml:space="preserve">
    <value>Seleccionar elemento</value>
  </data>
  <data name="helptext_Selectsanitemidentifiedbyitsposition" xml:space="preserve">
    <value>Selecciona un elemento identificado por su posición.</value>
  </data>
  <data name="name_ItemPosition" xml:space="preserve">
    <value>Posición del elemento</value>
  </data>
  <data name="description_The1basedindexoftheitemtobeselecte_a7096ddbb905f754" xml:space="preserve">
    <value>El índice basado en 1 del elemento que se seleccionará. Este parámetro se ignora a menos que el "Texto del elemento"</value>
  </data>
  <data name="name_GetCellValue" xml:space="preserve">
    <value>Obtener valor de la celda</value>
  </data>
  <data name="helptext_Returnsthetextvalueofthecurrentlys_3987095cad3dc338" xml:space="preserve">
    <value>Devuelve el valor de texto de la celda actualmente seleccionada en una cuadrilla.</value>
  </data>
  <data name="name_Cellrow" xml:space="preserve">
    <value>Fila de la celda</value>
  </data>
  <data name="description_Therownumberofthecurrentcell" xml:space="preserve">
    <value>El número de fila de la celda actual</value>
  </data>
  <data name="name_Cellcolumn" xml:space="preserve">
    <value>Columna de la celda</value>
  </data>
  <data name="description_Thecolumnnumberofthecurrentcell" xml:space="preserve">
    <value>El número de columna de la celda actual</value>
  </data>
  <data name="name_SetFocus" xml:space="preserve">
    <value>Establecer foco</value>
  </data>
  <data name="helptext_Placesthefocusforeventsontoaspecificcontrol" xml:space="preserve">
    <value>Ubica el foco para eventos en un control específico.</value>
  </data>
  <data name="name_Cellcolumnname" xml:space="preserve">
    <value>Nombre de la columna de la celda</value>
  </data>
  <data name="name_PressButton" xml:space="preserve">
    <value>Presionar botón</value>
  </data>
  <data name="helptext_Pressesabuttononatreeview" xml:space="preserve">
    <value>Presiona un botón en una vista de árbol</value>
  </data>
  <data name="name_ItemName" xml:space="preserve">
    <value>Nombre del elemento</value>
  </data>
  <data name="description_Thenameoftheitemtobepressed" xml:space="preserve">
    <value>El nombre del elemento que se va a presionar</value>
  </data>
  <data name="name_ChangeCheckboxState" xml:space="preserve">
    <value>Cambiar estado de casilla de verificación</value>
  </data>
  <data name="helptext_Changesthecheckboxstateonatreeview" xml:space="preserve">
    <value>Cambia el estado de la casilla de verificación en una vista de árbol.</value>
  </data>
  <data name="description_Thenameoftheitem" xml:space="preserve">
    <value>El nombre del elemento</value>
  </data>
  <data name="name_state" xml:space="preserve">
    <value>estado</value>
  </data>
  <data name="description_Thestateofthecheckbox" xml:space="preserve">
    <value>El estado de la casilla de verificación</value>
  </data>
  <data name="name_ClickLink" xml:space="preserve">
    <value>Hacer clic en el enlace</value>
  </data>
  <data name="helptext_Emulatestriggeringalink" xml:space="preserve">
    <value>Emula la activación de un enlace.</value>
  </data>
  <data name="name_NodeKey" xml:space="preserve">
    <value>Clave de nodo</value>
  </data>
  <data name="name_DoubleClickItem" xml:space="preserve">
    <value>Hacer doble clic en el elemento</value>
  </data>
  <data name="helptext_Emulatesdoubleclickingonatreeviewtextitem" xml:space="preserve">
    <value>Emula el hacer doble clic en un elemento de texto en una vista de árbol.</value>
  </data>
</root>