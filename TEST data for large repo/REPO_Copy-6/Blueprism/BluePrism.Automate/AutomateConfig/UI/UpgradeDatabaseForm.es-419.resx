<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ctlBlueBar.Title" xml:space="preserve">
    <value>La base de datos se actualizará a la versión requerida</value>
  </data>
  <data name="lblRequiredValue.Text" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lblCurrentValue.Text" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lblPasswordPrompt.Text" xml:space="preserve">
    <value>Vuelva a ingresar la contraseña de la base de datos:</value>
  </data>
  <data name="lblRequiredVersion.Text" xml:space="preserve">
    <value>Versión requerida de la base de datos:</value>
  </data>
  <data name="lblCurrentVersion.Text" xml:space="preserve">
    <value>Versión actual de la base de datos:</value>
  </data>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnUpgrade.Text" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <metadata name="mBackgroundWorker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>158, 17</value>
  </metadata>
  <data name="lblWarning.Text" xml:space="preserve">
    <value>La actualización no se puede deshacer; asegúrese de haber hecho una copia de seguridad de su base de datos</value>
  </data>
  <metadata name="mSaveFileDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="btnGenerateScript.Text" xml:space="preserve">
    <value>Generar script</value>
  </data>
  <data name="MigrationDescription.Text" xml:space="preserve">
    <value>Los datos de registro de sesión existentes se migrarán a las nuevas tablas de registro de sesión que se utilizarán después de la actualización. Esta operación puede llevar algún tiempo. No se recomienda para entornos con más de 1 millón de registros de sesión.
</value>
  </data>
  <data name="NoMigrationDescription.Text" xml:space="preserve">
    <value>Los datos de registro de sesiones existentes permanecerán en la base de datos, pero se cambiará el nombre de las tablas que contienen estos datos para permitir la creación de nuevas tablas que se utilizarán después de la actualización. Las tablas existentes (BPASessionLog_NonUnicode, BPASessionLog_Unicode) se renombrarán como “_pre65”. Después de la actualización, los registros de sesión existentes ya no serán visibles en Control Room, pero se podrá acceder a ellos a través de la función de archivado de productos internos.</value>
  </data>
  <data name="MigrationWarningLabel.Text" xml:space="preserve">
    <value>Advertencia: La base de datos seleccionada contiene demasiados datos de registro de sesión para ser migrada como parte del proceso de actualización. De ser necesario, estos datos deberían migrarse después de que se haya realizado una actualización de la base de datos sin que se haya producido la migración.</value>
  </data>
  <data name="MigrationRadio.Text" xml:space="preserve">
    <value>Actualizar la base de datos y migrar los datos de registro de sesiones existentes a nuevas tablas</value>
  </data>
  <data name="NoMigrationRadio.Text" xml:space="preserve">
    <value>Actualizar la base de datos y conservar los registros de sesiones en las tablas existentes</value>
  </data>
  <data name="SessionMigrationGroupBox.Text" xml:space="preserve">
    <value>Migración de registro de sesión</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Text" xml:space="preserve">
    <value>Actualizar la base de datos</value>
  </data>
</root>