#
#	exprtests-good.txt
#
#	List of expressions and their expected outputs used by the nunit test
#   defined in ExpressionTests.TestGoodExpressions()
#
#	File format:
#
#	  Blank lines, and lines beginning with # are ignored
#	  All other lines are:
#     expression<tab>result<tab>resulttype
#

1+1+(2-4)	0	number
1+1+(2-4) *3 	-4	number
5*1+1+(2-4) *3 	0	number
5*(1-0)+1+(2-4) *3	0	number
5*(1-1)+1+(2-4) *3 	-5	number
(5*(1-1)+1+(2-4) *3 )/1	-5	number
(5*(1-1)+1+(2-4) *3 )/3	-1.6666666666666666666666666667	number
(5*(1-1)+1+(2-4) *3 )/3 + 7	5.3333333333333333333333333333	number
(5*(1-145)+1+(2-4) *3 )/3 + 7	-234.66666666666666666666666667	number
(5*(1-145)+(1+(2-4) )*3 )/3 + 7	-234	number
(5*(1-145)+(1+(2-4) )*3 )/(3-2) + 7	-716	number

#The following demonstrates that the product evaluates from left to right for operators of equal precedence. REF lefttoright
16/4/2/2	1	number
(16/4/2)/2	1	number
((16/4)/2)/2	1	number
16/(4/2/2)	16	number
16/(4/(2/2))	4	number

#As for division above (see lefttoright), evaluation of powers takes place from left to right
2^2^2^2	256	number
2^(2^2^2)	65536	number
2^(2^(2^2))	65536	number
2^(2^2)^2	256	number
(2^(2^2))^2	256	number
2^((2^2)^2)	65536	number
2^3^4^5	1152921504606850000	number

#Verify that power operator has correct precendence over *,/,+,-
2^4+6	22	number
2^(4+6)	1024	number
3-5^3	-122	number
(3-5)^3	-8	number
(3-5)^3+2	-6	number
(3-5)^(3+2)	-32	number
2^6/2	32	number
2^(6/2)	8	number
2^6/2+3	35	number
2^6/(2+3)	12.8	number
2^(6/(2+3))	2.29739670999407	number

Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))	15.2970585407784	number
Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))	1	number
(Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2	1.4	number
DecPad((Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2,2)	1.40	text
DecPad((Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7+ DateDiff(1,Now(), DateAdd(2,-20,DateAdd(2,20,Now()))))) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2,2)	1.40	text
"hello" & "Queeny"	helloQueeny	text
"hello" & "Queeny"&"hello"&"Queeny"&"hello"&"Queeny"&"hello" &"Queeny"&"hello"&"Queeny"	helloQueenyhelloQueenyhelloQueenyhelloQueenyhelloQueeny	text
Mid("chocolate", 6, 4)	late	text
Mid("chocolate",6,4) & "ness" & "monster"	latenessmonster	text
Left(Mid("chocolate",6,4) & "ness" & "monster", 8)	lateness	text
Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3)	lateness the	text
Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3)	ate	text
Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)	ate	text
"I have " & DecPad((Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2,2) & " pounds"	I have 1.40 pounds	text
"I have " & DecPad((Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2,2) & " pounds " & "and " & Mid("one hundred and seventy two pence",  17, 17)	I have 1.40 pounds and seventy two pence	text
True and False	False	flag
True and True	True	flag
False or True	True	flag
(False or True) and False	False	flag
((False or True) and False) or True	True	flag
(1>0) and True	True	flag
(1>0) or True	True	flag
(1<0) and True	False	flag
(1>0) and (False or True)	True	flag
(1<0) and (0>1)	False	flag
(1<0) or (0>1)	False	flag
((1<0) or (0>1) or True) and False	False	flag
((1<0) or (0>1) or True) or False	True	flag
1.9 > 1.9	False	flag
1.9 >= 1.9	True	flag
(1.9 <> 1.9)	False	flag
(1.9 <> 1.9) or InStr("hello","people") > 2	False	flag
(((1.9 <> 1.9) or InStr("hello","people") > 2 or True) and False) or True	True	flag
(((1.9 = 1.9) or InStr("hello","people") > 2 or True) and False) or True	True	flag
(((1.9 = 1.9) or InStr("hello","people") > (Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2 or True) and False) or True	True	flag
(((1.9 = 1.9) or InStr("hello","people") > (Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2 or True) and False) or True and False	False	flag
(((DateAdd(8, 300000, "01/01/1000") >Today()) or InStr("hello","people") > (Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7)) / Sqrt(-1*((5*(1-145)+(1+(2-4) )*3 )/3 + 7))+5)/5+0.2 or True) and False) or True and False	False	flag
DateAdd(8, 300000, "01/01/1000") >Today()	False	flag
DateAdd(8, 300000, "01/01/1000")	1821/05/17	date
DateDiff(8,DateAdd(8, 300000, "01/01/1000"),"01/01/1000")	-300000	number
DateDiff(8,DateAdd(8, 300000, "01/01/1000"),MakeDate(1,1,1000))	-300000	number
FormatDate(DateAdd(8, 300000, "01/01/1000"), "dd MMM yyyy")	17 May 1821	text
FormatDate(DateAdd(8, 300000, "01/01/1000"), "dd MMM yyyy") & " I was born"	17 May 1821 I was born	text
DateDiff(1,Now(), Now())	0	number
DateDiff(1,Now(), DateAdd(2,-20,DateAdd(2,20,Now())))	0	number


#The following two cover bug #678
(1>0)	True	flag
((1>0))	True	flag

#Bug #759:
10-10-10	-10	number

(-31488) >= (-32133.8519284156) + (-25517) +  (-16299)	True	flag
(-30659.5936269479) = 23037.0425980077	False	flag
11724.3329369781 -  24691 > (-9275) or 17059.5954821872 < 15461 or False	False	flag
(-16168) = (-7588)	False	flag
Sqrt(7011) +  (-12780.2317716983) / (-2748) *  (-19590.5820708902)	-91026.95948225004835773174187	number
29974.3027635917 + 17052 /  (-27714) * 12763 +  20078	42199.424218452059385148300497	number
7562.5817601134 <= (-20384)	False	flag
Round(15235, 3) = (-4021) /  (-23676.103602944)	False	flag
(-11396.4579368254) > (-10914.4768269819)	False	flag
30410 +  (-4092)	26318	number
DateAdd(0, 256 * 3 / (5*4-17) - 255, "24/03/2950")	2951/03/24	date
3296 <= 23067.0320389397 or False	True	flag
(-17758) >= 31758.8268427918	False	flag
498.708191150198 <= (-19848)	False	flag
19551 > (-20402) * Round(17496.768639129 / 16381.0178146348 / 22061.0475871773 *  (-9203.13501405117) - 24177 - (-10180.7557573043) -  (-24624) + 24702 + (-30491.6387928853) /  31383 + 32538 * 10815 +  (-972) *  (-4740.62195044971) + (-13150.2772735796) + (-7590) * (-26315) + 4729.5475333303 -  (-25932) /  (-14765.508307657) -  Round(19384.5367521907 +  1, 3), 0) +  Round(-603) /  Sqrt(18119) +  3781.307634207 -  (-28620) /  (-8824) / (-18958.2430813379) * (-11785) *  (-23338.6565355261) *  (-31557) +  18899.4474575312	True	flag
11395.9178977627 > (-3452.6866471156)	True	flag
(-26244.4376495501) > Round(Sqrt(15777), 2)	False	flag
(-17885) /  21767	-0.8216566361924013414802223549	number
28688 < 30029	True	flag
20170.3000887382 /  27505.4055609039 *  18563.1942072526 >= 5809 / (-3589) - (-30520.4293660188) /  3254.65472563666	True	flag
20161.9204958388 < (-12868)	False	flag
(-3854) + 8802 /  (-20699.7094670365)	-3854.4252233594880570768630627	number
25942.3671995804 > 6915 *  6980.10484639001 /  (-12372.8243160643)	True	flag
30127.0300128083 -  (-26948.5881015382)	57075.6181143465	number
(-29308) *  (-10065)	294985020	number
10743.5963947734 >= (-18524.7754755452) /  (-23621.1399035776) -  (-8168.55429457526) +  810475200+ 16566 *  (-21778) * Sqrt(4310.41247759313 *  27278) -  (-13575)	True	flag
10743.5963947734 >= (-18524.7754755452) /  (-23621.1399035776) -  (-8168.55429457526) +  DateDiff(6, "01/01/2660", "18/09/4203") + 16566 *  (-21778) * Sqrt(4310.41247759313 *  27278) -  (-13575)	True	flag
(-18524.7754755452) /  (-23621.1399035776) -  (-8168.55429457526) +  810475200+ 16566 *  (-21778) * Sqrt(430.41247759313 *  278) -  (-13575)	-123985448317.94578797388733069	number
(-11115.8883260991) <> (-11771)	True	flag
9688 < 18604	True	flag
(-18529.4729090191) <> 31956.5612941778	True	flag
(-27629.7590155517) - (-19708.9394928203) + 6877 * 26096.2069365905 *  10833	1944129334489.2522417291	number
26476.3046845702 +  18007 +  (-3997) *  (-749.702881208483)	3041045.720874876751	number
True or 22212.4702251872 >= 27311 -  25465.3399776785	True	flag
6374 > 25631	False	flag
(-24640.5994835201) > 10256	False	flag
23984.8536183466 <= (-220.311355693411)	False	flag
28781.2103558095 +  7865.8777044685 /  (-3261.79660186069)	28778.798838886592724121204964	number
17315.0236439272 > (-21418.2569679815)	True	flag
DateAdd(Round(19196.7230771765 /  13114 -1, 0), 4172, "19/11/2737")	6909/11/19	date
(-13349) +  13872	523	number
26658 -  (-14328)	40986	number
(-12772) +  9911.98677524551	-2860.01322475449	number
Round(19550.0648894748 /  12547, 0) 	2	number
28498.9307994037 +  19214.9735959838	47713.9043953875	number
(-3492.16389627949) +  (-29139) -32631.16389627949	-65262.32779255898	number
DateDiff(5, "17/07/1169", "10/10/1170")	15	number


1 < 5	True	flag
4.9 <= 5	True	flag
5.0 <= 5	True	flag
5.0 <= 5	True	flag
5.1 <= 5	False	flag
5.0 <> 5	False	flag
5 <> 4.9	True	flag
5>=5.0	True	flag
5 >= 4.9	True	flag
5 >= 5.1	False	flag


19902.7002656156 >= (-3607)	True	flag
(-21198.2931617267) > (-9840.6262558031) or False	False	flag
True or (-12507.9959775042) < (-19131)	True	flag
(-12949.4118407468) /  13266 -  (-32614.4851226092)	32613.508987237516990803557968	number
1276.49742185906 /  (-19883) * 22792 / 6107 -  (-6519.66331785529) *  26890.61987031 < (-16279)	False	flag
RndUp(27377.8800481492, 6) -  26766.0369234747 < (-26688.3706636729)	False	flag
21009 > (-13141.8546203775) or 13388.100576913 /  (-10278.5688371838) /  2978.41661210471 -  (-23783) * (-10941) / (-21237) -  (-22499.5570630895) <> (-25686.2513547345)	True	flag
(-23190) = (-17258.6881336471)	False	flag
645.998672786168 > (-440.552810874094)	True	flag
645.998672786168 > (-440.552810874094)	True	flag
17983 +  (-24876)	-6893	number
11345.2453513524 *  25263.7971766814 *  (-22865)	-6553657244994.5600818681437034	number
(-24146) <> (-2354)	True	flag
DateAdd(9,2805, "2005-01-01")	2012/09/06	date
RndUp(5379.26697027835, 4) *  17027.6262744086 < RndDn(-16669, 4)	False	flag
(-14648.6553565528) * 16983.823555272 +  (-24918.2935449287) *  24615.0158958617	-862154369.6038507431875379224	number
9469.94232618713 - 22778 / (-21571) * Sqrt(21306) + (-12424.2767239252) +  RndDn(29698, 0)	26897.798829279535526772055074	number
25958 *  17254.9692157986 / RndUp(-13844, 1) +  (-30004.9884172925) < 5009	True	flag
(-1628.7943122819) + (-1780) *  (-26778.0604372742)	47663318.7840357941	number
10027 *  (-18365)	-184145855	number
(-27909) / (-30198) *  28359.5689524149	26209.921514436301877607788595	number
(-28333.9331796979) = 202.066818331399	False	flag
DateAdd(Round(31867 -  31858, 0), 10353, "1419/11/02")	1448/03/07	date
(-13529) <> (-26788) -  (-8125) -  (-10665.6405841902)	True	flag
RndUp(6720.42718818804, 5) /  20471 -  (-22083)	22083.328290127008939475355381	number
(-19181) *  6981.40539875878	-133910336.95359215918	number
18759 = (-28862)	False	flag

#
# The following group of tests were disabled pending fix of
# bug #576 - they are now enabled again....
#

Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3))	3	number
Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3)	cde	text
Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh"	cdefgh	text
InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh","h")	6	number
InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))	1	number
Len(Upper(Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))) & "e is the man"))	13	number
Len(FormatDate(DateAdd(8, 300000, "01/01/1000"), "dd MMM yyyy") & " I was born")	22	number
Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3)))	m	text
Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))) & "e is the man"	me is the man	text
Upper(Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))) & "e is the man")	ME IS THE MAN	text
InStr(Upper(Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))) & "e is the man"), "man") + (5*(1-145)+(1+(2-4) )*3 )/(3-2) + 7	-716	number
Lower(Upper(Mid("Automate", 5,InStr(Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3) & "fgh", Mid("abcdefghij",Len(Right(Mid(Left(Mid("chocolate",6,4) & "ness" & "monster", 8)&" " &Mid(" costs the NHS money", 8,3), 2,3),3)),3))) & "e is the man"))	me is the man	text
Len(Right(Upper("qrstuvwxyz"), 3) & Lower("efghijklmnop") & "g" & "cde")	19	number

#checks for handling of unary operators. See bug 1263
-1 * -1	1	number
-1 + -1	-2	number
--1	1	number
---1	-1	number
-1 * ---1	1	number
4 * 3 - -2	14	number
4 * 3 ---2	10	number
4 * (3---2)	4	number
1 * -1	-1	number
((((----5))))	5	number
((((-----5))))	-5	number
1-+1	0	number
1-+++++1	0	number
1/-1	-1	number
1/1-5	-4	number
1/1------5	6	number
-1/1------5	4	number
-1/1-3-----+5	-9	number



#
# The following expressions may require attention - see notes....
#

# this one disagrees with the result of the .net evaluator
# notice that all blocks turn out to be negative, so the final result must also be negative, but the APC evaluator gives a positive result.
#(-3064.62532186165) * 6431.87642206246 - (-18388.6054010189) * Round(-1561.90232921853) -  2736 *  18700	-199194985.973058	number

#according to the dotnet evaluator, the first of the two comparisons is true, but the APC evaluator thinks it is false.
#10150.4199266017 - (-23555) - (-11890) * (-298.760208269004) -  29182.9366590972 +  26488.5072297419 < (-31963.5041347572) or 22552 <= 18245	True	flag

#this one seems to fail because the multiple division signs are worked out in a different order to the way that the .net evaluator does it. otherwise it is ok.
#5246 +  2348 * 1990.98265168396 /  (-9116) /  28923.9911328535 >= (-22495.1805677261)	True	flag

#same goes for this one
#(-27320) +  8853 / (-1429) /  Round(-8531.97970978356, 1) -  (-30988)	3668.00072611831	number

#Tests for string literals... (see bug #3661)
"Mr ""Quoted"""	Mr "Quoted"	text
"Mr Unquoted"	Mr Unquoted	text
""""	"	text
"Mr """"DoubleQuoted"""""	Mr ""DoubleQuoted""	text
"""Dr"" Unquoted"	"Dr" Unquoted	text

#Timespan comparisons
MakeTimeSpan(10,11,4,59,323) > MakeTimeSpan(4,11,4,59,323)	True	flag
MakeTimeSpan(10,11,4,59,323) >= MakeTimeSpan(4,11,4,59,323)	True	flag
MakeTimeSpan(10,11,4,59,323) <= MakeTimeSpan(4,11,4,59,323)	False	flag
MakeTimeSpan(10,11,4,59,323) < MakeTimeSpan(4,11,4,59,323)	False	flag
MakeTimeSpan(10,11,4,59,323) <= MakeTimeSpan(10,11,4,59,323)	True	flag
MakeTimeSpan(10,11,4,59,323) >= MakeTimeSpan(10,11,4,59,323)	True	flag
MakeTimeSpan(10,11,4,59,323)-MakeTimeSpan(10,11,4,59,323) < MakeTimeSpan(4,11,4,59,323)	True	flag


#Some tests for file reading and binary data...
InStr(LoadTextFile("..\BluePrism.AutomateProcessCore.UnitTests\expression-tests\GetWorkingDays.xml"),"Get Working Days")	16	number
Bytes(LoadBinaryFile("..\BluePrism.AutomateProcessCore.UnitTests\expression-tests\GetWorkingDays.xml"))	11308	number
Bytes(LoadBinaryFile("..\BluePrism.AutomateProcessCore.UnitTests\expression-tests\GetWorkingDays.xml")+LoadBinaryFile("..\BluePrism.AutomateProcessCore.UnitTests\expression-tests\GetWorkingDays.xml"))/2	11308	number

