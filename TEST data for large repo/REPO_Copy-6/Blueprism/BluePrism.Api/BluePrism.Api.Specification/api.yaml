openapi: 3.0.3
info:
  title: Blue Prism API
  description: An API to expose core functionality of the Blue Prism product
  version: 0.1.0

security:
  - Bearer: ["bp-api", "bpserver"]
  - OAuth2: ["bp-api", "bpserver"]

paths:
  /api/v7/dashboards/workQueueCompositions:
    get:
      summary: Return aggregate work queue data for each of the requested queues.
      tags:
        - 'Dashboards'
      parameters:
        - name: workQueueIds
          in: query
          description: Array of work queue IDs to retrieve data for.
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: A list of work queue composition details was successfully retrieved.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkQueueComposition'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/dashboards/resourceUtilization:
    get:
      summary: Return runtime resource utilization
      tags:
        - 'Dashboards'
      parameters:
        - name: startDate
          in: query
          required: true
          description: The start date
          schema:
            type: string
            format: date-time
        - name: resourceIds
          in: query
          description: Array of resource IDs to filter on.
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: pageNumber
          in: query
          description: Page number parameter used for data paging of utilization heat map.
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size parameter used for data paging of utilization heat map.
          schema:
            type: integer
      responses:
        '200':
          description: A list of resource utilization details was successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceUtilization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/dashboards/resourcesSummaryUtilization:
    get:
      summary: Return runtime resources summary utilization by date range
      tags:
        - 'Dashboards'
      parameters:
        - name: startDate
          in: query
          required: true
          description: The start date
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          required: true
          description: The end date
          schema:
            type: string
            format: date-time
        - name: resourceIds
          in: query
          description: Resource IDs to filter on.
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: A list of resource utilization by date range was successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourcesSummaryUtilization'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/encryptionschemes:
    get:
      summary: Return a list of encryption schemes in the environment
      tags:
        - 'Encryption Schemes'
      responses:
        '200':
          description: A list of encryption schemes was successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EncryptionScheme'

  /api/v7/resources:
    get:
      summary: Return a list of resources in the environment
      tags:
        - 'Resources'
      parameters:
        - name: name
          description: A filter to search for the name of the resource.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: groupName
          description: A filter to search for the group name of the resource.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: poolName
          description: A filter to search for the pool name of the resource.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: activeSessionCount
          description: A filter to search for resource's active session count.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: pendingSessionCount
          description: A filter to search for resource's pending session count.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: displayStatus
          description: A filter to search for the current status of the resource.
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Working
                - Idle
                - Warning
                - Offline
                - Missing
                - LoggedOut
                - Private
        - name: sortBy
          description: The field that results should be sorted by and the direction they should be sorted in.
          in: query
          schema:
            type: string
            enum:
              - NameAsc
              - NameDesc
              - PoolAsc
              - PoolDesc
              - GroupAsc
              - GroupDesc
              - PendingAsc
              - PendingDesc
              - ActiveAsc
              - ActiveDesc
              - DisplayStatusAsc
              - DisplayStatusDesc
        - name: itemsPerPage
          in: query
          description: The maximum number of items to retrieve on this page.
          schema:
            type: integer
            minimum: 1
        - name: pagingToken
          in: query
          description: The token to point to the last item previously returned.
          schema:
            type: string
      responses:
        '200':
          description: An array of resource summaries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceItemsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/resources/{resourceId}:
    put:
      summary: Update a specified resource
      tags:
        - 'Resources'
      parameters:
        - name: resourceId
          in: path
          description: The ID of the resource to modify
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResource'
      responses:
        '204':
          description: The resource was successfully updated
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: The resource could not be modified

  /api/v7/schedules:
    get:
      summary: Return a list of schedules in the environment
      tags:
        - 'Schedules'
      parameters:
        - name: name
          description: A filter to search for name of the schedule.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: retirementStatus
          description: A filter to search for the retirement status of the schedule. The default behavior is to search for all statuses.
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Active
                - Retired
        - name: itemsPerPage
          in: query
          description: The maximum number of items to retrieve
          schema:
            type: integer
            minimum: 1
        - name: pagingToken
          in: query
          description: The token to point to the last item previously returned
          schema:
            type: string
      responses:
        '200':
          description: A list of schedule summaries was successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleItemsPage'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/schedules/{scheduleId}:
    get:
      summary: Return requested schedule summary
      tags:
        - 'Schedules'
      parameters:
        - name: scheduleId
          in: path
          description: The ID of the schedule to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The schedule summary was succesfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSummary'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'  

    put:
      summary: Update a given schedule
      tags:
        - 'Schedules'
      parameters:
        - name: scheduleId
          in: path
          description: The ID of the schedule to update
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchedule'
      responses:
        '204':
          description: The schedule was successfully updated
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: A schedule could not be modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v7/schedules/logs:
    get:
      summary: Return all schedule logs
      tags:
        - 'Schedules'
      parameters:
        - name: itemsPerPage
          description: The number of items to show per page
          in: query
          required: false
          schema:
            type: integer
        - name: scheduleLogStatus
          description: A filter to search for the status of the log.
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Pending
                - Running
                - Terminated
                - Completed
                - PartExceptioned
        - name: startTime
          description: A filter to search for the log start time.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: endTime
          description: A filter to search for the log end time.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: pagingToken
          in: query
          description: The token to point to the last item previously returned
          schema:
            type: string
      responses:
        '200':
          description: A page containing a list of schedule log items and a paging token are successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleLogItemsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/schedules/{scheduleId}/logs:
    get:
      summary: Return all logs for a specified schedule
      tags:
        - 'Schedules'
      parameters:
        - name: scheduleId
          description: The ID of the schedule to retrieve data for
          in: path
          required: true
          schema:
            type: integer
        - name: itemsPerPage
          description: The number of items to show per page
          in: query
          required: false
          schema:
            type: integer
        - name: scheduleLogStatus
          description: A filter to search for the status of the log.
          in: query
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
                - Pending
                - Running
                - Terminated
                - Completed
                - PartExceptioned
        - name: startTime
          description: A filter to search for the log start time.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: endTime
          description: A filter to search for the log end time.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: pagingToken
          description: The token to point to the last item previously returned
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A page containing a list of schedule log items and paging token are successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleLogItemsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'


  /api/v7/schedules/{scheduleId}/sessions:
    post:
      summary: Set a schedule to run at a specific date and time
      tags:
        - 'Schedules'
      parameters:
        - name: scheduleId
          in: path
          description: The ID of the schedule to start
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleSessionStart'
      responses:
        '202':
          description: The schedule was successfully set to run at a specified date and time
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSessionStartResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'


  /api/v7/schedules/{scheduleId}/tasks:
    get:
      summary: Retrieve a list of tasks in a schedule
      tags:
        - 'Schedules'
      parameters:
        - name: scheduleId
          in: path
          description: The ID of the schedule for which to retrieve tasks
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of tasks is successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledTask'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/schedules/tasks/{taskId}/sessions:
    get:
      summary: Return a list of the scheduled sessions for a specified task
      tags:
        - 'Schedules'
      parameters:
        - name: taskId
          in: path
          description: The ID of the task to retrieve data for
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A collection of the associated scheduled sessions for a specific task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledSession'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/sessions:
    get:
      summary: Return a list of sessions in the environment
      tags:
        - "Sessions"
      parameters:
        - name: sortBy
          description: The field that results should be sorted by and the direction they should be sorted in.
          in: query
          schema:
            type: string
            enum:
              - SessionNumberAsc
              - SessionNumberDesc
              - ProcessNameAsc
              - ProcessNameDesc
              - ResourceNameAsc
              - ResourceNameDesc
              - UserNameAsc
              - UserNameDesc
              - StatusAsc
              - StatusDesc
              - ExceptionTypeAsc
              - ExceptionTypeDesc
              - StartTimeAsc
              - StartTimeDesc
              - EndTimeAsc
              - EndTimeDesc
              - LatestStageAsc
              - LatestStageDesc
              - StageStartedAsc
              - StageStartedDesc
        - name: itemsPerPage
          in: query
          description: The maximum number of items to retrieve.
          schema:
            type: integer
            minimum: 1
        - name: pagingToken
          in: query
          description: The token to point to the last item previously returned.
          schema:
            type: string
        - name: processName
          in: query
          style: deepObject
          description: A filter to search for the name of the process being run by the session.
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: sessionNumber
          in: query
          style: deepObject
          description: A filter to search for the session number.
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: resourceName
          in: query
          style: deepObject
          description: A filter to search for the name of the resource on which the session is running/ran.
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: userName
          in: query
          style: deepObject
          description: A filter to search for the name of the user that triggered the session.
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: status
          in: query
          style: form
          explode: false
          description: The status of the sessions to search for.
          schema:
            type: array
            items:
              type: string
              enum:
                - Pending
                - Running
                - Terminated
                - Stopped
                - Completed
                - Stopping
                - Warning
        - name: startTime
          in: query
          style: deepObject
          description: A filter to search for the time that the session started.
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: endTime
          in: query
          style: deepObject
          description: A filter to search for the time that the session ended.
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: latestStage
          in: query
          style: deepObject
          description: A filter to search for the name of the latest stage.
          schema:
            $ref: '#/components/schemas/BasicStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: stageStarted
          in: query
          style: deepObject
          description: A filter to search for the time when the latest stage started
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
      responses:
        '200':
          description: An array of session summaries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionItemsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v7/sessions/{sessionId}:
    get:
      summary: Get details of a specified session
      tags:
        - 'Sessions'
      parameters:
        - name: sessionId
          in: path
          description: The ID of the session to retrieve data for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Details of the requested session were successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionSummary'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/sessions/{sessionId}/logs:
    get:
      summary: Return all logs for a specified session
      tags:
        - 'Sessions'
      parameters:
        - name: sessionId
          in: path
          description: The ID of the session to retrieve data for
          required: true
          schema:
            type: string
            format: uuid
        - name: itemsPerPage
          in: query
          description: The maximum number of items to retrieve
          schema:
            type: integer
            minimum: 1
        - name: pagingToken
          in: query
          description: The token to point to the last item previously returned
          schema:
            type: string
      responses:
        '200':
          description: A list of session logs was successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLogsPage'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/sessions/{sessionId}/logs/{logId}/parameters:
    get:
      summary: Return all parameters for a specified session log
      tags:
        - 'Sessions'
      parameters:
        - name: sessionId
          in: path
          description: The ID of the session to retrieve data for
          required: true
          schema:
            type: string
            format: uuid
        - name: logId
          in: path
          description: The Id of the log to retrieve for the session
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A list of session log parameters was successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionLogParametersResponse'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/workqueues:
    get:
      summary: Return a list of work queues in the environment
      tags:
        - 'Work Queues'
      parameters:
        - name: sortBy
          description: The field that results should be sorted by and the direction they should be sorted in.
          in: query
          required: false
          schema:
            type: string
            enum: [NameAsc, NameDesc, StatusAsc, StatusDesc, KeyFieldAsc, KeyFieldDesc, MaxAttemptsAsc, MaxAttemptsDesc, IsEncryptedAsc, IsEncryptedDesc, TotalItemCountAsc, TotalItemCountDesc, CompletedItemCountAsc, CompletedItemCountDesc, PendingItemCountAsc, PendingItemCountDesc, LockedItemCountAsc, LockedItemCountDesc, ExceptionedItemCountAsc, ExceptionedItemCountDesc, TotalCaseDurationAsc, TotalCaseDurationDesc, AverageWorkTimeAsc, AverageWorkTimeDesc]
        - name: name
          description: A filter to search for the name of the work queue.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/FullStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            contains:
              $ref: '#/components/examples/StringContainsExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: keyField
          description: A filter to search for the name of the work queue's key field.
          in: query
          style: deepObject
          schema:
            $ref: '#/components/schemas/FullStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            contains:
              $ref: '#/components/examples/StringContainsExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: status.eq
          description: A filter to search for the current status of the work queue.
          in: query
          schema:
             $ref: '#/components/schemas/QueueStatus'
        - name: maxAttempts
          description: A filter to search for the configured maximum attempts of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: pendingItemCount
          description: A filter to search for the pending item count of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: lockedItemCount
          description: A filter to search for the locked item count of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: completedItemCount
          description: A filter to search for the completed item count of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: exceptionedItemCount
          description: A filter to search for the exceptioned item count of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: totalItemCount
          description: A filter to search for the total item count of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: averageWorkTime
          description: A filter to search for the average work time of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/TimeEqualsExample'
            range:
              $ref: '#/components/examples/TimeRangeExample'
            greater:
              $ref: '#/components/examples/TimeLessThanExample'
        - name: totalCaseDuration
          description: A filter to search for the total case duration of the work queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/TimeEqualsExample'
            range:
              $ref: '#/components/examples/TimeRangeExample'
            greater:
              $ref: '#/components/examples/TimeLessThanExample'
        - name: itemsPerPage
          description: The maximum number of items to return in the current page.
          in: query
          schema:
            type: integer
            minimum: 1
        - name: pagingToken
          description: The token to point to the last item previously returned
          in: query
          schema:
            type: string

      responses:
        '200':
          description: A list of work queue summaries was successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueuesItemsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

    post:
      summary: Create a new work queue
      tags:
        - 'Work Queues'
      requestBody:
        description: Details of the queue to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkQueue'
      responses:
        '201':
          description: The work queue was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifier'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          description: A work queue with this name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v7/workqueues/{workQueueId}:
    get:
      summary: Return details of a work queue
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueId
          in: path
          description: The ID of the queue to retrieve details for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The work queue details were successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueueSummary'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      summary: Modifiy the work queue as described in the patch document
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueId
          in: path
          description: The ID of the queue to modify
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequest'
            examples:
              add (to array):
                $ref: '#/components/examples/PatchAddToArrayExample'
              add (to object):
                $ref: '#/components/examples/PatchAddToObjectExample'
              copy:
                $ref: '#/components/examples/PatchCopyExample'
              move:
                $ref: '#/components/examples/PatchMoveExample'
              remove:
                $ref: '#/components/examples/PatchRemoveExample'
              replace:
                $ref: '#/components/examples/PatchReplaceExample'
      responses:
        '204':
          description: The work queue was successfully updated
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Delete a specified work queue
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueId
          in: path
          description: The ID of the queue to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The queue was successfully deleted
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Either the queue is not empty or still has running sessions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v7/workqueues/{workQueueId}/items:
    get:
      summary: Return items in a specified work queue
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueId
          description: The ID of the queue to get an item from
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: sortBy
          description: The field that results should be sorted by and the direction they should be sorted in.
          in: query
          required: false
          schema:
            type: string
            enum: [AttemptAsc,
                   AttemptDesc,
                   AttemptWorkTimeAsc,
                   AttemptWorkTimeDesc,
                   CompletedAsc,
                   CompletedDesc,
                   DeferredAsc,
                   DeferredDesc,
                   ExceptionAsc,
                   ExceptionDesc,
                   ExceptionReasonAsc,
                   ExceptionReasonDesc,
                   KeyValueAsc,
                   KeyValueDesc,
                   LastUpdatedAsc,
                   LastUpdatedDesc,
                   LoadedAsc,
                   LoadedDesc,
                   LockedAsc,
                   LockedDesc,
                   PriorityAsc,
                   PriorityDesc,
                   StatusAsc,
                   StatusDesc,
                   WorkTimeAsc,
                   WorkTimeDesc]
        - name: keyValue
          description: A filter to search for the value of the key field of the work queue item.
          in: query
          schema:
            $ref: '#/components/schemas/FullStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            contains:
              $ref: '#/components/examples/StringContainsExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: status
          description: A filter to search for the status of the work queue item.
          in: query
          schema:
            $ref: '#/components/schemas/FullStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            contains:
              $ref: '#/components/examples/StringContainsExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: totalWorkTime
          description: A filter to search for the total work time of the work queue item.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/TimeEqualsExample'
            range:
              $ref: '#/components/examples/TimeRangeExample'
            greater:
              $ref: '#/components/examples/TimeLessThanExample'
        - name: loadedDate
          description: A filter to search for the time the work queue item was loaded onto the queue.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: deferredDate
          description: A filter to search for the time the work queue item is deferred until.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: lockedDate
          description: A filter to search for the time the work queue item was locked.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              value:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: completedDate
          description: A filter to search for the time the work queue item was completed.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: exceptionedDate
          description: A filter to search for the time the work queue item exceptioned.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: lastUpdated
          description: A filter to search for the time the work queue item was last updated.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/DateTimeEqualsExample'
            range:
              $ref: '#/components/examples/DateTimeRangeExample'
            greater:
              $ref: '#/components/examples/DateTimeGreaterThanExample'
        - name: attempt
          description: A filter to search for the current attempt number of the work queue item.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: priority
          description: A filter to search for the priority of the work queue item.
          in: query
          schema:
            $ref: '#/components/schemas/RangeOrEqualFilter'
          examples:
            equals:
              $ref: '#/components/examples/IntegerEqualsExample'
            range:
              $ref: '#/components/examples/IntegerRangeExample'
            less:
              $ref: '#/components/examples/IntegerLessThanExample'
        - name: exceptionReason
          description: A filter to search for the reason that the work queue item exceptioned.
          in: query
          schema:
            $ref: '#/components/schemas/FullStringFilter'
          examples:
            equals:
              $ref: '#/components/examples/StringEqualsExample'
            contains:
              $ref: '#/components/examples/StringContainsExample'
            startsWith:
              $ref: '#/components/examples/StringStartsWithExample'
            range:
              $ref: '#/components/examples/StringRangeExample'
            greater:
              $ref: '#/components/examples/StringGreaterThanExample'
        - name: itemsPerPage
          description: The maximum number of items to retrieve
          in: query
          schema:
            type: integer
        - name: pagingToken
          description: The token to point to the last item previously returned
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An list of queue items was successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueueItemsPage'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      summary: Add items to a queue
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueId
          in: path
          description: The ID of the queue to insert into
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Details of the queue items to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWorkQueueItems'
      responses:
        '201':
          description: The item was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Identifiers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotAuthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v7/workqueues/items/{workQueueItemId}:
    get:
      summary: Return details of a specified item from a work queue
      tags:
        - 'Work Queues'
      parameters:
        - name: workQueueItemId
          in: path
          description: The ID of the item to get
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Details of the specified item were successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkQueueItem'
        '404':
          $ref: '#/components/responses/NotFound'

#----------------------------------------------------
# COMPONENTS

components:

#----------------------------------------------------
# Security Schemes
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: JWT token issued from Authentication Server
      bearerFormat: JWT
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth-server/connect/token #To enable authentication - change hostname to your Authorization Server URL
          scopes:
            bp-api: API scope
            bpserver: Blue Prism Application scope

#----------------------------------------------------
# Common Responses
  responses:
    NotAuthorized:
      description: The authentication token was either missing or invalid and must be refreshed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Forbidden:
      description: The authentication token does not give sufficient permissions to perform this action.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    BadRequest:
      description: The request is malformed or contains incorrect information. See the response for more details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

    NotFound:
      description: The requested resource could not be found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
#----------------------------------------------------
# Data
    DataCollection:
      description: Represents a Blue Prism collection.
      type: object
      properties:
        rows:
          description: A collection of rows representing the data contained within the collection.
          type: array
          items:
            $ref: '#/components/schemas/DataRow'

    DataRow:
      description: A dictionary which represents a row of data from a Blue Prism collection.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DataValue'

    DataValue:
      description: Represents a single item of data in a Blue Prism format.
      type: object
      properties:
        valueType:
          description: The type of object contained in the value field
          type: string
          enum:
            - Binary
            - Collection
            - Date
            - Flag
            - Image
            - Number
            - Password
            - Text
            - Time
            - TimeSpan
        value:
          description: The value of the object
          oneOf:
            - type: string
              format: base64
              description: Used for Binary and Image data types
            - $ref: '#/components/schemas/DataCollection'
              description: Used for the Collection data type
            - type: string
              format: date
              description: Used for Date and Time data types
            - type: boolean
              description: Used for the Flag data type
            - type: number
              description: Used for the Number data type
            - type: string
              description: Used for Password and Text data types
            - type: string
              format: time
              description: Used for the TimeSpan data type

    #----------------------------------------------------
    # Schedules
    ScheduleSummary:
      description: Contains basic details of a session
      type: object
      properties:
        id:
          type: integer
          description: The ID of the schedule
        name:
          type: string
          description: The name of the schedule
        description:
          type: string
          description: The description of the schedule
        initialTaskId:
          type: integer
          description: The ID of the initial task this schedule executes  
        isRetired:
          type: boolean
          description: Whether the schedule is retired or not
        tasksCount:
          type: integer
          description: The number of tasks a schedule has
        intervalType:
          type: string
          description: The type of interval the schedule runs at
          enum:
            - Never
            - Once
            - Second
            - Minute
            - Hour
            - Day
            - Week
            - Month
            - Year
        timePeriod:
          type: integer
          description: The time period to apply to the intervalType on which the schedule will run. This cannot be applied to an intervalType of "Never" or "Once". For example, timePeriod "2" with intervalType "Day" will run the schedule every 2 days.
        startPoint:
          type: string
          description: The earliest time from which a schedule will run when the intervalType is set to "Day".
          format: date-time
        endPoint:
          type: string
          description: The latest time from which a schedule will run when the intervalType is set to "Day".
          format: date-time
        dayOfWeek:
          type: string
          nullable: true
          description: The day of the week that the schedule will run on when intervalType is "Week" or "Month".
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
        dayOfMonth:
          type: string
          description: The position of the specified day in the month on which a schedule will run. This should be combined with the dayOfWeek value. For example, the "Second Monday" in the month, or the "Third Friday" in the month.
          enum:
            - Last
            - None
            - First
            - Second
            - Third
            - Fourth
            - Fifth
        startDate:
          type: string
          nullable: true
          description: The earliest date the schedule will run.
          format: date-time
        endDate:
          type: string
          nullable: true
          description: The last date on which the schedule will run. If this value is null or missing then the schedule will run indefinitely.
          format: date-time
        calendarId:
          type: integer
          description: The ID of the calendar
        calendarName:
          type: string
          description: The name of the calendar
      example:
        id: 123
        name: Example schedule
        description: A schedule for API example purposes
        initialTaskId: 4
        isRetired: false
        tasksCount: 3
        intervalType: Hour
        timePeriod: 2
        startPoint: 0001-01-01T09:00:00+01:00
        endPoint: 0001-01-01T17:30:00+01:00
        dayOfWeek: Tuesday
        dayOfMonth: First     
        startDate: 2020-10-02T00:00:00Z
        endDate: 2020-10-03T02:20:00Z
        calendarId: 1
        calendarName: Example calendar name

    ScheduleItemsPage:
      description: Contains details of a page of schedules
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of schedule summary
          items:
            $ref: "#/components/schemas/ScheduleSummary"
      example:
        pagingToken: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          - id: 123
            name: Example schedule
            description: A schedule for API example purposes
            initialTaskId: 4
            isRetired: false
            tasksCount: 3
            intervalType: Hour
            timePeriod: 2
            startPoint: 0001-01-01T09:00:00+01:00
            endPoint: 0001-01-01T17:30:00+01:00
            dayOfWeek: Tuesday
            dayOfMonth: First     
            startDate: 2020-10-02T00:00:00Z
            endDate: 2020-10-03T02:20:00Z
            calendarId: 1
            calendarName: Example calendar name

    ScheduleLogItemsPage:
      description: Contains details of a page of schedule logs
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of schedule log summary
          items:
            $ref: "#/components/schemas/ScheduleLogSummary"

    ScheduleLogSummary:
      description: Contains basic details about a schedule log
      type: object
      properties:
        scheduleLogId:
          type: integer
          description: The ID of the schedule log
        startTime:
          type: string
          format: date-time
          description: The start time of the schedule
        endTime:
          type: string
          format: date-time
          description: The end time of the schedule
        status:
          type: string
          description: The current status of the schedule
          enum: [pending, running, terminated, completed, partExceptioned]
        serverName:
          type: string
          description: The name of the application server this schedule instance ran on
        scheduleId:
          type: integer
          description: The ID of the schedule
        scheduleName:
          type: string
          description: The name of the schedule

    #----------------------------------------------------
    # Sessions
    CreateSession:
      description: Contains details for creating a new session
      type: object
      properties:
        processId:
          type: string
          description: The ID of the process to run in the session
          format: uuid
        parameters:
          type: array
          description: Parameters to pass to the session
          items:
            $ref: '#/components/schemas/DataValue'

    UpdateSession:
      description: Contains details for updating a session
      type: object
      properties:
        parameters:
          type: array
          description: Parameters to pass to the session
          items:
            $ref: '#/components/schemas/DataValue'

    SessionDetails:
      description: Contains details of a session
      type: object
      properties:
        sessionId:
          type: string
          description: The ID of the session
        processId:
          type: string
          description: The ID of the process in the session
          format: uuid
        status:
          type: string
          description: The current status of the session
          enum: [pending, running, stopped, terminated]
        parameters:
          type: array
          description: Parameters to pass to the session
          items:
            $ref: '#/components/schemas/DataValue'

    SessionLogsPage:
      description: Contains details of a page of session logs
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of items
          items:
            $ref: '#/components/schemas/SessionLogSummary'
      example:
        pagingToken: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          - logId: 123
            stageName: Example stage
            stageType: Calculation
            result: Some result
            resourceStartTime: 2020-10-02T12:34:56+01:00
            hasParameters: true

    SessionLogParametersResponse:
      description: Contains input and output parameters of a session log
      type: object
      properties:
        inputs:
          $ref: '#/components/schemas/DataRow'
        outputs:
          $ref: '#/components/schemas/DataRow'
      example:
        inputs:
          parameter1:
            valueType: Text
            value: Example value
          parameter2:
            valueType: Number
            value: 123
        outputs:
          parameter1:
            valueType: Collection
            value:
              rows:
                - valueType: Number
                  value: 321
                - valueType: Date
                  value: 2020-10-02T12:34:56+01:00

    SessionLogSummary:
      description: Contains basic details of a session log
      type: object
      properties:
        logId:
          type: integer
          description: The Id of the session log
        stageName:
          type: string
          description: The name of the stage that created this log entry
        stageType:
          type: string
          description: The type of the stage that created this log entry
          enum:
            - Undefined
            - Action
            - Decision
            - Calculation
            - Data
            - Collection
            - Process
            - SubSheet
            - ProcessInfo
            - SubSheetInfo
            - Start
            - End
            - Anchor
            - Note
            - LoopStart
            - LoopEnd
            - Read
            - Write
            - Navigate
            - Code
            - ChoiceStart
            - ChoiceEnd
            - WaitStart
            - WaitEnd
            - Alert
            - Exception
            - Recover
            - Resume
            - Block
            - MultipleCalculation
            - Skill
        result:
          type: string
          description: The result of the stage
        resourceStartTime:
          type: string
          format: date-time
          description: The date and time that the resource started running
        hasParameters:
          type: boolean
          description: Determines whether session log has parameters
      example:
        logId: 123
        stageName: Example stage
        stageType: Calculation
        result: Some result
        resourceStartTime: 2020-10-02T12:34:56+01:00
        hasParameters: true

    SessionSummary:
      description: Contains basic details of a session
      type: object
      properties:
        sessionId:
          type: string
          description: The ID of the session
          format: uuid
        sessionNumber:
          type: integer
          description: The unique number of the session
        processId:
          type: string
          description: The ID of the process in the session
          format: uuid
        processName:
          type: string
          description: The name of the session's process
        resourceId:
          type: string
          description: The ID of the resource in the session
          format: uuid
        resourceName:
          type: string
          description: The name of the resource in the session
        username:
          type: string
          description: The username of the user that initialized the session
        status:
          type: string
          enum:
            - Pending
            - Running
            - Terminated
            - Stopped
            - Completed
            - Stopping
            - Warning
          description: The current state of the session
        startTime:
          type: string
          nullable: true
          description: The start time of the session
          format: date-time
        endTime:
          type: string
          nullable: true
          description: The end time of the session
          format: date-time
        latestStage:
          type: string
          description: The latest stage name of the session
        stageStarted:
          type: string
          nullable: true
          description: The stage start time of the session
          format: date-time
        exceptionMessage:
          type: string
          description: The exception message of the failed session
        terminationReason:
          type: string
          enum:
            - None
            - ProcessError
            - InternalError
          description: The reason for the termination of the session
        exceptionType:
          type: string
          description: type of the exception
      example:
        sessionId: 01234567-89ab-cdef-0123-456789abcdef
        sessionNumber: 123
        processId: 01234567-89ab-cdef-0123-456789abcdef
        processName: Example process
        resourceId: 01234567-89ab-cdef-0123-456789abcdef
        resourceName: Example resource
        username: Example user
        status: Running
        startTime: 2020-10-02T12:34:56+02:00
        endTime: 2020-10-03T13:36:21+02:00
        latestStage: Example stage
        stageStarted: 2020-10-02T12:35:30+02:00
        exceptionMessage: Exception message
        terminationReason: InternalError
        exceptionType: Exception type
    SessionItemsPage:
      description: Contains details of a page of sessions
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
          example: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          type: array
          description: A collection of session summary
          items:
            $ref: "#/components/schemas/SessionSummary"
          example:
            - sessionId: 01234567-89ab-cdef-0123-456789abcdef
              sessionNumber: 123
              processId: 01234567-89ab-cdef-0123-456789abcdef
              processName: Example process
              resourceId: 01234567-89ab-cdef-0123-456789abcdef
              resourceName: Example resource
              username: Example user
              status: Running
              startTime: 2020-10-02T12:34:56+02:00
              endTime: 2020-10-03T13:36:21+02:00
              latestStage: Example stage
              stageStarted: 2020-10-02T12:35:30+02:00
              exceptionMessage: Exception message
              terminationReason: InternalError
              exceptionType: Exception type

    #----------------------------------------------------
    # Work Queues

    WorkQueueSummary:
      description: Contains basic details of a work queue
      type: object
      properties:
        id:
          type: string
          description: The ID of the queue
          format: uuid
        name:
          type: string
          description: The name of the queue
          minLength: 1
        keyField:
          type: string
          description: The name of the column used as the queue's key
        status:
          $ref: '#/components/schemas/QueueStatus'
        isEncrypted:
          type: boolean
          description: True if the queue is encrypted; otherwise, false
        maxAttempts:
          type: integer
          description: The maximum number of retry attempts for items in the queue
        pendingItemCount:
          type: integer
          description: The number of items in the queue in a pending state
        completedItemCount:
          type: integer
          description: The number of items in the queue in a completed state
        lockedItemCount:
          type: integer
          description: The number of items in the queue in a locked state
        exceptionedItemCount:
          type: integer
          description: The number of items in the queue in an exceptioned state
        totalItemCount:
          type: integer
          description: The total number of items in the queue
        averageWorkTime:
          type: string
          description: The average amount of time an items spends being worked
          pattern: '^\d+:\d{2}:\d{2}$'
        totalCaseDuration:
          type: string
          description: The total amount of time items have been worked
          pattern: '^\d+:\d{2}:\d{2}$'
        groupName:
          type: string
          description: The name of the group in which the queue is located
        groupId:
          type: string
          description: Id of the group in which the queue is located
          format: uuid
      example:
        id: 01234567-89ab-cdef-0123-456789abcdef
        name: Example work queue
        keyField: Example field
        status: Running
        isEncrypted: false
        maxAttempts: 5
        pendingItemCount: 10
        completedItemCount: 75
        lockedItemCount: 1
        exceptionedItemCount: 3
        totalItemCount: 14
        averageWorkTime: 00:01:23
        totalCaseDuration: 06:12:53
        groupName: Example group
        groupId: fedcba98-7654-3210-fedc-ba9876543210

    WorkQueuesItemsPage:
      description: Contains details of a page of work queues
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of work queues
          items:
            $ref: '#/components/schemas/WorkQueueSummary'
      example:
        pagingToken: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          - id: 01234567-89ab-cdef-0123-456789abcdef
            name: Example work queue
            keyField: Example field
            status: Running
            isEncrypted: false
            maxAttempts: 5
            pendingItemCount: 10
            completedItemCount: 75
            lockedItemCount: 1
            exceptionedItemCount: 3
            totalItemCount: 14
            averageWorkTime: 00:01:23
            totalCaseDuration: 06:12:53
            groupName: Example group
            groupId: fedcba98-7654-3210-fedc-ba9876543210

    CreateWorkQueue:
      description: Contains details for creating a new work queue
      type: object
      properties:
        name:
          type: string
          description: The name of the queue to create
          minLength: 1
          maxLength: 255
        keyField:
          type: string
          description: The name of the column to be used as the queue's key
          minLength: 0
          maxLength: 255
        maxAttempts:
          type: integer
          description: The maximum number of retry attempts for items in the queue
          minimum: 1
          maximum: 999999
        status:
          $ref: '#/components/schemas/QueueStatus'
        encryptionKeyId:
          type: integer
          description: The ID of the encryption key to use for the queue. If no encryption is required then this field should be 0
      example:
        name: Example queue
        keyField: Example field
        maxAttempts: 3
        status: Running
        encryptionKeyId: 0

    UpdateWorkQueue:
      description: Contains details for updating a work queue's information
      type: object
      properties:
        name:
          type: string
          description: The name of the queue
          minLength: 1
        keyField:
          type: string
          description: The name of the column to be used as the queue's key
        maxAttempts:
          type: integer
          description: The maximum number of retry attempts for items in the queue
          minimum: 0
          default: 3
        status:
          $ref: '#/components/schemas/QueueStatus'
        encryptionKeyId:
          type: integer
          description: The ID of the encryption key to use for the queue. If no encryption is required then this field should be 0
      example:
        name: Example queue
        keyField: Example field
        maxAttempts: 5
        status: Paused
        encryptionKeyId: 0

    WorkQueueItemsPage:
      description: Contains details of a page of work queue items
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of work queue items
          items:
            $ref: '#/components/schemas/WorkQueueItemNoData'
      example:
        pagingToken: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          - id: 01234567-89ab-cdef-0123-456789abcdef
            priority: 3
            ident: 5112
            state: Pending
            keyValue: Example value
            status: Example status
            tags:
              - Example tag 1
              - Example tag 2
            attemptNumber: 1
            loadedDate: 2020-10-02T12:34:56+01:00
            deferredDate: 2020-10-02T12:34:56+01:00
            lockedDate: 0001-01-01T00:00:00Z
            completedDate: 0001-01-01T00:00:00Z
            exceptionedDate: 0001-01-01T00:00:00Z
            exceptionReason: Example reason
            lastUpdated: 2020-10-02T12:34:56+01:00
            workTimeInSeconds: 123
            attemptWorkTimeInSeconds: 56
            resource: Example resource

    WorkQueueItemNoData:
      description: Contains details of a work queue item but does not return the data contained in it.
      type: object
      properties:
        id:
          type: string
          description: The ID of the item
          format: uuid
        priority:
          type: integer
          description: The priority value assigned to the item
        ident:
          type: integer
          description: The database-specific intentity of the item
        state:
          type: string
          enum:
            - None
            - Pending
            - Locked
            - Deferred
            - Completed
            - Exceptioned
          description: The current state of the item
        keyValue:
          type: string
          description: The value of the key field
        status:
          type: string
          description: The user-supplied status value
        tags:
          type: array
          description: A collection of tags assigned to the item
          items:
            type: string
        attemptNumber:
          type: integer
          description: The number of the attempt next time this item is worked
          format: integer
          minimum: 1
        loadedDate:
          type: string
          description: The time and date that the item was loaded into the system
          format: date-time
        deferredDate:
          type: string
          description: The earliest time and date that this item is deferred until
          format: date-time
        lockedDate:
          type: string
          description: The time and date that this item was locked; or the minimum date-time value if not locked
          format: date-time
        completedDate:
          type: string
          description: The time and date that this item was completed; or the minimum date-time value if not completed
          format: date-time
        exceptionedDate:
          type: string
          description: The time and date that this item was marked as exceptioned; or the minimum date-time value if not exceptioned
          format: date-time
        lastUpdated:
          type: string
          description: The time and date that this item was last updated
          format: date-time
        workTimeInSeconds:
          type: integer
          description: The number of seconds that this item has been worked on so far (including any previous attempts)
          format: integer
        attemptWorkTimeInSeconds:
          type: integer
          description: The number of seconds that this item has been worked on so far in this attempt
          format: integer
        exceptionReason:
          type: string
          description: The error message which caused the exception, if any
        resource:
          type: string
          description: The name of the resource
      example:
        id: 01234567-89ab-cdef-0123-456789abcdef
        priority: 3
        ident: 5112
        state: Pending
        keyValue: Example value
        status: Example status
        tags:
          - Example tag 1
          - Example tag 2
        attemptNumber: 1
        loadedDate: 2020-10-02T12:34:56+01:00
        deferredDate: 2020-10-02T12:34:56+01:00
        lockedDate: 0001-01-01T00:00:00Z
        completedDate: 0001-01-01T00:00:00Z
        exceptionedDate: 0001-01-01T00:00:00Z
        lastUpdated: 2020-10-02T12:34:56+01:00
        workTimeInSeconds: 123
        attemptWorkTimeInSeconds: 56
        resource: Example resource

    WorkQueueItem:
      description: Contains details of a work queue item including the data.
      type: object
      properties:
        id:
          type: string
          description: The ID of the item
          format: uuid
        priority:
          type: integer
          description: The priority value assigned to the item
        ident:
          type: integer
          description: The database-specific intentity of the item
        state:
          type: string
          enum:
            - None
            - Pending
            - Locked
            - Deferred
            - Completed
            - Exceptioned
          description: The current state of the item
        keyValue:
          type: string
          description: The value of the key field
        status:
          type: string
          description: The user-supplied status value
        tags:
          type: array
          description: A collection of tags assigned to the item
          items:
            type: string
        attemptNumber:
          type: integer
          description: The number of the attempt next time this item is worked
          format: integer
          minimum: 1
        loadedDate:
          type: string
          description: The time and date that the item was loaded into the system
          format: date-time
        deferredDate:
          type: string
          description: The earliest time and date that this item is deferred until
          format: date-time
        lockedDate:
          type: string
          description: The time and date that this item was locked; or the minimum date-time value if not locked
          format: date-time
        completedDate:
          type: string
          description: The time and date that this item was completed; or the minimum date-time value if not completed
          format: date-time
        exceptionedDate:
          type: string
          description: The time and date that this item was marked as exceptioned; or the minimum date-time value if not exceptioned
          format: date-time
        exceptionReason:
          type: string
          description: The error message which caused the exception, if any
        lastUpdated:
          type: string
          description: The time and date that this item was last updated
          format: date-time
        workTimeInSeconds:
          type: integer
          description: The number of seconds that this item has been worked on so far (including any previous attempts)
          format: integer
        attemptWorkTimeInSeconds:
          type: integer
          description: The number of seconds that this item has been worked on so far in this attempt
          format: integer
        resource:
          type: string
          description: The name of the resource
        data:
          $ref: '#/components/schemas/DataCollection'
      example:
        id: 01234567-89ab-cdef-0123-456789abcdef
        priority: 3
        ident: 123
        state: Completed
        keyValue: Example value
        status: Example status
        tags:
          - Example tag 1
          - Example tag 2
        attemptNumber: 1
        loadedDate: 2020-10-02T12:34:56+01:00
        deferredDate: 2020-10-02T12:34:56+01:00
        lockedDate: 0001-01-01T00:00:00Z
        completedDate: 2020-10-02T13:00:00+01:00
        exceptionedDate: 0001-01-01T00:00:00Z
        exceptionReason: Example reason
        lastUpdated: 2020-10-02T13:00:00+01:00
        workTimeInSeconds: 123
        attemptWorkTimeInSeconds: 123
        resource: Example resource
        data:
          rows:
            - valueType: Number
              value: 321
            - valueType: Date
              value: 2020-10-02T12:34:56+01:00

    CreateWorkQueueItems:
      description: Contains details for creating a number of work queue items.
      type: array
      items:
        $ref: "#/components/schemas/CreateWorkQueueItem"

    CreateWorkQueueItem:
      description: Contains details for creating a work queue item in a queue.
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DataCollection'
        deferredDate:
          type: string
          description: The earliest time and date that this item is deferred until
          format: date-time
        priority:
          type: integer
          description: The priority value assigned to the item
          format: integer
        tags:
          type: array
          description: A collection of tags assigned to the item
          items:
            type: string
        status:
          type: string
          description: The user-supplied status value
      example:
        data:
          rows:
            - valueType: Number
              value: 321
            - valueType: Date
              value: 2020-10-02T12:34:56+01:00
        deferredDate: 2020-10-02T12:34:56+01:00
        priority: 3
        tags:
          - Example tag 1
          - Example tag 2
        status: Example status

    QueueStatus:
          description: The current status of the queue.
          type: string
          enum:
            - Running
            - Paused

    #----------------------------------------------------
    # Encryption Schemes

    EncryptionScheme:
      description: Contains details of an encryption scheme.
      type: object
      properties:
        name:
          type: string
          description: The name of the Encryption Scheme
        algorithm:
          type: string
          enum:
            - None
            - TripleDES
            - Rijndael256
            - AES256
          description: The name of the Encryption Algorithm
        keyLocation:
          type: string
          enum:
            - Database
            - Server
          description: Whether the key is stored in the Database or Server
        isAvailable:
          type: boolean
          description: Whether the Encryption Scheme is Available
      example:
        name: Example encryption scheme
        algorithm: AES256
        keyLocation: Server
        isAvailable: true

    #----------------------------------------------------
    # Schedules

    ScheduleSessionStart:
      description: A request to start a schedule at startTime
      type: object
      properties:
        startTime:
          type: string
          description: The date and time that the schedule should be run at
          format: date-time
          example: 2020-10-02T12:34:56+02:00

    ScheduleSessionStartResponse:
      description: A response to a start request containing the date-time when the schedule is expected to run.
      type: object
      properties:
        scheduledTime:
          type: string
          description: The date and time that the schedule has been scheduled to run at
          format: date-time
          example: 2020-10-02T12:34:56+02:00

    ScheduledTask:
      description: Contains details of a scheduled task
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            description: The Id of the scheduled task
          name:
            type: string
            description: the name of the scheduled task
          description:
            type: string
            description: The description of the scheduled task
          failFastOnError:
            type: boolean
          delayAfterEnd:
            type: integer
          onSuccessTaskId:
            type: integer
            description: The Id for the task to commence on the success of this task
          onSuccessTaskName:
            type: string
            description: The name of the task to commence on the success of this task
          onFailureTaskId:
            type: integer
            description: The Id for the task to commence on the failure of this task
          onFailureTaskName:
            type: string
            description: The name of the task to commence on the failure of this task

    UpdateSchedule:
      description: Contains details for updating a schedule
      type: object
      properties:
        isRetired:
          type: boolean
          description: A new value for schedule retirement status

    ScheduledSession:
      description: Contains details of a schedule session.
      type: array
      items:
        type: object
        properties:
          processName:
            type: string
            description: The particular process associated with that session
          resourceName:
            type: string
            description: The particular resource associated with that session

    #----------------------------------------------------
    # Resource

    Resource:
      description: Contains details of a runtime resource.
      type: object
      properties:
        id:
          type: string
          description: The ID of the resource
          format: uuid
        name:
          type: string
          description: The name of the resource
        poolId:
          type: string
          description: The ID of the pool to which the resource belongs
          format: uuid
        poolName:
          type: string
          description: The name of the pool to which the resource belongs
        groupId:
          type: string
          description: The ID of the group to which the resource or its pool belongs
          format: uuid
        groupName:
          type: string
          description: The name of the group to which the resource or its pool belongs
        attributes:
          type: array
          description: The attributes of the resource
          items:
            $ref: '#/components/schemas/ResourceAttribute'
        activeSessionCount:
          type: integer
          description: The number of active sessions on the resource
        warningSessionCount:
          type: integer
          description: The number of warning sessions on the resource
        pendingSessionCount:
          type: integer
          description: The number of pending sessions on the resource
        databaseStatus:
          type: string
          enum:
            - Unknown
            - Ready
            - Offline
            - Pending
          description: The reported status of the resource
        displayStatus:
          type: string
          enum:
            - Working
            - Idle
            - Warning
            - Offline
            - Missing
            - LoggedOut
            - Private
          description: The calculated state of the resource
      example:
        id: 01234567-89ab-cdef-0123-456789abcdef
        name: Example
        poolId: 99e23d41-e8ec-4ffe-89c9-93814d70d551
        poolName: Pool name
        groupId: fedcba98-7654-3210-fedc-ba9876543210
        groupName: Example group
        attributes:
          - None
        activeSessionCount: 5
        warningSessionCount: 1
        pendingSessionCount: 2
        databaseStatus: Ready
        displayStatus: Working

    ResourceAttribute:
      description: The attributes of the resource
      type: string
      enum:
        - None
        - Retired
        - Local
        - LoginAgent
        - Private
        - DefaultInstance

    UpdateResource:
      description: Contains details to update a runtime resource's attributes
      type: object
      properties:
        attributes:
          description: The attributes to assign to the resource
          type: array
          items:
            $ref: "#/components/schemas/ResourceAttribute"
      example:
        attributes:
          - Retired

    ResourceItemsPage:
      description: Contains details of a page of runtime resources
      type: object
      properties:
        pagingToken:
          type: string
          description: The token to be used in the next request to return the next collection of items
        items:
          type: array
          description: A collection of resources
          items:
            $ref: "#/components/schemas/Resource"
      example:
        pagingToken: U3VwZXIgc2VjcmV0IGRhdGEuIFNoaGho
        items:
          - id: 01234567-89ab-cdef-0123-456789abcdef
            name: Example
            poolId: 99e23d41-e8ec-4ffe-89c9-93814d70d551
            poolName: Pool name
            groupId: fedcba98-7654-3210-fedc-ba9876543210
            groupName: Example group
            attributes:
              - None
            activeSessionCount: 5
            warningSessionCount: 1
            pendingSessionCount: 2
            databaseStatus: Ready
            displayStatus: Working

    #----------------------------------------------------
    # Filters
    FullStringFilter:
      description: Used to filter strings. Can check for strings that start with, contain, equal, are greater than, are less than, or are between the given value(s).
      type: object
      anyOf:
        - $ref: '#/components/schemas/StringFilter'
        - $ref: '#/components/schemas/RangeOrEqualFilter'
      example:
        ctn: null
        strtw: null
        gte: null
        lte: null
        eq: null


    BasicStringFilter:
      description: Used to filter strings. Can check for strings that start with, equal, are greater than, are less than, or are between the given value(s).
      type: object
      anyOf:
        - $ref: '#/components/schemas/RangeOrEqualFilter'
        - $ref: '#/components/schemas/StartsWithStringFilter'
      example:
        strtw: null
        gte: null
        lte: null
        eq: null

    RangeOrEqualFilter:
      description: Used to filter values. Can check for values that are equal to, greater than or equal to, less than or equal to, or between the given value(s).
      type: object
      oneOf:
        - $ref: '#/components/schemas/RangeFilter'
        - $ref: '#/components/schemas/EqualsFilter'
      example:
        gte: null
        lte: null
        eq: null

    RangeFilter:
      description: Used to filter values. Can check for values that are greater than or equal to, less than or equal to, or between the given value(s).
      type: object
      anyOf:
        - $ref: '#/components/schemas/GreaterThanOrEqualToFilter'
        - $ref: '#/components/schemas/LessThanOrEqualToFilter'
      example:
        gte: null
        lte: null

    StringFilter:
      description: Used to filter strings. Can check for strings that start with, and/or contain the given value(s).
      type: object
      anyOf:
        - $ref: '#/components/schemas/ContainsStringFilter'
        - $ref: '#/components/schemas/StartsWithStringFilter'
      example:
        ctn: null
        strtw: null

    ContainsStringFilter:
      description: Used to filter strings. Can check for strings that contain the given value.
      type: object
      properties:
        ctn:
          type: string
          description: The value that the field should contain
      example:
        ctn: null

    StartsWithStringFilter:
      description: Used to filter strings. Can check for strings that start with the given value.
      type: object
      properties:
        strtw:
          type: string
          description: The value that the field should start with
      example:
        strtw: null

    GreaterThanOrEqualToFilter:
      description: Used to filter values. Can check for values that are greater than or equal to the given value.
      type: object
      properties:
        gte:
          type: object
          description: The value that the field should be greater than or equal to
      example:
        gte: null

    LessThanOrEqualToFilter:
      description: Used to filter values. Can check for values that are less than or equal to the given value.
      type: object
      properties:
        lte:
          type: object
          description: The value that the field should be less than or equal to
      example:
        lte: null

    EqualsFilter:
      description: Used to filter values. Can check for values that are equal to the given value.
      type: object
      properties:
        eq:
          type: object
          description: The value that the field should be equal to
      example:
        eq: null

    #----------------------------------------------------
    # Miscellaneous

    PatchRequest:
      description: A request containing a JSON Patch document. See PatchDocument for details.
      type: array
      items:
        $ref: "#/components/schemas/PatchDocument"

    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902. See http://jsonpatch.com/
      required:
        - "op"
        - "path"
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - "add"
            - "remove"
            - "replace"
            - "move"
            - "copy"
            - "test"
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.

    Error:
      description: A general error occurred. See errorMessage for details.
      type: object
      properties:
        errorMessage:
          description: A message describing the problem encountered.
          type: string

    ValidationError:
      description: An error occurred during validation. See the response body for details on the invalid field.
      type: object
      properties:
        invalidField:
          type: string
          description: The field which is invalid
        message:
          type: string
          description: A description of the error found with the field

    Identifier:
      description: A GUID resource ID.
      type: object
      properties:
        id:
          type: string
          description: The ID of the newly created resource
          format: uuid

    Identifiers:
      description: A collection of GUID resource IDs.
      type: object
      properties:
        ids:
          description: A collection of resource IDs.
          type: array
          items:
            type: string
            description: The IDs of the newly created items
            format: uuid


    #----------------------------------------------------
    # Dashboard
    ResourceUtilization:
      description: A model of resource utlization per hour.
      type: object
      properties:
        resourceId:
          type: string
          description: The ID of the resource.
          format: uuid
        digitalWorkerName:
          type: string
          description: The name of the resource.
        utilizationDate:
          type: string
          description: The date of the resource utilization.
          format: date-time
          example: 2020-10-02T12:34:56+02:00
        usages:
          type: array
          description: An array of 24 items representing each hour of a day. Each item contains the number of minutes of that hour that the resource was working.
          items:
            type: integer
            description: The number of minutes that the resource was working in this hour.

    ResourcesSummaryUtilization:
      description: A model of average resource utilization per day.
      type: object
      properties:
        dates:
          type: string
          description: The date of the resource utilization.
          format: date-time
          example: 2020-10-02T12:34:56+02:00
        usage:
          type: integer
          description: The average resource utilization per hour in minutes.
          
    WorkQueueComposition:
      description: A summary of work queue items.
      type: object
      properties:
        id:
          type: string
          description: The ID of the work queue
          format: uuid
        name:
          type: string
          description: Name of work queue
        completed:
          type: integer
          description: Count of completed items in work queue
        pending:
          type: integer
          description: Count of pending items in work queue
        deferred:
          type: integer
          description: Count of deferred items in work queue
        locked:
          type: integer
          description: Count of locked items in work queue
        exceptioned:
          type: integer
          description: Count of exceptioned items in work queue

  examples:
    PatchAddToArrayExample:
      summary: Add values to a collection.
      value:
        - op: add
          path: /someArrayProperty
          value: [item1, item2]
    PatchAddToObjectExample:
      summary: Add new property values to an object.
      value:
        - op: add
          path: /property
          value: propertyValue
    PatchCopyExample:
      summary: Copy a value from one property to another.
      value:
        - op: copy
          from: /sourceProperty
          path: /destinationProperty
    PatchMoveExample:
      summary: Move a value from one property to another.
      value:
        - op: move
          from: /sourceProperty
          path: /destinationProperty
    PatchReplaceExample:
      summary: Replace the value in a property.
      value:
        - op: replace
          path: /property
          value: propertyValue
    PatchRemoveExample:
      summary: Remove a property value.
      value:
        - op: remove
          path: /propertyToDeleteValueFrom

    DateTimeEqualsExample:
      value:
        eq: 2020-10-02T12:34:56+01:00
      summary: Search for a value equal to 2020-10-02 at 12:34:56 (GMT+1).
    DateTimeRangeExample:
      value:
        gte: 2020-10-02T12:34:56+01:00
        lte: 2020-11-02T12:34:56+01:00
      summary: Search for a value between 2020-10-02 at 12:34:56 (GMT+1) and 2020-11-02 at 12:34:56 (GMT+1) (inclusive).
    DateTimeGreaterThanExample:
      value:
        gte: 2020-10-02T12:34:56+01:00
      summary: Search for a value after or equal to 2020-10-02 at 12:34:56 (GMT+1).

    TimeEqualsExample:
      value:
        eq: 12:34:56
      summary: Search for a value equal to 12:34:56.
    TimeRangeExample:
      value:
        gte: 01:23:45
        lte: 12:34:56
      summary: Search for a value between 01:23:45 and 12:34:56 (inclusive)
    TimeLessThanExample:
      value:
        lte: 12:34:56
      summary: Search for a value less than or equal to 12:34:56

    IntegerEqualsExample:
      value:
        eq: 123
      summary: Search for a value equal to 123.
    IntegerRangeExample:
      value:
        gte: 123
        lte: 321
      summary: Search for a value between 123 and 321 inclusive.
    IntegerLessThanExample:
      value:
        lte: 123
      summary: Search for a value less than or equal to 123.

    StringEqualsExample:
      value:
        eq: Example
      summary: Search for a value equal to "Example".
    StringContainsExample:
      value:
        ctn: amp
      summary: Search a value containing "amp"
    StringStartsWithExample:
      value:
        strtw: Exa
      summary: Search a value starting with "Exa".
    StringRangeExample:
      value:
        gte: Ex
        lte: F
      summary: Search for a value alphanumerically between "Ex" and "F".
    StringGreaterThanExample:
      value:
        gte: Example
      summary: Search for a value alphanumerically after or equal to "Example".
