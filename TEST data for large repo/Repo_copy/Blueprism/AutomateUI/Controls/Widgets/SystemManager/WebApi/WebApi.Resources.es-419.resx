<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NewActionName_Template" xml:space="preserve">
    <value>Nueva acción {0}</value>
  </data>
  <data name="DeleteActionPrompt_Template" xml:space="preserve">
    <value>¿Está seguro de que desea eliminar la acción "{0}"?</value>
  </data>
  <data name="CouldNotCommitChanges_Template" xml:space="preserve">
    <value>No se pudieron confirmar los cambios en la selección actual: {0}</value>
  </data>
  <data name="ActionNameExistsMessage_Template" xml:space="preserve">
    <value>El nombre de esta acción ya existe en la API web. Tenga en cuenta que todos los caracteres no alfanuméricos se tratarán como guiones bajos al comparar nombres.</value>
  </data>
  <data name="HeadersNode" xml:space="preserve">
    <value>Encabezados</value>
  </data>
  <data name="ParametersNode" xml:space="preserve">
    <value>Parámetros</value>
  </data>
  <data name="ActionsNode" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="CommonHeadersNode" xml:space="preserve">
    <value>Encabezados comunes</value>
  </data>
  <data name="CommonParametersNode" xml:space="preserve">
    <value>Parámetros comunes</value>
  </data>
  <data name="NewWebApiName_Template" xml:space="preserve">
    <value>Nuevo servicio de API web {0}</value>
  </data>
  <data name="ErrorEmptyWebApiName" xml:space="preserve">
    <value>Los nombres de API web no pueden estar vacíos</value>
  </data>
  <data name="ErrorDuplicateWebApiName_Template" xml:space="preserve">
    <value>Ya existe una API web con el nombre "{0}"</value>
  </data>
  <data name="ErrorCreatingWebApi_Template" xml:space="preserve">
    <value>Se produjo un error de compilación de la API web: {0}</value>
  </data>
  <data name="ErrorDuplicateActionName_Template" xml:space="preserve">
    <value>Ya existe una acción con el nombre "{0}"</value>
  </data>
  <data name="ErrorInvalidUrl_Template" xml:space="preserve">
    <value>La URL proporcionada no era válida: {0}</value>
  </data>
  <data name="ErrorBaseUrlCannotBeEmpty" xml:space="preserve">
    <value>La URL de base de una API web no puede estar vacía</value>
  </data>
  <data name="UrlWhitespaceWarning" xml:space="preserve">
    <value>Advertencia: ha ingresado una URL que contiene espacios en blanco. Si esto fue involuntario, es posible que la API web no funcione según lo previsto; los espacios en blanco se codifican automáticamente en la URL.</value>
  </data>
  <data name="ErrorAuthUrlCannotBeEmpty" xml:space="preserve">
    <value>La URI de autorización no puede estar vacía</value>
  </data>
  <data name="ErrorInvalidBaseUrl_Template" xml:space="preserve">
    <value>La URL de base "{0}" no es válida: {1}</value>
  </data>
  <data name="ErrorValidatingWebApi" xml:space="preserve">
    <value>Se produjo un error de validación de la API web</value>
  </data>
  <data name="WindowTitle_Template" xml:space="preserve">
    <value>API web: {0}</value>
  </data>
  <data name="ErrorDuplicateParameter_Template" xml:space="preserve">
    <value>Se encontró un parámetro duplicado en la fila {0}. Tenga en cuenta que todos los caracteres no alfanuméricos se tratarán como guiones bajos al comparar nombres.</value>
  </data>
  <data name="ErrorDuplicateHeader_Template" xml:space="preserve">
    <value>Se encontró un encabezado duplicado en la fila {0}</value>
  </data>
  <data name="GuidanceDetailPanel" xml:space="preserve">
    <value>Ingrese un nombre exclusivo y la URL de base de la API web. La URL se usa en todas las solicitudes generadas por las acciones dentro de esta definición. La URL de base puede contener valores de parámetros comunes cuando se especifican en el formato [nombre del parámetro].</value>
  </data>
  <data name="GuidanceHttpHeaderPanel" xml:space="preserve">
    <value>Configure los encabezados que se usen en todas las acciones para esta definición de API. El valor del encabezado puede contener valores de parámetros comunes cuando se especifican en el formato [nombre del parámetro].</value>
  </data>
  <data name="GuidanceActionSpecificHttpHeaderPanel" xml:space="preserve">
    <value>Configure los encabezados, específicos de esta acción, que se usen además de los encabezados comunes para esta definición de API. El valor puede contener parámetros comunes y parámetros específicos de acciones cuando se especifican en el formato [nombre del parámetro]. Si un encabezado común o un encabezado específico de una acción tienen el mismo nombre, se usa el valor del encabezado específico de la acción cuando se invoca la API.</value>
  </data>
  <data name="GuidanceParametersPanel" xml:space="preserve">
    <value>Configure los parámetros disponibles para todas las acciones. Los valores de parámetros pueden usarse de manera dinámica en rutas de URL, valores de encabezado y cuerpos de solicitudes cuando se especifican en el formato [nombre del parámetro].</value>
  </data>
  <data name="GuidanceActionSpecificParametersPanel" xml:space="preserve">
    <value>Configure los parámetros, específicos de esta acción, que se encuentren disponibles además de los parámetros comunes para esta definición. Los valores de los parámetros pueden usarse de manera dinámica en rutas de URL, valores de encabezados y cuerpos de solicitudes cuando se especifican en el formato [nombre del parámetro]. Los nombres de los parámetros deben ser exclusivos dentro de la definición de la API.</value>
  </data>
  <data name="GuidanceActionPanel" xml:space="preserve">
    <value>Complete la configuración para definir la acción. Solo las acciones habilitadas pueden invocarse desde objetos y procesos. Los valores de parámetros comunes y parámetros específicos de acciones pueden usarse de manera dinámica en la ruta de la URL y el cuerpo de solicitudes cuando se especifican en el formato [nombre del parámetro].</value>
  </data>
  <data name="GuidanceActionSummary" xml:space="preserve">
    <value>Haga clic en Agregar acción para crear y configurar una nueva acción para esta definición de API. Las acciones están disponibles cuando el servicio de API web se incluye en un objeto o proceso.</value>
  </data>
  <data name="ErrorFailedToPopulateCredentialsList_Template" xml:space="preserve">
    <value>No se pudo completar la lista de credenciales: {0}</value>
  </data>
  <data name="CommonAuthenticationsNode" xml:space="preserve">
    <value>Autenticación común</value>
  </data>
  <data name="GuidanceBasicAuthenticationPanel" xml:space="preserve">
    <value>Use la autenticación básica de HTTP para enviar el nombre de usuario y la contraseña de la credencial seleccionada en las solicitudes de API. Seleccione "Exponer al proceso" para que la credencial esté disponible como entrada de acciones, incluida debajo del Nombre de parámetro ingresado.</value>
  </data>
  <data name="GuidanceEmptyAuthenticationPanel" xml:space="preserve">
    <value>Seleccione y configure un tipo de autenticación para las acciones en esta definición de API.</value>
  </data>
  <data name="ErrorEmptyAuthParameterName" xml:space="preserve">
    <value>El campo Nombre del parámetro no puede estar vacío cuando la acción Exponer al proceso esté configurada como verdadera.</value>
  </data>
  <data name="GuidanceBearerTokenAuthenticationPanel" xml:space="preserve">
    <value>Configure la autenticación de ficha del portador en los casos en que ya se haya recuperado y almacenado una ficha del portador en una credencial. Las fichas del portador se usan generalmente con la autenticación OAuth 2.0 y la autenticación JWT.</value>
  </data>
  <data name="GuidanceOAuth2AuthenticationPanel" xml:space="preserve">
    <value>Este tipo de autenticación usa un identificador de cliente y un secreto de cliente almacenado en una credencial para recuperar una ficha de acceso de OAuth 2.0 de un servidor de autorizaciones. La ficha de acceso luego se emplea para autenticar las solicitudes de API web.</value>
  </data>
  <data name="GuidanceOAuth2WithJwtAuthenticationPanel" xml:space="preserve">
    <value>Este tipo de autenticación genera una ficha del portador de JWT que se emplea para recuperar una ficha de acceso de OAuth 2.0 de un servidor de autorizaciones. La ficha de acceso luego se emplea para autenticar las solicitudes de API web.</value>
  </data>
  <data name="RequestNode" xml:space="preserve">
    <value>Solicitar</value>
  </data>
  <data name="ResponseNode" xml:space="preserve">
    <value>Respuesta</value>
  </data>
  <data name="GuidanceActionRequestPanel" xml:space="preserve">
    <value>Configure la solicitud para esta definición de API seleccionando un método y agregando una ruta de URL y un cuerpo de solicitud.</value>
  </data>
  <data name="GuidanceActionResponsePanel" xml:space="preserve">
    <value>Configure la respuesta de la acción de API creando parámetros de salida personalizados adicionales. Los valores del parámetro de salida derivan del cuerpo de la respuesta de HTTP y cada valor de parámetro de salida puede generarse definiendo una ruta hacia el valor dentro de una respuesta de JSON o proporcionando un código personalizado para calcular el valor.</value>
  </data>
  <data name="ErrorEmptyParameter" xml:space="preserve">
    <value>El nombre del parámetro no puede estar vacío</value>
  </data>
  <data name="ErrorInvalidPath" xml:space="preserve">
    <value>La ruta no es una ruta JSON válida.</value>
  </data>
  <data name="ErrorRootElementTokenMissingFromPath" xml:space="preserve">
    <value>Falta el elemento de raíz ($) del inicio de la ruta.</value>
  </data>
  <data name="EnterNewParameter" xml:space="preserve">
    <value>Ingresar parámetro nuevo</value>
  </data>
  <data name="RemoveParameter" xml:space="preserve">
    <value>Quitar parámetro</value>
  </data>
  <data name="ErrorInvalidDataType" xml:space="preserve">
    <value>El tipo de datos no es válido</value>
  </data>
  <data name="ErrorValidatingWebApiCustomOutputParameters_Template" xml:space="preserve">
    <value>Se produjo un error de validación de los parámetros de salida de la respuesta: {0}</value>
  </data>
  <data name="ErrorInvalidParameterName" xml:space="preserve">
    <value>El nombre del parámetro no puede contener un punto final</value>
  </data>
  <data name="GuidanceCustomAuthenticationPanel" xml:space="preserve">
    <value>Este tipo de autenticación permite que se establezca una autenticación personalizada utilizando las propiedades de la credencial seleccionada como parámetros al compilar la solicitud configurada. Se recomienda seleccionar una credencial general para este tipo de autenticación. Se puede obtener acceso al nombre de usuario mediante la sintaxis [Credential.Username], la contraseña con [Credential.Password] y cualquier propiedad de credencial especificada con [Credential.AdditionalProperties.&lt;propertyName&gt;].</value>
  </data>
  <data name="ErrorValidatingWebApiCustomParameters_Template" xml:space="preserve">
    <value>Se produjo un error de validación de los parámetros: {0}</value>
  </data>
  <data name="ErrorActionNameCannotBeEmpty" xml:space="preserve">
    <value>El campo Nombre de la acción no puede estar vacío.</value>
  </data>
  <data name="ErrorInvalidAuthenticationUrl_Template" xml:space="preserve">
    <value>La URL de autenticación "{0}" no es válida: {1}</value>
  </data>
  <data name="CommonCode_Unable_To_Populate_Field" xml:space="preserve">
    <value>No se puede completar el campo con la selección; no hay ninguna fila activa. Seleccione una fila colocando el cursor sobre ella antes de buscar un recurso externo.</value>
  </data>
  <data name="CommonCode" xml:space="preserve">
    <value>Código común</value>
  </data>
  <data name="GuidanceCommonCodePanel" xml:space="preserve">
    <value>Especifique el lenguaje, la configuración y las funciones compartidas empleadas por el código personalizado dentro de esta API web.</value>
  </data>
  <data name="CodeValidation_ErrorsFoundMessageTemplate" xml:space="preserve">
    <value>Error de compilación:
{0}</value>
    <comment>{0} placeholder used for error listing</comment>
  </data>
  <data name="CodeValidation_RequestContentCodeCompilerErrorTemplate" xml:space="preserve">
    <value>Acción "{0}" (línea {1}): {2}</value>
    <comment>{0} placeholder used for action name, {1} for line number, {2} for error text</comment>
  </data>
  <data name="CodeValidation_SharedCodeCompilerErrorTemplate" xml:space="preserve">
    <value>Código compartido (línea {0}): {1}</value>
    <comment>{0} placeholder used for line number, {1} for error text</comment>
  </data>
  <data name="CodeValidation_SuccessMessage" xml:space="preserve">
    <value>El código se compiló satisfactoriamente.</value>
  </data>
  <data name="CodeValidation_GeneralCodeCompilerErrorTemplate" xml:space="preserve">
    <value>Error general: {0}</value>
    <comment>{0} placeholder used for error text</comment>
  </data>
  <data name="ConfirmationText_RestoreDefaultConfigSettings" xml:space="preserve">
    <value>¿Está seguro de que desea restaurar la configuración predeterminada?</value>
  </data>
  <data name="ToolTip_AuthServerRequestTimeoutConfigSetting" xml:space="preserve">
    <value>El tiempo antes de la solicitud del servidor de autorización será el tiempo límite.</value>
  </data>
  <data name="ToolTip_HttpRequestTimeoutConfigSetting" xml:space="preserve">
    <value>El tiempo antes de la solicitud será el tiempo límite.</value>
  </data>
  <data name="ErrorInvalidParameterType" xml:space="preserve">
    <value>El tipo de parámetro no es válido</value>
  </data>
  <data name="ErrorInvalidRequestTimoutValue" xml:space="preserve">
    <value>Los valores del tiempo límite de la solicitud deben ser un número entero entre 1 y 100000.</value>
  </data>
  <data name="WarningLinkedToSkill" xml:space="preserve">
    <value>Esta API web está asociada con una habilidad.</value>
  </data>
  <data name="ExternalReferences" xml:space="preserve">
    <value>Referencias externas</value>
  </data>
  <data name="NamespaceImports" xml:space="preserve">
    <value>Importación de espacio de nombres</value>
  </data>
</root>