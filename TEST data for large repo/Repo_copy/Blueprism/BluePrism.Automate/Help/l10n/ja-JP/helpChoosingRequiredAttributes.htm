<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>アプリケーションモデラー</title>
	<script type="text/javascript" src="script/imagezoom.js"></script>
</head>

<body class="slick">
	<div class="header">
		<h1 class="pagetitle">アプリケーションモデラー</h1>
		<h2>属性を選択する</h2>
	</div>

	<h3 id="intro">はじめに</h3>

	<p>以下では、各属性を選択することの長所と短所について説明します。各属性の詳細な説明については、<a href="attributes.htm">Windowsスパイ属性のリスト</a>、<a href="attributes-aa.htm">アクティブアクセシビリティ属性のリスト</a>、<a href="attributes-uia.html">UIオートメーション属性のリスト</a>を参照してください。
	</p>

	<h3 id="spy-attributes">Windowsスパイ属性</h3>
	<dl class="listplease bulleted">
		
		<dt><a href="attributes.htm#windowtext">WindowText</a></dt>
		<dd>
 通常はウィンドウテキストは非常に便利です。なぜなら、多くの場合、一意であるからです（たとえば、「OK」というテキストを持つボタンはトップレベルウィンドウごとに1つだけです）。ただし、次のような状況でこの属性を使用すると、逆効果になる可能性があります。
		</dd>
		<dd>
			<ul>
				<li>要素に書き込む場合。要素のテキストを変更する場合、その要素のデフォルトテキストを使用して要素を識別することはできません（<a href="frmIntegrationAssistant.htm#dynamic">動的</a>にしない限り）。</li>

				<li>テキストが予測不能に変化する。ただし、テキストが予測どおりに変化する場合は、<a href="frmIntegrationAssistant.htm#dynamic">動的</a>にできます。
				</li>
			</ul>
		</dd>
		
		<dt><a href="attributes.htm#classname">ClassName</a></dt>
		<dd>
 これはめったに変更されないため、通常は非常に便利です。
 一部の特殊なアプリケーションでは、ある要素が、同じように見えるものの実装が異なる別の要素と交換され、その結果、クラス名が事実上変更されることがあります。
		</dd>

		<dt><a href="attributes.htm#ordinal">Ordinal</a></dt>
		<dd>
 通常は非常に便利ですが、次の点に注意してください。
		</dd>
		<dd>
			<ul>
				<li>アプリケーションにマルチスレッドユーザーインターフェイスまたはマルチドキュメントインターフェイス（MDI）がある場合、序数はアプリケーションが実行されるたびに変化する場合があります。</li>

				<li>
					<p>通常は存在するものの、特殊な環境（たとえばアカウントシステムで非アクティブなアカウントに［更新］ボタンが存在しない）では存在しないその他の要素がある場合、これらの要素の欠如がこのような特殊な環境の序数に影響を与える可能性があります。</p>

					<p>このため、ビジネスオブジェクトは、ほとんどの場合は正常に機能するものの、そのような「特殊な」画面が表示されるたびに失敗します。</p>
				</li>
			</ul>
		</li>

		<dt><a href="attributes.htm#x">X、Y、Width、Height</a></dt>
		<dd>
 X、Y、Width、Heightのいずれかをできる限りこれらの属性を使用しないことをお勧めします。これらの属性は画面の解像度、親フォームのサイズ、親フォームが最大化されているかどうかなどによって変化する場合があるためです。
		</dd>

		<dt><a href="attributes.htm#visible">Visible</a></dt>
		<dd>
 通常は、待機クエリに関連する要素で役立ちます。たとえば、一部のアプリケーションでは、読み込みが完了するまで［更新］ボタンが非表示になります。Visibilityの値がTrueに設定されている要素を待機することで、ターゲットアプリケーションの「準備完了」状態を検出できます。
		</dd>
		
		<dt id="enabled"><a href="attributes.htm#enabled">Enabled</a></dt>
		<dd>
 Visibleと同様に、待機クエリで役立ちます。一部のアプリケーションでは、ボタンクリックイベントを処理する準備ができるまでボタンを無効にします。
		</dd>
		<dd>
 アクティブアクセシビリティの<a href="#unavailable">Unavailable</a>属性も参照してください。</p>
		</dd>

		<dt><a href="attributes.htm#active">Active</a></dt>
		<dd>
 モーダルエラーダイアログを表示するアプリケーションのエラー状態を検出する場合に役立ちます。このようなダイアログは、Active属性の値がTrueになります。メインのアプリケーションウィンドウが読み込みを完了するまで待機する場合にも役立ちます。
		</dd>

		<dt><a href="attributes.htm#childcount">ChildCount</a></dt>
		<dd>
 多くの場合は信頼できる属性の識別子ですが、ターゲットアプリケーションのステータスに応じて要素が現れたり消えたりするような環境（Visible属性の説明を参照）では注意が必要です。
		</dd>
	</dl>
	
	
	<h3 id="aa-attributes">アクティブアクセシビリティの属性</h3>
	<dl class="listplease bulleted">
		<dt id="unavailable">
			<a href="attributes-aa.htm#unavailable">Unavailable</a>
		</dt>
		<dd>
 Windowsの<a href="#enabled">Enabled</a>属性と混同されることがよくあります。要素がアクティブアクセシビリティスパイツールでスパイされている場合、一般的に、この属性はWindowsの<a href="#enabled">Enabled</a>属性よりも信頼できます。これは、アクティブアクセシビリティスパイツールは、Windowsスパイよりも一般に粒度が細かいためです。たとえば、アクティブアクセシビリティスパイツールでは、個々のツールバーボタンを識別できますが、Windowsスパイツールでは、ツールバー自体を識別することしかできません。この場合、Enabled属性は親ツールバーを参照し、Unavailable属性はスパイされた個々のボタンを参照します。
		</dd>
	</dl>
</body>
</html>
