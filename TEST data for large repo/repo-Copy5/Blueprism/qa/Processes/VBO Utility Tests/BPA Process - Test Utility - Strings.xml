<process name="Test Utility - Strings" version="1.0" bpversion="6.6.0.15260" narrative="Test the CSV parsing functionality of Utility Strings" byrefcollection="true" preferredid="5ae86bff-83c5-4acb-b947-ef0261eb6465">
  <view>
    <camerax>0</camerax>
    <cameray>328</cameray>
    <zoom version="2">1.25</zoom>
  </view>
  <preconditions />
  <endpoint narrative="" />
  <stage stageid="2c469e11-2c5f-47ab-9953-4760b27e5bd9" name="Start" type="Start">
    <display x="15" y="-90" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>eb0bd223-3549-43f8-93a4-242a53917cf3</onsuccess>
  </stage>
  <stage stageid="84502f27-eb68-4771-8054-a2a46dcd917e" name="End" type="End">
    <display x="15" y="1515" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="409234b6-ae6d-4dcf-b9e6-746c0e278764" name="Stage1" type="ProcessInfo">
    <display x="-195" y="-105" w="150" h="90" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
  </stage>
  <stage stageid="eb0bd223-3549-43f8-93a4-242a53917cf3" name="Generate CSV" type="Calculation">
    <display x="15" y="-15" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>fad8f5e0-7e95-41ed-b086-c66d213006dc</onsuccess>
    <calculation expression="&quot;a,b,c,d,e,f,g&quot; &amp; Chr(13) &amp; &quot;1,2,3,4,5,6,7&quot;" stage="CSV" />
  </stage>
  <stage stageid="3bb5b2ce-76f5-4a22-a182-1e2f2d85d33c" name="CSV" type="Data">
    <display x="-210" y="-15" w="120" h="30" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>text</datatype>
    <initialvalue />
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="fad8f5e0-7e95-41ed-b086-c66d213006dc" name="Get CSV as Collection" type="Action">
    <display x="15" y="30" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="True" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="[Schema]" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>8e26777a-81bf-4012-ba4e-faa864e71056</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="6dd61bff-699f-4311-920a-f4a1ff3084c2" name="Test1" type="Block">
    <display x="-45" y="-45" w="255" h="180" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="eacc267b-a360-488f-acc2-8926802dfbf7" name="Generate CSV" type="Calculation">
    <display x="15" y="195" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>9d939a4f-d043-4762-b365-94fc5dbb5c4d</onsuccess>
    <calculation expression="&quot;a,b,c,d,e,f,g&quot; &amp; Chr(13) &amp; &quot;1,2,3,4,5,6,7&quot;" stage="CSV" />
  </stage>
  <stage stageid="9d939a4f-d043-4762-b365-94fc5dbb5c4d" name="Get CSV as Collection" type="Action">
    <display x="15" y="240" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="True" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>d29b821e-6d1b-4214-aab5-a4c5841b7a77</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="a29d05b4-265c-44ac-bad9-baef9ad11933" name="Generate CSV" type="Calculation">
    <display x="15" y="390" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>b00e6ced-fea4-4113-a870-0c6b6d53e818</onsuccess>
    <calculation expression="&quot;1,2,3,4,5,6,7&quot;" stage="CSV" />
  </stage>
  <stage stageid="b00e6ced-fea4-4113-a870-0c6b6d53e818" name="Get CSV as Collection" type="Action">
    <display x="15" y="435" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>187e9aa8-c9e6-44bb-ae24-b33bb5e17cde</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="3973532d-604a-432f-9dd0-e0694dbccc2b" name="Test2" type="Block">
    <display x="-45" y="165" w="255" h="165" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="3407e39d-282f-4cf3-9f12-473978f005e8" name="Test3" type="Block">
    <display x="-45" y="360" w="255" h="165" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="8149dbfe-7c6f-4585-aae6-2ab7eb31acb7" name="Schema" type="Collection">
    <display x="90" y="-15" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
    <collectioninfo>
      <field name="Column Name" type="text" />
    </collectioninfo>
    <initialvalue>
      <row>
        <field name="Column Name" type="text" value="a" />
      </row>
      <row>
        <field name="Column Name" type="text" value="b" />
      </row>
      <row>
        <field name="Column Name" type="text" value="c" />
      </row>
      <row>
        <field name="Column Name" type="text" value="d" />
      </row>
      <row>
        <field name="Column Name" type="text" value="e" />
      </row>
      <row>
        <field name="Column Name" type="text" value="f" />
      </row>
      <row>
        <field name="Column Name" type="text" value="g" />
      </row>
    </initialvalue>
  </stage>
  <stage stageid="e3e45e2e-1ddf-4bf5-b368-f2a0e6c4d7be" name="Output Collection" type="Collection">
    <display x="-210" y="15" w="120" h="30" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
  <stage stageid="8e26777a-81bf-4012-ba4e-faa864e71056" name="Check Collection" type="Decision">
    <display x="15" y="90" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.a] = &quot;1&quot; AND&#xA;[Output Collection.b] = &quot;2&quot; AND&#xA;[Output Collection.c] = &quot;3&quot; AND&#xA;[Output Collection.d] = &quot;4&quot; AND&#xA;[Output Collection.e] = &quot;5&quot; AND&#xA;[Output Collection.f] = &quot;6&quot; AND&#xA;[Output Collection.g] = &quot;7&quot;" />
    <ontrue>eacc267b-a360-488f-acc2-8926802dfbf7</ontrue>
    <onfalse>d16c693a-3ee7-4beb-841f-6a730ce555fa</onfalse>
  </stage>
  <stage stageid="d16c693a-3ee7-4beb-841f-6a730ce555fa" name="Exception1" type="Exception">
    <display x="270" y="90" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 1 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="d29b821e-6d1b-4214-aab5-a4c5841b7a77" name="Check Collection" type="Decision">
    <display x="15" y="285" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.a] = &quot;1&quot; AND&#xA;[Output Collection.b] = &quot;2&quot; AND&#xA;[Output Collection.c] = &quot;3&quot; AND&#xA;[Output Collection.d] = &quot;4&quot; AND&#xA;[Output Collection.e] = &quot;5&quot; AND&#xA;[Output Collection.f] = &quot;6&quot; AND&#xA;[Output Collection.g] = &quot;7&quot;" />
    <ontrue>a29d05b4-265c-44ac-bad9-baef9ad11933</ontrue>
    <onfalse>cd815e72-ffb5-4d1b-a010-f28f634ef70c</onfalse>
  </stage>
  <stage stageid="cd815e72-ffb5-4d1b-a010-f28f634ef70c" name="Exception1" type="Exception">
    <display x="270" y="285" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 2 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="187e9aa8-c9e6-44bb-ae24-b33bb5e17cde" name="Check Collection" type="Decision">
    <display x="15" y="480" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.Column 0] = &quot;1&quot; AND&#xA;[Output Collection.Column 1] = &quot;2&quot; AND&#xA;[Output Collection.Column 2] = &quot;3&quot; AND&#xA;[Output Collection.Column 3] = &quot;4&quot; AND&#xA;[Output Collection.Column 4] = &quot;5&quot; AND&#xA;[Output Collection.Column 5] = &quot;6&quot; AND&#xA;[Output Collection.Column 6] = &quot;7&quot;" />
    <ontrue>882bb323-8273-4452-8a6b-6e4563ca4a9f</ontrue>
    <onfalse>3f20044e-a9db-411d-87cd-1069566af302</onfalse>
  </stage>
  <stage stageid="3f20044e-a9db-411d-87cd-1069566af302" name="Exception1" type="Exception">
    <display x="270" y="480" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 3 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="882bb323-8273-4452-8a6b-6e4563ca4a9f" name="Generate CSV" type="Calculation">
    <display x="15" y="585" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>f485466d-addc-45fe-95cd-9c3f23db2e03</onsuccess>
    <calculation expression="&quot;2990,THFT,12319999,08252017,THFT,32.00000,0.00000,32.00000&quot; &amp; Chr(13) &amp; &#xA;&quot;2990,THFT,12319999,08252017,THFT,32.00000,0.00000,32.00000&quot; " stage="CSV" />
  </stage>
  <stage stageid="f485466d-addc-45fe-95cd-9c3f23db2e03" name="Get CSV as Collection" type="Action">
    <display x="15" y="630" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="[Schema2]" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>0de927a4-6836-476c-9bcd-4999a318757c</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="1a6cd54d-96c2-41a2-87cd-261d2a0118b3" name="Test4" type="Block">
    <display x="-45" y="555" w="255" h="240" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="a2b0681f-923b-4555-a844-63218227f734" name="Check Collection" type="Decision">
    <display x="15" y="720" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.PERNR] = &quot;2990&quot; AND&#xA;[Output Collection.SUBTY] = &quot;THFT&quot; AND&#xA;[Output Collection.ENDDA] = &quot;12319999&quot; AND&#xA;[Output Collection.BEGDA] = &quot;08252017&quot; AND&#xA;[Output Collection.BPLAN] = &quot;THFT&quot; AND&#xA;[Output Collection.EEPCT] = &quot;32.00000&quot; AND&#xA;[Output Collection.PTPCT] = &quot;0.00000&quot; AND&#xA;[Output Collection.BCPCT] = &quot;32.00000&quot;" />
    <ontrue>9632c016-1e8b-4cb9-9507-b7043738501a</ontrue>
    <onfalse>b365f9cc-0999-4f9c-8488-4fd59c7ad0d6</onfalse>
  </stage>
  <stage stageid="b365f9cc-0999-4f9c-8488-4fd59c7ad0d6" name="Exception1" type="Exception">
    <display x="270" y="720" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 4 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="b0fd8585-50be-426b-b4af-3ac799b0d67a" name="Schema2" type="Collection">
    <display x="135" y="615" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
    <collectioninfo>
      <field name="Column Name" type="text" />
    </collectioninfo>
    <initialvalue>
      <row>
        <field name="Column Name" type="text" value="PERNR" />
      </row>
      <row>
        <field name="Column Name" type="text" value="SUBTY" />
      </row>
      <row>
        <field name="Column Name" type="text" value="ENDDA" />
      </row>
      <row>
        <field name="Column Name" type="text" value="BEGDA" />
      </row>
      <row>
        <field name="Column Name" type="text" value="BPLAN" />
      </row>
      <row>
        <field name="Column Name" type="text" value="EEPCT" />
      </row>
      <row>
        <field name="Column Name" type="text" value="PTPCT" />
      </row>
      <row>
        <field name="Column Name" type="text" value="BCPCT" />
      </row>
    </initialvalue>
  </stage>
  <stage stageid="0de927a4-6836-476c-9bcd-4999a318757c" name="Loop Start1" type="LoopStart">
    <display x="15" y="675" />
    <onsuccess>a2b0681f-923b-4555-a844-63218227f734</onsuccess>
    <groupid>c38a9731-489d-46f6-a555-587b30421868</groupid>
    <looptype>ForEach</looptype>
    <loopdata>Output Collection</loopdata>
  </stage>
  <stage stageid="9632c016-1e8b-4cb9-9507-b7043738501a" name="Loop End1" type="LoopEnd">
    <display x="15" y="765" />
    <onsuccess>bd0f15d5-958d-4fa4-aeab-de8aed1743b7</onsuccess>
    <groupid>c38a9731-489d-46f6-a555-587b30421868</groupid>
  </stage>
  <stage stageid="bd0f15d5-958d-4fa4-aeab-de8aed1743b7" name="Generate CSV" type="Calculation">
    <display x="15" y="855" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>c17b7f50-ae6a-488f-8e9c-13889a8cbb1d</onsuccess>
    <calculation expression="&quot;3,This is a test string with double &quot;&quot;double quotes&quot;&quot;. It is parsed correctly&quot;" stage="CSV" />
  </stage>
  <stage stageid="c17b7f50-ae6a-488f-8e9c-13889a8cbb1d" name="Get CSV as Collection" type="Action">
    <display x="15" y="900" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>3cc5b5c3-e488-4055-8521-31fc960ba9dc</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="e196916e-e8e3-486f-af19-2e74fa900d4c" name="Test5" type="Block">
    <display x="-45" y="825" w="255" h="165" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="3cc5b5c3-e488-4055-8521-31fc960ba9dc" name="Check Collection" type="Decision">
    <display x="15" y="945" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.Column 0] = &quot;3&quot; AND&#xA;[Output Collection.Column 1] = &quot;This is a test string with double &quot;&quot;double quotes&quot;&quot;. It is parsed correctly&quot;" />
    <ontrue>8efe0cff-a5c6-4710-8c31-b46fc1442ba8</ontrue>
    <onfalse>4c98f599-e289-4081-9ba1-b2e9f3aab397</onfalse>
  </stage>
  <stage stageid="4c98f599-e289-4081-9ba1-b2e9f3aab397" name="Exception1" type="Exception">
    <display x="270" y="945" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 5 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="8efe0cff-a5c6-4710-8c31-b46fc1442ba8" name="Generate CSV" type="Calculation">
    <display x="15" y="1050" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <onsuccess>ec78be99-55cf-49c7-b7d0-f68574b57dba</onsuccess>
    <calculation expression="&quot;Column 0, Column 1,,Column 3&quot;" stage="CSV" />
  </stage>
  <stage stageid="ec78be99-55cf-49c7-b7d0-f68574b57dba" name="Get CSV as Collection" type="Action">
    <display x="15" y="1095" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="[CSV]" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>26cb4d7c-5b57-44d0-8f64-af6f319b0406</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="225029bd-8d39-4e66-8d88-109f1407466c" name="Test6" type="Block">
    <display x="-45" y="1020" w="255" h="165" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="26cb4d7c-5b57-44d0-8f64-af6f319b0406" name="Check Collection" type="Decision">
    <display x="15" y="1140" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection.Column 0] = &quot;Column 0&quot; AND&#xA;[Output Collection.Column 1] = &quot;Column 1&quot; AND &#xA;[Output Collection.Column 2] = &quot;&quot; AND&#xA;[Output Collection.Column 3] = &quot;Column 3&quot;" />
    <ontrue>a166b582-a4d1-4071-b393-9ea86c11f39c</ontrue>
    <onfalse>a9d1ed2f-84a3-45e9-b40a-c3b184040bb4</onfalse>
  </stage>
  <stage stageid="a9d1ed2f-84a3-45e9-b40a-c3b184040bb4" name="Exception1" type="Exception">
    <display x="270" y="1140" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <exception type="" detail="&quot;Test 6 failed - Collection is not as expected&quot; " />
  </stage>
  <stage stageid="8d025c14-4a03-4a41-87ad-c5cc79ec69de" name="Test7" type="Block">
    <narrative>Blank CSV name returns balnk collection</narrative>
    <display x="-45" y="1215" w="255" h="120" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="a166b582-a4d1-4071-b393-9ea86c11f39c" name="Get CSV as Collection" type="Action">
    <display x="15" y="1245" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>94ed44cd-b3bb-44a5-81cc-e2a2e76cecab</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="94ed44cd-b3bb-44a5-81cc-e2a2e76cecab" name="Check Collection" type="Decision">
    <display x="15" y="1290" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection] = [Blank Collection]" />
    <ontrue>7a7a5a47-d51f-41b6-8359-993584f681e5</ontrue>
    <onfalse>1da3643a-1357-4a3a-9c20-3267a7496914</onfalse>
  </stage>
  <stage stageid="6539f541-0ccf-459d-991a-da8a33d8db44" name="Test7" type="Block">
    <narrative>Blank CSV name returns balnk collection</narrative>
    <display x="-45" y="1350" w="255" h="105" />
    <font family="Tahoma" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="7a7a5a47-d51f-41b6-8359-993584f681e5" name="Get CSV as Collection" type="Action">
    <display x="15" y="1380" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <inputs>
      <input type="text" name="CSV" narrative="The CSV to be converted into a collection" expr="&quot;&quot;" />
      <input type="flag" name="First Row Is Header" narrative="Indicates whether the first row of the CSV file should be treated as headers" expr="False" />
      <input type="collection" name="Schema" narrative="Optional. A collection of column names. If left blank the column names will be taken from the first row. " expr="" />
    </inputs>
    <outputs>
      <output type="collection" name="Output Collection" narrative="The collection converted from CSV" stage="Output Collection" />
    </outputs>
    <onsuccess>20be3ecb-b3bd-4ebb-bd9b-1535cb0ab6ba</onsuccess>
    <resource object="Utility - Strings" action="Get CSV As Collection" />
  </stage>
  <stage stageid="20be3ecb-b3bd-4ebb-bd9b-1535cb0ab6ba" name="Check Collection" type="Decision">
    <display x="15" y="1425" />
    <font family="Tahoma" size="10" style="Regular" color="000000" />
    <decision expression="[Output Collection] = [Blank Collection]" />
    <ontrue>84502f27-eb68-4771-8054-a2a46dcd917e</ontrue>
    <onfalse>e8822ede-802a-410d-b04f-879a9df4f043</onfalse>
  </stage>
  <stage stageid="cb1da0d1-0176-4f58-83e0-d42d7d098080" name="Data" type="Block">
    <loginhibit onsuccess="true" />
    <display x="-270" y="-45" w="150" h="135" />
    <font family="Segoe UI" size="10" style="Regular" color="7FB2E5" />
  </stage>
  <stage stageid="1da3643a-1357-4a3a-9c20-3267a7496914" name="Exception2" type="Exception">
    <display x="270" y="1290" />
    <exception localized="yes" type="Data Error" detail="&quot;Collection expected to be empty&quot;" />
  </stage>
  <stage stageid="e8822ede-802a-410d-b04f-879a9df4f043" name="Exception3" type="Exception">
    <display x="270" y="1425" />
    <exception localized="yes" type="Data Error" detail="&quot;Collection expected to be empty&quot;" />
  </stage>
  <stage stageid="ffa14edd-4898-4949-92cf-332dbda73637" name="Blank Collection" type="Collection">
    <display x="-210" y="45" w="120" h="30" />
    <datatype>collection</datatype>
    <private />
    <alwaysinit />
  </stage>
</process>