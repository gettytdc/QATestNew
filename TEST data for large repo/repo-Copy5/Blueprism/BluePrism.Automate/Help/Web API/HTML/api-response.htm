<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-gb" xml:lang="en-gb" data-mc-search-type="Stem" data-mc-help-system-file-name="Blue Prism Help.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Extract response data with JSONPath</title>
        <link type="text/css" href="../../AutomateHelp.css" rel="stylesheet" />
		<link href="../../TableStyles/bp_footer_tablestyle.css" rel="stylesheet" />
		<link href="../../TableStyles/bp-table-column-header.css" rel="stylesheet" />
        <link href="../../TableStyles/bp-table-row-header.css" rel="stylesheet" />
    </head>
    <body>
        <h1 class="pagebreak"><a name="Extracti"></a>Extract response data with JSONPath</h1>
        <p>When a response body content is JSON,  JSONPath can be used to extract specific elements of the JSON into output parameters. The output parameters have a specified Blue Prism data type, and the object found using the JSONPath is converted to that data type. This example demonstrates how to extract data from a JSON HTTP&#160;response, storing it in stages in a process. </p>
        <h2>Configure the API&#160;definition response</h2>
        <p>An API definition returns the following JSON response:</p>
        <p><a href="../Images/api-response-eg.png"><img data-mc-width="604" data-mc-height="89" src="../Images/api-response-eg_thumb_0_128.png" tabindex="" /></a>
        </p>
        <p>To extract this data, select the Response for the required action in the API&#160;definition. Add a parameter for each data item selecting the appropriate data type and method.</p>
        <p><a href="../Images/api-response-eg-parameters.png"><img data-mc-width="682" data-mc-height="109" src="../Images/api-response-eg-parameters_thumb_0_128.png" tabindex="" /></a>
        </p>
        <h2>View the response in Process Studio</h2>
        <p>In Process Studio, select the Outputs for the process that uses the Web API&#160;action for which the response was configured. Outputs have been added corresponding to the parameter name added to the response and the related data items have been created in the process to store each parameter.</p>
        <p><a href="../Images/api-response-eg-outputs.png"><img data-mc-width="802" data-mc-height="466" src="../Images/api-response-eg-outputs_thumb_0_128.png" tabindex="" /></a>
        </p>
        <p>When the process is run, data from the response is stored in the appropriate stage allowing it to be easily used elsewhere in the process.</p>
        <p><b>If the JSONPath defined for the output parameter does not find a match in an HTTP response, the output parameter will return an empty data item/collection.</b></p>
        <p><b>If the JSONPath defined for the output parameter finds multiple possible matches in an HTTP response, an exception will be thrown in the process.</b></p>
        <p>
            <img src="../Images/api-response-eg-stages.png" />
        </p>
        <h2 data-mc-conditions="Default.ScreenOnly">JSONPath syntax</h2>
        <p data-mc-conditions="Default.ScreenOnly">Blue Prism supports the following syntax for JSONPath expressions:</p>
        <table class="TableStyle-bp-table-row-header" style="mc-table-style: url('../../TableStyles/bp-table-row-header.css');margin-left: 0;margin-right: auto;" cellspacing="0">
            <col class="TableStyle-bp-table-row-header-Column-Column1" data-mc-conditions="Default.ScreenOnly" />
            <col class="TableStyle-bp-table-row-header-Column-Column1" data-mc-conditions="Default.ScreenOnly" />
            <col class="TableStyle-bp-table-row-header-Column-Column1" data-mc-conditions="Default.ScreenOnly" />
            <thead>
                <tr class="TableStyle-bp-table-row-header-Head-Header1">
                    <th class="TableStyle-bp-table-row-header-HeadE-Column1-Header1">
                        <p data-mc-conditions="Default.ScreenOnly">JSONPath</p>
                    </th>
                    <th class="TableStyle-bp-table-row-header-HeadE-Column1-Header1">
                        <p data-mc-conditions="Default.ScreenOnly">Description</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">$</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">The root object or element.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">@</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">The current object or element.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">. or []</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Child operator.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">..</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Recursive descent.</p>
                    </td>
                </tr>
				<tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">*</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Wildcard.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">[]</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">The native array operator.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">[start:end:step]</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Array slice operator.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">?()</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Applies a filter (script) expression.</p>
                    </td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyB-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">()</p>
                    </td>
                    <td class="TableStyle-bp-table-row-header-BodyB-Column1-Body1">
                        <p data-mc-conditions="Default.ScreenOnly">Script expression, using the underlying script engine.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 data-mc-conditions="Default.ScreenOnly">Example</h3>
        <p data-mc-conditions="Default.ScreenOnly">A staff database contains a number of records that includes data about the employees of an organization.</p>
        <p class="code_sample" data-mc-conditions="Default.ScreenOnly">{ </p>
		<p class="code_sample" style="text-indent: 0.25in;" data-mc-conditions="Default.ScreenOnly">"staff-database": {</p>
        <p class="code_sample" style="text-indent: 0.5in;" data-mc-conditions="Default.ScreenOnly">"employee": [</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">{ </p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"id": 1245,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"name": "Geoff Bryant",</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"salary": 45000,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"age": 46</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">},</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">{</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"id": 1365,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"name": "Tom Roberts",</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"salary": 38000,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"job-title": "developer"</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"age": 34</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">},</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">{</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"id": 1287,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"name": "Herman Blunt",</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"salary": 27000,</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"job-title": "tester"</p>
        <p class="code_sample" style="text-indent: 1.5in;" data-mc-conditions="Default.ScreenOnly">"age": 26</p>
        <p class="code_sample" style="text-indent: 1in;" data-mc-conditions="Default.ScreenOnly">},</p>
		<p class="code_sample" style="text-indent: 0.5in;" data-mc-conditions="Default.ScreenOnly">]</p>
        <p class="code_sample" style="text-indent: 0.25in;" data-mc-conditions="Default.ScreenOnly">}</p>
        <p class="code_sample" data-mc-conditions="Default.ScreenOnly">}</p>
        <p data-mc-conditions="Default.ScreenOnly">The following are examples of how JSONPath can be used </p>
        <table class="TableStyle-bp-table-row-header" style="mc-table-style: url('../TableStyles/bp-table-row-header.css');margin-left: 0;margin-right: auto;" cellspacing="0">
            <col class="TableStyle-bp-table-row-header-Column-Column1" data-mc-conditions="Default.ScreenOnly" />
            <col class="TableStyle-bp-table-row-header-Column-Column1" data-mc-conditions="Default.ScreenOnly" />
            <thead>
                <tr class="TableStyle-bp-table-row-header-Head-Header1">
                    <th class="TableStyle-bp-table-row-header-HeadE-Column1-Header1">
                        <p data-mc-conditions="Default.ScreenOnly">JSONPath</p>
                    </th>
                    <th class="TableStyle-bp-table-row-header-HeadD-Column1-Header1">
                        <p data-mc-conditions="Default.ScreenOnly">Result</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1" data-mc-conditions="Default.ScreenOnly">$.staff-database..salary</td>
                    <td class="TableStyle-bp-table-row-header-BodyD-Column1-Body1" data-mc-conditions="Default.ScreenOnly">Returns the salary for all employee records.</td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1" data-mc-conditions="Default.ScreenOnly">$.staff-database['employee']</td>
                    <td class="TableStyle-bp-table-row-header-BodyD-Column1-Body1" data-mc-conditions="Default.ScreenOnly">Returns all employee records.</td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyE-Column1-Body1" data-mc-conditions="Default.ScreenOnly">	$..employee[?(@.job-title)]</td>
                    <td class="TableStyle-bp-table-row-header-BodyD-Column1-Body1" data-mc-conditions="Default.ScreenOnly">Filters all records with a job title.</td>
                </tr>
                <tr class="TableStyle-bp-table-row-header-Body-Body1">
                    <td class="TableStyle-bp-table-row-header-BodyB-Column1-Body1" data-mc-conditions="Default.ScreenOnly">	$..employee[?(@.salary&lt;40000)]</td>
                    <td class="TableStyle-bp-table-row-header-BodyA-Column1-Body1" data-mc-conditions="Default.ScreenOnly">Filters all records that have a salary of less than 40000.</td>
                </tr>
            </tbody>
        </table>
        <p>&#160;</p>
        <table style="width: 100%;margin-left: 0;margin-right: auto;mc-table-style: url('../../TableStyles/bp_footer_tablestyle.css');" class="TableStyle-bp_footer_tablestyle" cellspacing="0">
            <col class="TableStyle-bp_footer_tablestyle-Column-Column1" />
            <tbody>
                <tr class="TableStyle-bp_footer_tablestyle-Body-Body1">
                    <td class="TableStyle-bp_footer_tablestyle-BodyD-Column1-Body1">&#160;</td>
                </tr>
                <tr class="TableStyle-bp_footer_tablestyle-Body-Body1">
                    <td style="text-align: center;" class="TableStyle-bp_footer_tablestyle-BodyD-Column1-Body1">Commercial in Confidence</td>
                </tr>
                <tr class="TableStyle-bp_footer_tablestyle-Body-Body1">
                    <td style="text-align: center;" class="TableStyle-bp_footer_tablestyle-BodyA-Column1-Body1">®Blue Prism is a Registered Trademark of Blue Prism Limited</td>
                </tr>
            </tbody>
        </table>
    </body>
</html>