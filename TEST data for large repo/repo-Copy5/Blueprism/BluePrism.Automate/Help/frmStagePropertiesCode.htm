<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>Stage Properties - Code</title>
</head>

<body>
    <div class="header">
        <h1 class="pagetitle">Stage Types</h1>
    </div>

    <h3>Code Stage</h3>

    <p>The code stage adds the power and flexibility of a professional programming language to the
    visual convenience of the Blue Prism <a href="helpFlowCharts.htm">flow charting</a> tool. This
    provides the expert user with freedom to perform data manipulations that would otherwise be
    cumbersome from within Blue Prism, or indeed to interface with the API of a piece of 
    software from within Blue Prism. In particular
    a code stage is often useful for interfacing with a COM object in a Microsoft Windows environment.</p>

    <p>The code stage has a close relationship with the
    <a href="frmstagepropertiesObjectInfo.htm#GlobalCode">global code</a> declared as part of the business
    object. Member variables and methods declared in the global code section are accessible from
    the code stage, but not vice versa.</p>

    <h5 class="bold">Properties Form</h5>

    <p>The properties form consists of three tabs: inputs, outputs and code. The inputs and outputs
    declared are in the form of Blue Prism values and data items, as for an
    <a href="frmStageProperties.htm">Action Stage</a>. These values are "translated" by Blue Prism to
    their corresponding Visual Basic .NET equivalents for use in the final tab. Please note that
    since not all Blue Prism data types have a corresponding equivalent in the .NET framework, only a
    restricted set of Blue Prism data types is permitted.</p>

    <p>Based on the inputs and outputs supplied, a method header is automatically generated,
    declaring your inputs and outputs for you. You may not edit this header except by editing the
    list of inputs and outputs in the first two tabs.</p>

    <p>Inputs are passed by value to your method. This means that a copy of the value-typed data in
    Blue Prism will be passed to your method. Modifying this data will not affect the value of the
    data in Blue Prism. In contrast, outputs are passed by reference. This means that instead of a
    copy of the value being passed to your method, a pointer to the value is passed instead. This
    means that any modifications you make to the variable in you method will instantly be
    propagated into the business object, modifying your chosen data item.</p>
</body>
</html>
