<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>应用程序建模器(&amp;A)</title>
	<script type="text/javascript" src="script/imagezoom.js"></script>
</head>

<body class="slick">
	<div class="header">
		<h1 class="pagetitle">应用程序建模器</h1>
		<h2>选择属性</h2>
	</div>

	<h3 id="intro">简介</h3>

	<p>下面将会探讨选用各个属性时的优缺点。有关各个属性的详尽描述，请参阅 <a href="attributes.htm">Windows 探测属性列表</a>、<a href="attributes-aa.htm">Active Accessibility 属性列表</a>和 <a href="attributes-uia.html">UI Automation 属性列表</a>。
	</p>

	<h3 id="spy-attributes">Windows 探测属性</h3>
	<dl class="listplease bulleted">
		
		<dt><a href="attributes.htm#windowtext">WindowText</a></dt>
		<dd>
 通常，窗口文本都很有用，因为它往往是唯一的（例如，每个顶级窗口中都只有一个标有文本“确定”的按钮）。但是，在以下情况下使用这个属性可能会出现反效果：
		</dd>
		<dd>
			<ul>
				<li>针对元素执行写入操作时。如果您正在更改元素的文本，则无法使用元素的默认文本来识别元素（除非文本会<a href="frmIntegrationAssistant.htm#dynamic">动态</a>显示）。</li>

				<li>文本的更改无法预测。但是，如果文本的更改是可预测的，则您可使文本<a href="frmIntegrationAssistant.htm#dynamic">动态</a>显示。
				</li>
			</ul>
		</dd>
		
		<dt><a href="attributes.htm#classname">ClassName</a></dt>
		<dd>
 这个属性通常很有用，因为它很少发生改变。
 请注意，某些外来应用程序可能会将一个元素与另一个看似相同但拥有不同实现的元素进行交换，从而导致类名发生变化。
		</dd>

		<dt><a href="attributes.htm#ordinal">序数</a></dt>
		<dd>
 通常很有用，但请注意以下相关提醒：
		</dd>
		<dd>
			<ul>
				<li>如果某个应用程序拥有多线程用户界面或多文稿界面 (MDI)，则每次运行这个应用程序时，序数可能都会有所不同。</li>

				<li>
					<p>如果通常还会出现其他元素，但这些元素在特殊情况下却不会出现（例如，在帐户系统上，非活跃帐户看不到“更新”按钮），那么这些元素的缺失可能会在相应的特殊情况下对序数产生影响。</p>

					<p>这会导致业务对象在大多数时候都能正常运行，但是每当这类“特殊”屏幕出现时便会以失败告终。</p>
				</li>
			</ul>
		</li>

		<dt><a href="attributes.htm#x">X、Y、宽度、高度</a></dt>
		<dd>
 最好尽可能避免使用 X、Y、宽度或高度，因为这些属性可能会因屏幕分辨率、父表单大小、父表单有没有最大化等因素而异。
		</dd>

		<dt><a href="attributes.htm#visible">可见</a></dt>
		<dd>
 对于等待队列中所涉及的元素而言，这个属性往往很有用。例如，某些应用程序会隐藏“更新”按钮，直至完成加载。通过等待出现“可见性”值为 True 的元素，您可以检测目标应用程序是否已处于就绪状态。
		</dd>
		
		<dt id="enabled"><a href="attributes.htm#enabled">已启用</a></dt>
		<dd>
 与“可见”一样，在等待队列中非常有用。某些应用程序会禁用按钮，直至它们做好处理按钮点击事件的准备。
		</dd>
		<dd>
 另请参阅 Active Accessibility 的 <a href="#unavailable">Unavailable</a> 属性。</p>
		</dd>

		<dt><a href="attributes.htm#active">活动</a></dt>
		<dd>
 在针对显示模式错误对话框的应用程序检测错误状态时，这个属性非常有用。这类对话框的“活动”属性的值为 True。在等待主应用程序窗口完成加载时，这个属性也很有用。
		</dd>

		<dt><a href="attributes.htm#childcount">ChildCount</a></dt>
		<dd>
 对于属性而言，这通常是一个很可靠的标识符，除了在介绍 Visible 属性时所提及的情况（元素的出现和消失取决于目标应用程序的状态）之外。
		</dd>
	</dl>
	
	
	<h3 id="aa-attributes">Active Accessibility 属性</h3>
	<dl class="listplease bulleted">
		<dt id="unavailable">
			<a href="attributes-aa.htm#unavailable">不可用</a>
		</dt>
		<dd>
 常会与 Windows 属性<a href="#enabled">已启用</a>混为一谈。在使用 Active Accessibility 探测工具探测过某个元素后，这个属性往往要比 Windows 属性<a href="#enabled">已启用</a>更为可靠。这是因为 Active Accessibility 探测工具的详细程度级别往往要优于这个 Windows 探测工具。例如，Active Accessibility 探测工具或许可以识别单个工具栏按钮，但 Windows 探测工具或许只能识别工具栏本身。在这种情况下，Enabled 属性针对的是父工具栏，而 Unavailable 属性针对的则是所探测的单个按钮。
		</dd>
	</dl>
</body>
</html>
