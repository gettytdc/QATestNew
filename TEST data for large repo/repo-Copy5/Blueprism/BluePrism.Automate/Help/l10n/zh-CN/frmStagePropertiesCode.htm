<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <title>环节属性—代码</title>
</head>

<body>
    <div class="header">
        <h1 class="pagetitle">环节类型</h1>
    </div>

    <h3>代码环节</h3>

    <p>Blue Prism 的 <a href="helpFlowCharts.htm">Flow Charting</a> 工具直观方便，代码环节为其增加了专业编程语言的强大功能和灵活性。这使得专家用户可以自由执行数据操作（否则在 Blue Prism 内执行该操作会很繁琐），或者与来自 Blue Prism 内软件的 API 交互。特别是，在 Microsoft Windows 环境中，代码环节对于与 COM 对象交互通常很有用。</p>

    <p>代码环节与声明为业务对象的一部分的<a href="frmstagepropertiesObjectInfo.htm#GlobalCode">全局代码</a>密切相关。可以从代码环节访问在全局代码部分中声明的成员变量和方法，但反之则不然。</p>

    <h5 class="bold">属性窗体</h5>

    <p>属性窗体由三个选项卡组成：输入、输出和代码。对于<a href="frmStageProperties.htm">操作环节</a>，声明的输入和输出采用 Blue Prism 值和数据项的形式。Blue Prism 将这些值“转换”为其相应的 Visual Basic.NET 等效项，以便在最终选项卡中使用。请注意，由于并非所有 Blue Prism 数据类型在. NET 框架中都具有相应的等效项，因此仅允许使用一组受限制的 Blue Prism 数据类型。</p>

    <p>根据所提供的输入和输出，自动生成方法标头，为您声明输入和输出。只有编辑前两个选项卡中的输入和输出列表，才可编辑此标头。</p>

    <p>输入按值传递给方法。这意味着 Blue Prism 中的值类型数据的副本将传递到您的方法。修改此数据不会影响 Blue Prism 中的数据值。相反，输出按引用传递。这意味着传递给方法的不是该值的副本，而是指向该值的指针。这意味着您对方法中的变量所做的任何修改都将立即传播到业务对象中，从而修改所选的数据项。</p>
</body>
</html>
