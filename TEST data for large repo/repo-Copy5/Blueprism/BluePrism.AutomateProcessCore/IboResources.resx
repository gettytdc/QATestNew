<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="clsCollectionActions_Params_Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="clsCollectionCopyRows_EndRowOutOfRange" xml:space="preserve">
    <value>End row out of range</value>
  </data>
  <data name="clsCollectionCopyRows_StartRowOutOfRange" xml:space="preserve">
    <value>Start row out of range</value>
  </data>
  <data name="clsCollectionCopyRows_EndRowMustBeGreaterThanOrEqualToStartRow" xml:space="preserve">
    <value>End Row must be greater than or equal to Start Row</value>
  </data>
  <data name="clsCollectionActions_Params_EndRow" xml:space="preserve">
    <value>End Row</value>
  </data>
  <data name="clsCollectionCopyRows_Comma" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="clsCollectionActions_Params_StartRow" xml:space="preserve">
    <value>Start Row</value>
  </data>
  <data name="clsCollectionCopyRows_MissingParameterS012" xml:space="preserve">
    <value>Missing Parameter(s): {0}{1}{2}</value>
  </data>
  <data name="clsCollectionCopyRows_TheCollectionIsUnchanged" xml:space="preserve">
    <value>The collection is unchanged.</value>
  </data>
  <data name="clsCollectionCopyRows_ACollectionWhichContainsTheRowsCopiedFromTheInputCollection" xml:space="preserve">
    <value>A collection which contains the rows copied from the input collection</value>
  </data>
  <data name="clsCollectionCopyRows_TheIndexOfTheLastRowToCopyTheIndexIsFrom0ToN1WhereNIsTheTotalNumberOfRowsInTheC" xml:space="preserve">
    <value>The index of the last row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection).</value>
  </data>
  <data name="clsCollectionCopyRows_TheIndexOfTheFirstRowToCopyTheIndexIsFrom0ToN1WhereNIsTheTotalNumberOfRowsInThe" xml:space="preserve">
    <value>The index of the first row to copy. The index is from 0 to N-1 (where N is the total number of rows in the collection).</value>
  </data>
  <data name="clsCollectionActions_Action_CopyRows" xml:space="preserve">
    <value>Copy Rows</value>
  </data>
  <data name="clsCollectionActions_Params_CollectionName" xml:space="preserve">
    <value>Collection Name</value>
  </data>
  <data name="clsCollectionInsertRow_CannotAddARowToACollectionWithNoFieldsDefined" xml:space="preserve">
    <value>Cannot add a row to a collection with no fields defined</value>
  </data>
  <data name="clsCollectionInsertRow_TheCollectionWillHaveAnAdditionalEmptyRowAndThisWillBeTheCurrentRow" xml:space="preserve">
    <value>The collection will have an additional empty row, and this will be the current row</value>
  </data>
  <data name="clsCollectionActions_Action_AddRow" xml:space="preserve">
    <value>Add Row</value>
  </data>
  <data name="clsCollectionCountColumn_TheOutputDataItemWillContainTheColumnCount" xml:space="preserve">
    <value>The output data item will contain the column count</value>
  </data>
  <data name="clsCollectionCountColumn_TheNumberOfColumnsCountedInTheCollection" xml:space="preserve">
    <value>The number of columns counted in the collection</value>
  </data>
  <data name="clsCollectionActions_Action_CountColumns" xml:space="preserve">
    <value>Count Columns</value>
  </data>
  <data name="clsCollectionActions_Params_Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="clsCollectionCountRow_TheOutputDataItemWillContainTheRowCount" xml:space="preserve">
    <value>The output data item will contain the row count</value>
  </data>
  <data name="clsCollectionCountRow_TheNumberOfRowsCountedInTheCollection" xml:space="preserve">
    <value>The number of rows counted in the collection</value>
  </data>
  <data name="clsCollectionActions_Action_CountRows" xml:space="preserve">
    <value>Count Rows</value>
  </data>
  <data name="clsCollectionRemoveAll_AllRowsWillBeDeletedAnyAttemptToAccessDataInTheCollectionWillResultInAnErrorUnl" xml:space="preserve">
    <value>All rows will be deleted. Any attempt to access data in the collection will result in an error, (unless new data has been added first). If this action is called from within a loop, then the loop will not begin a new iteration after reaching the loop end stage, but will continue to the next stage instead.</value>
  </data>
  <data name="clsCollectionActions_Action_RemoveAllRows" xml:space="preserve">
    <value>Remove All Rows</value>
  </data>
  <data name="clsCollectionRemoveRow_TheDeleteFailed" xml:space="preserve">
    <value>The delete failed</value>
  </data>
  <data name="clsCollectionRemoveRow_MustHaveACurrentRowEitherByAlreadyBeingInALoopOrBySomeOtherMeansEgAddingARowMan" xml:space="preserve">
    <value>Must have a current row, either by already being in a loop or by some other means (eg Adding a row manually or having just completed a loop, such that the current row is the last row).</value>
  </data>
  <data name="clsCollectionRemoveRow_TheCurrentRowWillBeDeletedTheCurrentRowWillNoLongerExistSoAnyAttemptToAccessThe" xml:space="preserve">
    <value>The current row will be deleted. The current row will no longer exist, so any attempt to access the current row will result in an error. If this action is called from within a loop, the current row will not be defined until the next iteration of the loop.</value>
  </data>
  <data name="clsCollectionActions_Action_RemoveRow" xml:space="preserve">
    <value>Remove Row</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_AtLeastOneStartDateValueMustBeProvided" xml:space="preserve">
    <value>At least one start date value must be provided</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_FinishedStartDateLoadedStartDate" xml:space="preserve">
    <value>Finished Start Date / Loaded Start Date</value>
  </data>
  <data name="clsWorkQueuesActions_Params_QueueName" xml:space="preserve">
    <value>Queue Name</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_TreatEachAttemptSeparately" xml:space="preserve">
    <value>Treat each attempt separately?</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_IncludeExceptionItems" xml:space="preserve">
    <value>Include exception items?</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_IncludeCompletedItems" xml:space="preserve">
    <value>Include completed items?</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_IncludeDeferredItems" xml:space="preserve">
    <value>Include deferred items?</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_IncludeUnworkedItems" xml:space="preserve">
    <value>Include unworked items?</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ResourceNames" xml:space="preserve">
    <value>Resource Names</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LoadedEndDate" xml:space="preserve">
    <value>Loaded End Date</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LoadedStartDate" xml:space="preserve">
    <value>Loaded Start Date</value>
  </data>
  <data name="clsWorkQueuesActions_Params_FinishedEndDate" xml:space="preserve">
    <value>Finished End Date</value>
  </data>
  <data name="clsWorkQueuesActions_ReportParams_FinishedStartDate" xml:space="preserve">
    <value>Finished Start Date</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_ErrorWhileCopyingWorkItem0" xml:space="preserve">
    <value>Error while copying work item: {0}</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_NoWorkItemSpecified" xml:space="preserve">
    <value>No work item specified</value>
  </data>
  <data name="clsWorkQueuesActions_Params_DeferUntil" xml:space="preserve">
    <value>Defer Until</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="clsWorkQueuesActions_Params_TagMask" xml:space="preserve">
    <value>Tag Mask</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ItemID" xml:space="preserve">
    <value>Item ID</value>
  </data>
  <data name="clsWorkQueuesActions_Params_KeyValue" xml:space="preserve">
    <value>KeyValue</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Resource" xml:space="preserve">
    <value>Resource</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Attempt" xml:space="preserve">
    <value>Attempt</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Loaded" xml:space="preserve">
    <value>Loaded</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LastUpdated" xml:space="preserve">
    <value>LastUpdated</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Exception" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheTargetQueueMustExist" xml:space="preserve">
    <value>The target queue must exist</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheItemMustBeLockedByTheCurrentSession" xml:space="preserve">
    <value>The item must be locked by the current session</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheWorkItemMustExistInAWorkQueue" xml:space="preserve">
    <value>The work item must exist in a work queue</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheSourceItemWillBeUnlockedAndMarkedCompleteTheNewItemWillBeCreatedInTheNamedWo" xml:space="preserve">
    <value>The source item will be unlocked and marked complete; the new item will be created in the named work queue</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheIDOfTheNewItemWithinTheTargetQueue" xml:space="preserve">
    <value>The ID of the new item within the target queue</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheDateTimeToDeferTheNewItemUntilIfNotSetCreatesTheItemUndeferred" xml:space="preserve">
    <value>The date/time to defer the new item until; if not set, creates the item undeferred</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_ThePriorityToSetInTheNewItemIfNotSetTheItemWillUseTheOldItemSPriority" xml:space="preserve">
    <value>The priority to set in the new item; if not set, the item will use the old item's priority)</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheStatusTextToSetInTheNewItemIfNotSetTheItemWillUseTheOldItemSStatus" xml:space="preserve">
    <value>The status text to set in the new item; if not set, the item will use the old item's status</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheTagsToAddNewTagOrRemoveOldTagToFromTheNewItemTagChangesCanBeCombinedUsingSem" xml:space="preserve">
    <value>The tags to add ("+New Tag") or remove ("-Old Tag") to/from the new item; Tag changes can be combined using semi-colons (eg. "+New Tag;-Old Tag")</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheNameOfTheQueueToCopyTheItemTo" xml:space="preserve">
    <value>The name of the queue to copy the item to</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_TheIDOfTheWorkItemToCopy" xml:space="preserve">
    <value>The ID of the work item to copy</value>
  </data>
  <data name="clsWorkQueuesActions_CopyToQueueAction_CopiesTheDataRepresentingAWorkItemToADifferentQueueIncludingItsTagsPriorityAndS" xml:space="preserve">
    <value>Copies the data representing a work item to a different queue, including its tags, priority and status, all of which can be  modified in the transition</value>
  </data>
  <data name="clsWorkQueuesActions_Action_CopyItemToQueue" xml:space="preserve">
    <value>Copy Item to Queue</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_ErrorWhileSettingPriority0" xml:space="preserve">
    <value>Error while setting priority: {0}</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_NoPrioritySpecified" xml:space="preserve">
    <value>No priority specified</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_NoQueueItemSpecified" xml:space="preserve">
    <value>No queue item specified</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_TheItemWillHaveTheNewPrioritySetWithinIt" xml:space="preserve">
    <value>The item will have the new priority set within it</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_TheNewPriorityToSetWithinTheWorkQueueItem" xml:space="preserve">
    <value>The new priority to set within the work queue item. </value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_TheIDOfTheQueueItemToSetThePriorityIn" xml:space="preserve">
    <value>The ID of the queue item to set the priority in</value>
  </data>
  <data name="clsWorkQueuesActions_SetPriorityAction_SetsThePriorityOfTheLatestAttemptOfAWorkQueueItem" xml:space="preserve">
    <value>Sets the priority of the latest attempt of a work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_Action_SetPriority" xml:space="preserve">
    <value>Set Priority</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_ErrorRetrievingData0" xml:space="preserve">
    <value>Error retrieving data: {0}</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_ErrorInParameter01" xml:space="preserve">
    <value>Error in parameter {0} : {1}</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ItemIDs" xml:space="preserve">
    <value>Item IDs</value>
  </data>
  <data name="clsWorkQueuesActions_Params_MeanTime" xml:space="preserve">
    <value>Mean Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_MedianTime" xml:space="preserve">
    <value>Median Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_MostTime" xml:space="preserve">
    <value>Most Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LeastTime" xml:space="preserve">
    <value>Least Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_TimeTotal" xml:space="preserve">
    <value>Time Total</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ItemCount" xml:space="preserve">
    <value>Item Count</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemIDsOfAllWorkQueueItemsMatchedByTheSearchNoteThatAllAttemptsOfTheSameItem" xml:space="preserve">
    <value>The Item IDs of all work queue items matched by the search. Note that all attempts of the same item have the same Item ID, and each attempt's ID will appear in this collection at most once, regardless of the 'Treat each attempt separately?' parameter</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheMeanAmountOfTimeSpentByEachMatchedQueueItem" xml:space="preserve">
    <value>The mean amount of time spent by each matched queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheMedianAmountOfTimeSpentByTheMatchedQueueItems" xml:space="preserve">
    <value>The median amount of time spent by the matched queue items</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheMostAmountOfTimeSpentWorkingOnASingleMatchedQueueItem" xml:space="preserve">
    <value>The most amount of time spent working on a single matched queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheLeastAmountOfTimeSpentWorkingOnASingleMatchedQueueItem" xml:space="preserve">
    <value>The least amount of time spent working on a single matched queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheTotalAmountOfTimeSpentWorkingWithTheMatchedQueueItems" xml:space="preserve">
    <value>The total amount of time spent working with the matched queue items</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheTotalNumberOfQueueItemsMatchedWithTheGivenParameters" xml:space="preserve">
    <value>The total number of queue items matched with the given parameters</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_EachTimeAQueueItemExceptionsANewLinkedRetryItemIsCreatedWithAnIncrementedAttemp" xml:space="preserve">
    <value>Each time a queue item exceptions, a new linked 'retry' item is created with an incremented attempt number. By default, all attempts for an item will be treated as a single item for the purposes of the report. An argument of 'True' will indicate that each retry should be treated as a separate item.</value>
  </data>
  <data name="clsWorkQueuesActions_Params_TreatEachAttemptSeparately" xml:space="preserve">
    <value>Treat each attempt separately?</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_IncludeAnyItemsWhichAreCurrentlyExceptionedDefaultIsFalse" xml:space="preserve">
    <value>Include any items which are currently exceptioned - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeExceptionItems" xml:space="preserve">
    <value>Include exception items?</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_IncludeAnyItemsWhichAreCurrentlyCompletedDefaultIsFalse" xml:space="preserve">
    <value>Include any items which are currently completed - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeCompletedItems" xml:space="preserve">
    <value>Include completed items?</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_IncludeAnyItemsWhichAreCurrentlyDeferredDefaultIsFalse" xml:space="preserve">
    <value>Include any items which are currently deferred - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeDeferredItems" xml:space="preserve">
    <value>Include deferred items?</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_IncludeAnyItemsWhichAreCurrentlyPendingDefaultIsFalse" xml:space="preserve">
    <value>Include any items which are currently pending - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeUnworkedItems" xml:space="preserve">
    <value>Include unworked items?</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheSemiColonSeparatedNamesOfTheResourcesWhichWorkedTheItemIfEmptyThisWillRetrie" xml:space="preserve">
    <value>The semi-colon-separated names of the resources which worked the item. If empty, this will retrieve for all resources</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemLoadedAddedToQueueDateTimeToEndResultsIfEmptyThisIsTheEndOfTheDayFromThe" xml:space="preserve">
    <value>The item loaded (added to queue) date/time to end results. If empty, this is the end of the day from the loaded start date/time. If that is also empty, then this parameter is ignored</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemLoadedAddedToQueueDateTimeToStartResultsIfEmptyThenTheLoadedStartDateIsI" xml:space="preserve">
    <value>The item loaded (added to queue) date/time to start results. If empty, then the loaded start date is ignored</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemFinishCompleteOrExceptionDateTimeToEndResultsIfEmptyThisIsTheEndOfTheDay" xml:space="preserve">
    <value>The item finish (complete or exception) date/time to end results. If empty, this is the end of the day from the start date/time or ignored if the  'finished start date' isn't set</value>
  </data>
  <data name="clsWorkQueuesActions_Params_inishedEndDate" xml:space="preserve">
    <value>Finished End Date</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheItemFinishCompleteOrExceptionDateTimeToStartResults" xml:space="preserve">
    <value>The item finish (complete or exception) date/time to start results</value>
  </data>
  <data name="clsWorkQueuesActions_Params_FinishedStartDate" xml:space="preserve">
    <value>Finished Start Date</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_TheNameOfTheQueueForWhichTheDetailsAreRequiredThisParameterIsMandatory" xml:space="preserve">
    <value>The name of the queue for which the details are required. This parameter is mandatory</value>
  </data>
  <data name="clsWorkQueuesActions_GetReportDataAction_RetrievesQueueDataForAnalysisTheQueueNameAndAtLeastOneOfTheDateParametersMustBe" xml:space="preserve">
    <value>Retrieves queue data for analysis. The queue name and at least one of the date parameters must be provided when calling this action</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetReportData" xml:space="preserve">
    <value>Get Report Data</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheCountOfTheSpecifiedWorkQueueOperationsWillBeReturned" xml:space="preserve">
    <value>The count of the specified work queue operations will be returned</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheInstalledLicenseMustSupportQueueTransactions" xml:space="preserve">
    <value>The installed license must support queue transactions</value>
  </data>
  <data name="clsWorkQueuesActions_Params_TotalCount" xml:space="preserve">
    <value>Total Count</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ForceRetries" xml:space="preserve">
    <value>Force Retries</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Deletions" xml:space="preserve">
    <value>Deletions</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExceptionsWithNoRetry" xml:space="preserve">
    <value>Exceptions with no retry</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExceptionsWithRetry" xml:space="preserve">
    <value>Exceptions with retry</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Completed" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Deferred" xml:space="preserve">
    <value>Deferred</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Locked" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludedQueues" xml:space="preserve">
    <value>Included Queues</value>
  </data>
  <data name="clsWorkQueuesActions_Params_QueueNames" xml:space="preserve">
    <value>Queue Names</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_NoQueueNameColumnFoundInTheExcludedQueuesCollection" xml:space="preserve">
    <value>No 'Queue Name' column found in the excluded queues collection</value>
  </data>
  <data name="clsWorkQueuesActions_Params_StartDateTime" xml:space="preserve">
    <value>Start Date/Time</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_YouMustProvideAnInclusiveUTCStartDateTime" xml:space="preserve">
    <value>You must provide an inclusive UTC Start Date/Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemForcedRetries" xml:space="preserve">
    <value>Count item forced retries</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemDeletions" xml:space="preserve">
    <value>Count item deletions</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemExceptionsWithoutAutomaticRetry" xml:space="preserve">
    <value>Count item exceptions without automatic retry</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemExceptionsWithAutomaticRetry" xml:space="preserve">
    <value>Count item exceptions with automatic retry</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemCompletions" xml:space="preserve">
    <value>Count item completions</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemDeferrals" xml:space="preserve">
    <value>Count item deferrals</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemLocks" xml:space="preserve">
    <value>Count item locks</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CountItemCreations" xml:space="preserve">
    <value>Count item creations</value>
  </data>
  <data name="clsWorkQueuesActions_Params_EndDateTime" xml:space="preserve">
    <value>End Date/Time</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExcludedQueueNames" xml:space="preserve">
    <value>Excluded Queue Names</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheCurrentlyInstalledLicenceDoesNotSupportQueueTransactions" xml:space="preserve">
    <value>The currently installed licence does not support queue transactions</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheTotalNumberQueueItemOperationsCounted" xml:space="preserve">
    <value>The total number queue item operations counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemForcedRetriesCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item forced retries counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemDeletionsCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item deletions counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemExceptionsWithoutAutomaticRetryCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item exceptions without automatic retry counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemExceptionsWithAutomaticRetryCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item exceptions with automatic retry counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemCompletionsCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item completions counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfDeferralsCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of deferrals counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemLocksCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item locks counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNumberOfItemCreationsCountedZeroIfTheyWereNotCounted" xml:space="preserve">
    <value>The number of item creations counted, zero if they were not counted</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheQueuesThatWereIncludedInTheReportContainsASingleTextColumnCalledQueueName" xml:space="preserve">
    <value>The queues that were included in the report. Contains a single text column called 'Queue Name'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNameOfTheIncludedQueue" xml:space="preserve">
    <value>The name of the included queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsWhichWereForceRetriedIeTheyHadBeenMarkedWithAnExcep" xml:space="preserve">
    <value>True to count the work queue items which were force retried - ie. they had been marked with an exception with no automatic retry, and had later been manually retried</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingDeletedDefaultIsFalse" xml:space="preserve">
    <value>True to count the work queue items being deleted - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingMarkedWithAnExceptionAndWithoutAnAutomaticRetr" xml:space="preserve">
    <value>True to count the work queue items being marked with an exception and without an automatic retry being create - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingMarkedWithAnExceptionAndAutomaticallyRetriedDe" xml:space="preserve">
    <value>True to count the work queue items being marked with an exception and automatically retried - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingCompletedSuccessfullyDefaultIsFalse" xml:space="preserve">
    <value>True to count the work queue items being completed successfully - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingDeferredDefaultIsFalse" xml:space="preserve">
    <value>True to count the work queue items being deferred - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingLockedDefaultIsFalse" xml:space="preserve">
    <value>True to count the work queue items being locked - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TrueToCountTheWorkQueueItemsBeingCreatedDefaultIsFalse" xml:space="preserve">
    <value>True to count the work queue items being created - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheUTCDateTimeUpToAndIncludingWhichActivityCountsShouldBeRetrievedThisIsInclusi" xml:space="preserve">
    <value>The UTC date/time up to and including which activity counts should be retrieved. This is inclusive. If empty, this will take all activity counts up until now.</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheUTCDateTimeFromWhichActivityCountsShouldBeRetrievedThisIsInclusive" xml:space="preserve">
    <value>The UTC date/time from which activity counts should be retrieved. This is inclusive</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNamesOfTheQueuesToExcludeFromTheTransactionCountAnyQueuesNotSpecifiedInThisP" xml:space="preserve">
    <value>The names of the queues to exclude from the transaction count. Any queues not specified in this parameter are counted. The names should be in a column within the collection named 'Queue Name'. If any queue names do not match a queue on the system, they are ignored.</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_TheNameOfTheQueueToExclude" xml:space="preserve">
    <value>The name of the queue to exclude</value>
  </data>
  <data name="clsWorkQueuesActions_GetTransactionDataAction_RetrievesTransactionCountsForAllQueuesExceptThoseSpecifiedUsingTheGivenParamete" xml:space="preserve">
    <value>Retrieves transaction counts for all queues except those specified, using the given parameters to define a transaction</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetTransactionData" xml:space="preserve">
    <value>Get Transaction Data</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_TagCannotBeEmpty" xml:space="preserve">
    <value>Tag cannot be empty</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_NoQueueItemSpecified" xml:space="preserve">
    <value>No queue item specified</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_TheItemWillNotHaveTheSpecifiedTagAppliedToIt" xml:space="preserve">
    <value>The item will not have the specified tag applied to it</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_TheTagToRemoveFromTheItemNoteThatThisCannotStartWithAPlusOrMinusCharacterAndCan" xml:space="preserve">
    <value>The tag to remove from the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_TheIDOfTheQueueItemToRemoveTheTagFrom" xml:space="preserve">
    <value>The ID of the queue item to remove the tag from</value>
  </data>
  <data name="clsWorkQueuesActions_UntagItemAction_RemovesATagFromAWorkQueueItem" xml:space="preserve">
    <value>Removes a tag from a work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_Action_UntagItem" xml:space="preserve">
    <value>Untag Item</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_TagCannotBeEmpty" xml:space="preserve">
    <value>Tag cannot be empty</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_NoQueueItemSpecified" xml:space="preserve">
    <value>No queue item specified</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_TheItemHasTheGivenTagAppliedToIt" xml:space="preserve">
    <value>The item has the given tag applied to it</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_TheTagToAddToTheItemNoteThatThisCannotStartWithAPlusOrMinusCharacterAndCannotCo" xml:space="preserve">
    <value>The tag to add to the item. Note that this cannot start with a '+' (plus) or '-' (minus) character, and cannot contain ';' (semi-colon) characters</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_TheIDOfTheQueueItemToAddTheTagTo" xml:space="preserve">
    <value>The ID of the queue item to add the tag to</value>
  </data>
  <data name="clsWorkQueuesActions_TagItemAction_AddsATagToAWorkQueueItem" xml:space="preserve">
    <value>Adds a tag to a work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_Action_TagItem" xml:space="preserve">
    <value>Tag Item</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_NoKeySpecified" xml:space="preserve">
    <value>No key specified</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeTerminated" xml:space="preserve">
    <value>Include Terminated</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeCompleted" xml:space="preserve">
    <value>Include Completed</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludeDeferred" xml:space="preserve">
    <value>Include Deferred</value>
  </data>
  <data name="clsWorkQueuesActions_Params_IncludePending" xml:space="preserve">
    <value>Include Pending</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TheItemWillBeUnchanged" xml:space="preserve">
    <value>The item will be unchanged.</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TheItemIDsWhichRepresentTheWorkItemsFoundWithTheGivenKey" xml:space="preserve">
    <value>The Item IDs which represent the work items found with the given key</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TrueIfAnItemWithTheGivenKeyIsInTheQueueFalseOtherwise" xml:space="preserve">
    <value>True if an item with the given key is in the queue, False otherwise.</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_CheckAnyItemsInTheQueueWhichHaveBeenFullyTerminatedOptionalDefaultIsTrue" xml:space="preserve">
    <value>Check any items in the queue which have been fully terminated. Optional - Default is True</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_CheckAnyItemsInTheQueueWhichAreCompletedOptionalDefaultIsTrue" xml:space="preserve">
    <value>Check any items in the queue which are completed. Optional - Default is True</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_CheckAnyItemsInTheQueueWhichAreCurrentlyDeferredToALaterDateOptionalDefaultIsTr" xml:space="preserve">
    <value>Check any items in the queue which are currently deferred to a later date. Optional - Default is True</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_CheckAnyItemsInTheQueueWhichAreCurrentlyAwaitingBeingWorkedThisWillIncludeAnyDe" xml:space="preserve">
    <value>Check any items in the queue which are currently awaiting being worked. This will include any deferred items which have a deferral date in the past and any locked items. Optional - Default is True</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TheKeyToCheck" xml:space="preserve">
    <value>The key to check.</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_TheNameOfTheQueueToCheck" xml:space="preserve">
    <value>The name of the queue to check</value>
  </data>
  <data name="clsWorkQueuesActions_IsItemInQueueAction_CheckIfAnItemWithTheGivenKeyIsAlreadyInTheQueue" xml:space="preserve">
    <value>Check if an item with the given key is already in the queue</value>
  </data>
  <data name="clsWorkQueuesActions_Action_IsItemInQueue" xml:space="preserve">
    <value>Is Item In Queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_ErrorGettingItemData" xml:space="preserve">
    <value>Error getting item data : </value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_FailedToParseItemID" xml:space="preserve">
    <value>Failed to parse Item ID</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_ExceptionReason" xml:space="preserve">
    <value>Exception Reason</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExceptionDateTime" xml:space="preserve">
    <value>Exception DateTime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CompletedDateTime" xml:space="preserve">
    <value>Completed DateTime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_DeferredDateTime" xml:space="preserve">
    <value>Deferred DateTime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LoadedDateTime" xml:space="preserve">
    <value>Loaded DateTime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_AttemptWorktime" xml:space="preserve">
    <value>Attempt Worktime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Worktime" xml:space="preserve">
    <value>Worktime</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Attempts" xml:space="preserve">
    <value>Attempts</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheRequestedItemDoesNotExist" xml:space="preserve">
    <value>The requested item does not exist</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheItemWillBeUnchanged" xml:space="preserve">
    <value>The item will be unchanged.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheDataAssociatedWithTheItemASingleCollectionRow" xml:space="preserve">
    <value>The data associated with the item - a single collection row.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheSemiColonSeparatedSetOfTagsWhichApplyToTheItem" xml:space="preserve">
    <value>The semi-colon separated set of tags which apply to the item. </value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheExceptionReasonRecordedAgainstThisItem" xml:space="preserve">
    <value>The exception reason recorded against this item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheDateAndTimeAtWhichThisItemWasMarkedAsAnExceptionEmptyIfThereHasNeverBeenAnEx" xml:space="preserve">
    <value>The date and time at which this item was marked as an exception. Empty if there has never been an exception on this item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheDateAndTimeAtWhichThisItemWasMarkedAsCompleteEmptyIfThisItemHasNotBeenMarked" xml:space="preserve">
    <value>The date and time at which this item was marked as complete. Empty if this item has not been marked as complete</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheDateAndTimeAtWhichThisItemHasBeenDeferredToEmptyIfThisItemHasNotBeenDeferred" xml:space="preserve">
    <value>The date and time at which this item has been deferred to. Empty if this item has not been deferred.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheDateAndTimeAtWhichThisItemWasFirstLoadedIntoTheQueue" xml:space="preserve">
    <value>The date and time at which this item was first loaded into the queue.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheAmountOfTimeSpentOnThisParticularAttemptOfTheItem" xml:space="preserve">
    <value>The amount of time spent on this particular attempt of the item</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheTotalTimeSpentOnThisItemIncludingPreviousAttempts" xml:space="preserve">
    <value>The total time spent on this item (including previous attempts)</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheNumberOfAttemptsAlreadyMadeToWorkThisItem" xml:space="preserve">
    <value>The number of attempts already made to work this item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheStatusOfTheItem" xml:space="preserve">
    <value>The status of the item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_ThePriorityOfTheItem" xml:space="preserve">
    <value>The priority of the item</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheKeyValueOfTheItem" xml:space="preserve">
    <value>The key value of the item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_TheIDOfTheItemToGetDataFromAnErrorWillBeRaisedIfThisItemDoesNotExist" xml:space="preserve">
    <value>The ID of the item to get data from. An error will be raised if this item does not exist.</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemDataAction_GetDataRelatingToAnItemInAQueueYouDoNotNeedToHaveALockOnTheItemToDoThis" xml:space="preserve">
    <value>Get data relating to an item in a queue. You do not need to have a lock on the item to do this.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetItemData" xml:space="preserve">
    <value>Get Item Data</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteItemAction_BadItemIDSupplied" xml:space="preserve">
    <value>Bad Item ID Supplied</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteItemAction_TheSpecifiedItemWillHaveBeenDeletedAndItsDetailsReturnedAsOutputs" xml:space="preserve">
    <value>The specified item will have been deleted, and its details returned as outputs.</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteItemAction_TheIDOfTheItemToDeleteAnErrorWillBeRaisedIfThisItemDoesNotExistOrIsLocked" xml:space="preserve">
    <value>The ID of the item to delete. An error will be raised if this item does not exist, or is locked.</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteItemAction_DeleteTheGivenItemFromAQueueNoteThatThereIsNoLockingInvolvedInThisIEYouShouldOn" xml:space="preserve">
    <value>Delete the given item from a queue. Note that there is no locking involved in this, i.e. you should only delete an item if you are sure it is safe to do so. On the other hand, attempting to delete an item that is locked (e.g. being worked by another process) will result in an error</value>
  </data>
  <data name="clsWorkQueuesActions_Action_DeleteItem" xml:space="preserve">
    <value>Delete Item</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExceptionItems" xml:space="preserve">
    <value>Exception Items</value>
  </data>
  <data name="clsWorkQueuesActions_Params_MaximumRows" xml:space="preserve">
    <value>Maximum Rows</value>
  </data>
  <data name="clsWorkQueuesActions_Params_TagFilter" xml:space="preserve">
    <value>Tag Filter</value>
  </data>
  <data name="clsWorkQueuesActions_Params_KeyFilter" xml:space="preserve">
    <value>Key Filter</value>
  </data>
  <data name="clsWorkQueuesActions_Params_EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="clsWorkQueuesActions_Params_StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_ExceptionItemsInTheRequestedDateRangeWillBeReturnedSubjectToTheMaximumNumberOfR" xml:space="preserve">
    <value>Exception Items in the requested date range will be returned, subject to the maximum number of rows specified.</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_TheItemsWhichWereMarkedWithAnExceptionWithinTheGivenDateRangeUpToTheMaximumCoun" xml:space="preserve">
    <value>The items which were marked with an exception within the given date range, up to the maximum count if one was given</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_OptionallyTheMaximumNumberOfRowsToReturnNoValueIndicatesThatAllRowsShouldBeRetu" xml:space="preserve">
    <value>Optionally, the maximum number of rows to return. No value indicates that all rows should be returned</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_OptionallyAKeyValueToFilterByOnlyItemsWithThisKeyValueWillBeConsidered" xml:space="preserve">
    <value>Optionally, a key value to filter by. Only items with this key value will be considered.</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_OptionallyTheEndThresholdDateAnyItemsReturnedWillHaveBeenMarkedAsAnExceptionBef" xml:space="preserve">
    <value>Optionally, the end threshold date. Any items returned will have been marked as an exception before this date. If no value is given, there will be no end threshold.</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_OptionallyTheStartThresholdDateAnyItemsReturnedWillHaveBeenMarkedAsAnExceptionA" xml:space="preserve">
    <value>Optionally, the start threshold date. Any items returned will have been marked as an exception after this date. If no value is given, there will be no start threshold.</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_TheNameOfTheQueueToRetrieveTheExceptionItemsFrom" xml:space="preserve">
    <value>The name of the queue to retrieve the exception items from</value>
  </data>
  <data name="clsWorkQueuesActions_GetExceptionItemsAction_GetsTheWorkItemsFromTheSpecifiedQueueWhichHaveBeenMarkedWithAnException" xml:space="preserve">
    <value>Gets the work items from the specified queue which have been marked with an exception on the latest attempt.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetExceptionItems" xml:space="preserve">
    <value>Get Exception Items</value>
  </data>
  <data name="clsWorkQueuesActions_NoQueueNameSpecified" xml:space="preserve">
    <value>Parameter "Queue Name" must be provided</value>
  </data>
  <data name="clsWorkQueuesActions_IncorrectBatchSize" xml:space="preserve">
    <value>Please enter a batch size between 1 and 25,000.</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_CompletedItemsInTheRequestedDateRangeWillBeReturnedSubjectToTheMaximumNumberOfR" xml:space="preserve">
    <value>Completed Items in the requested date range will be returned, subject to the maximum number of rows specified.</value>
  </data>
  <data name="clsWorkQueuesActions_Params_CompletedItems" xml:space="preserve">
    <value>Completed Items</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheItemsWhichWereMarkedAsCompleteWithinTheGivenDateRangeUpToTheMaximumCountIfOn" xml:space="preserve">
    <value>The items which were marked as complete within the given date range, up to the maximum count if one was given</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheMaximumNumberOfRowsToReturnOptionalNoValueIndicatesThatAllRowsShouldBeReturn" xml:space="preserve">
    <value>The maximum number of rows to return. Optional - No value indicates that all rows should be returned</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_OptionallyAKeyValueToFilterByOnlyItemsWithThisKeyValueWillBeConsidered" xml:space="preserve">
    <value>Optionally, a key value to filter by. Only items with this key value will be considered.</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheEndDateUpToWhichAnyItemsMarkedAsCompleteShouldBeReturnedOptionalNoDateIndica" xml:space="preserve">
    <value>The end date up to which any items marked as complete should be returned. Optional - No date indicates no end date threshold</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheStartDateFromWhichAnyItemsMarkedAsCompleteShouldBeReturnedOptionalNoDateIndi" xml:space="preserve">
    <value>The start date from which any items marked as complete should be returned. Optional - No date indicates no start date threshold</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_TheNameOfTheQueueToRetrieveTheCompletedItemsFrom" xml:space="preserve">
    <value>The name of the queue to retrieve the completed items from</value>
  </data>
  <data name="clsWorkQueuesActions_GetCompletedItemsAction_GetsTheWorkItemsFromTheSpecifiedQueueWhichHaveBeenMarkedAsComplete" xml:space="preserve">
    <value>Gets the work items from the specified queue which have been marked as complete</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetCompletedItems" xml:space="preserve">
    <value>Get Completed Items</value>
  </data>
  <data name="clsWorkQueuesActions_Params_LockedItems" xml:space="preserve">
    <value>Locked Items</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_TheCurrentlyLockedItemsInTheQueueColumnsAreItemIDTextAndLockedDatetimeTheElemen" xml:space="preserve">
    <value>The currently locked items in the queue. Columns are 'Item ID' : text, and 'Locked' : datetime. The elements in the collection will be in locked date/time order</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_TheDateTimeWhenTheItemWasLocked" xml:space="preserve">
    <value>The date/time when the item was locked</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_OptionallyAKeyValueToFilterByOnlyItemsWithThisKeyValueWillBeConsidered" xml:space="preserve">
    <value>Optionally, a key value to filter by. Only items with this key value will be considered.</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_TheNameOfTheQueueForWhichTheLockedItemsAreRequired" xml:space="preserve">
    <value>The name of the queue for which the locked items are required</value>
  </data>
  <data name="clsWorkQueuesActions_GetLockedItemsAction_RetrievesTheIDsAndLockedTimesForAllCurrentlyLockedWorkQueueItemsInTheSpecifiedQ" xml:space="preserve">
    <value>Retrieves the IDs and locked times for all currently locked work queue items in the specified queue, matching the given tags</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetLockedItems" xml:space="preserve">
    <value>Get Locked Items</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_TheCurrentlyPendingItemsHaveBeenReturned" xml:space="preserve">
    <value>The currently pending items have been returned</value>
  </data>
  <data name="clsWorkQueuesActions_Params_PendingItems" xml:space="preserve">
    <value>Pending Items</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Skip" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Maximum" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_TheCurrentlyPendingItemsInTheQueueReferencedByIDTheSingleColumnIsItemIDTextTheE" xml:space="preserve">
    <value>The currently pending items in the queue, referenced by ID. The single column is 'Item ID' : text. The elements in the collection will be in the order in which they will be loaded by the 'Get Next Item' action.</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_OptionallyTheNumberOfItemsToSkipBeforeReturningDefaultIsZeroIeReturnAllItemsFro" xml:space="preserve">
    <value>Optionally, the number of items to skip before returning. Default is zero, ie. return all items from the head of the queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_OptionallyTheMaximumNumberOfItemsToReturnDefaultIsToReturnAllItems" xml:space="preserve">
    <value>Optionally, the maximum number of items to return. Default is to return all items</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_OptionallyAKeyValueToFilterByOnlyItemsWithThisKeyValueWillBeConsidered" xml:space="preserve">
    <value>Optionally, a key value to filter by. Only items with this key value will be considered.</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_TheNameOfTheQueueForWhichThePendingItemsAreRequired" xml:space="preserve">
    <value>The name of the queue for which the pending items are required</value>
  </data>
  <data name="clsWorkQueuesActions_GetPendingItemsAction_RetrievesTheIDsForAllCurrentlyPendingWorkQueueItemsInTheSpecifiedQueueMatchingT" xml:space="preserve">
    <value>Retrieves the IDs for all currently pending work queue items in the specified queue, matching the given tags</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetPendingItems" xml:space="preserve">
    <value>Get Pending Items</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_TheItemBeingUnlockedIsCurrentlyLocked" xml:space="preserve">
    <value>The item being unlocked is currently locked</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_TheSpecifiedItemIsNoLongerLocked" xml:space="preserve">
    <value>The specified item is no longer locked</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Unlocked" xml:space="preserve">
    <value>Unlocked</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_WhetherTheItemWasUnlockedAsAResultOfThisActionOrNotIfTheItemHadFinishedBeingWor" xml:space="preserve">
    <value>Whether the item was unlocked as a result of this action or not. If the item had finished being worked elsewhere before this action had run, this will be 'False'</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_TheIDOfTheWorkQueueItemWhichShouldBeUnlocked" xml:space="preserve">
    <value>The ID of the work queue item which should be unlocked</value>
  </data>
  <data name="clsWorkQueuesActions_UnlockItemAction_UnlocksACurrentlyLockedWorkQueueItem" xml:space="preserve">
    <value>Unlocks a currently locked work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_Action_UnlockItem" xml:space="preserve">
    <value>Unlock Item</value>
  </data>
  <data name="clsWorkQueuesActions_Params_DeletionCount" xml:space="preserve">
    <value>Deletion Count</value>
  </data>
  <data name="clsWorkQueuesActions_Params_DateThreshold" xml:space="preserve">
    <value>Date Threshold</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteProcessedItemsAction_IndicatesWhetherToDeleteItemsFromAllQueues" xml:space="preserve">
    <value>Indicates whether to delete items from all queues. If this flag is set to true you cannot specify a queue to delete from. This value defaults to false if nothing is entered. </value>
  </data>
  <data name="clsWorkQueuesActions_Params_DeleteFromAllQueues" xml:space="preserve">
    <value>Delete From All Queues</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteProcessedItemsAction_ItemsProcessedBeforeTheThresholdDateWillHaveBeenDeleted" xml:space="preserve">
    <value>Items processed before the threshold date will have been deleted.</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteProcessedItemsAction_IndicatesTheNumberOfItemsWhichWereDeletedWhichMayLegitimatelyBeZero" xml:space="preserve">
    <value>Indicates the number of items which were deleted (which may legitimately be zero).</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteProcessedItemsAction_TheThresholdDateItemsCompletedOrMarkedWithAnExceptionBeforeThisDateWillBeDelete" xml:space="preserve">
    <value>The threshold date. Items completed or marked with an exception before this date will be deleted from the queue - if not given, all processed items in the specified queue will be deleted.</value>
  </data>
  <data name="clsWorkQueuesActions_DeleteProcessedItemsAction_TheNameOfTheQueueToDeleteItemsFrom" xml:space="preserve">
    <value>The name of the queue to delete items from</value>
  </data>
  <data name="clsWorkQueuesActions_Action_DeleteProcessedItems" xml:space="preserve">
    <value>Delete Processed Items</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheGivenStatusWasTooLong" xml:space="preserve">
    <value>The given status was too long</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_StatusMustBeSpecified" xml:space="preserve">
    <value>Status must be specified</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheItemMustHaveBeenLockedByThisProcess" xml:space="preserve">
    <value>The item must have been locked by this process</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheItemSStatusIsUpdatedItRemainsLocked" xml:space="preserve">
    <value>The item's status is updated. It remains locked.</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheNewStatus0CharactersMaximum" xml:space="preserve">
    <value>The new status - {0} characters maximum.</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_TheIDOfTheItemToMark" xml:space="preserve">
    <value>The ID of the item to mark</value>
  </data>
  <data name="clsWorkQueuesActions_UpdateStatusAction_UpdatesTheStatusFieldForTheItemTheStatusFieldCanBeUsedToFlagWhatHasBeenDoneInAP" xml:space="preserve">
    <value>Updates the status field for the item. The status field can be used to flag what has been done in a process so far. If a process encounters an exception, this information can be used to skip to the parts of the process not yet done for the item next time it is worked. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.

This action will also reset the Attempts column to zero, because if the status updated the process should have successfully done something.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_UpdateStatus" xml:space="preserve">
    <value>Update Status</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_UntilMustBeSpecified" xml:space="preserve">
    <value>Until must be specified</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Until" xml:space="preserve">
    <value>Until</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_TheItemMustHaveBeenLockedByThisProcess" xml:space="preserve">
    <value>The item must have been locked by this process</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_TheItemIsDeferredToTheSpecifiedTimeAndUnlocked" xml:space="preserve">
    <value>The item is deferred to the specified time, and unlocked.</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_WhenToResumeProcessingTheCase" xml:space="preserve">
    <value>When to resume processing the case</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_TheIDOfTheItemToDefer" xml:space="preserve">
    <value>The ID of the item to defer</value>
  </data>
  <data name="clsWorkQueuesActions_DeferAction_MarksTheItemAsDeferredItIsUnlockedButItWillNotBeMadeAvailableForProcessingAgain" xml:space="preserve">
    <value>Marks the item as deferred. It is unlocked, but it will not be made available for processing again until the specified time.

The attempts count for the item is reset to zero.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_Defer" xml:space="preserve">
    <value>Defer</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_ExceptionReasonMustBeSpecified" xml:space="preserve">
    <value>Exception reason must be specified</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_TheItemMustHaveBeenLockedByThisProcess" xml:space="preserve">
    <value>The item must have been locked by this process</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_AnExceptionIsMarkedOnTheItemAndItIsUnlockedPossiblyAClonedItemIsCreatedAndLocked" xml:space="preserve">
    <value>An exception is marked on the item and it is unlocked. Possibly, a cloned item is created and locked</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_TheItemIDOfTheNewlyClonedItemThisItemWillBeLockedIfKeepLockedIsTrueThisWillBeEm" xml:space="preserve">
    <value>The Item ID of the newly cloned item. This item will be locked if 'Keep Locked' is True. This will be empty if no item was cloned (ie. the item was not retried.</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_WhetherOrNotTheCloneOfTheItemShouldRemainLockedAfterTheExceptionHasBeenRegister" xml:space="preserve">
    <value>Whether or not the clone of the item should remain locked after the exception has been registered and the item is retried. Optional - default is False</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_WhetherOrNotToRetryTheItemUpToTheMaximumNumberOfAttemptsSpecifiedForTheQueueOpt" xml:space="preserve">
    <value>Whether or not to retry the item, up to the maximum number of attempts specified for the queue. Optional - if not specified, the item will be retried</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_ADescriptionOfTheReasonForTheException" xml:space="preserve">
    <value>A description of the reason for the exception</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_TheIDOfTheItemToMark" xml:space="preserve">
    <value>The ID of the item to mark</value>
  </data>
  <data name="clsWorkQueuesActions_MarkExceptionAction_MarksTheItemAsAnExceptionOptionallyRetryingItByCloningTheItemAndReturningTheIDO" xml:space="preserve">
    <value>Marks the item as an exception, optionally retrying it by cloning the item and returning the ID of the clone. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_MarkException" xml:space="preserve">
    <value>Mark Exception</value>
  </data>
  <data name="clsWorkQueuesActions_Params_NewItemID" xml:space="preserve">
    <value>New Item ID</value>
  </data>
  <data name="clsWorkQueuesActions_Params_KeepLocked" xml:space="preserve">
    <value>Keep Locked</value>
  </data>
  <data name="clsWorkQueuesActions_Params_Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="clsWorkQueuesActions_Params_ExceptionReason" xml:space="preserve">
    <value>Exception Reason</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_InvalidItemID" xml:space="preserve">
    <value>Invalid item ID</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_TheItemMustHaveBeenLockedByThisProcess" xml:space="preserve">
    <value>The item must have been locked by this process</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_TheItemIsMarkedAsCompletedAndUnlocked" xml:space="preserve">
    <value>The item is marked as completed, and unlocked</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_TheIDOfTheItemToMark" xml:space="preserve">
    <value>The ID of the item to mark</value>
  </data>
  <data name="clsWorkQueuesActions_MarkCompletedAction_MarksTheItemAsCompletedByUpdatingTheCompletedTimestampAndSettingLockedToNullThe" xml:space="preserve">
    <value>Marks the item as completed, by updating the Completed timestamp and setting Locked to null. The item must be 'owned' by the calling process - i.e. it must have been retrieved using Get Next Item.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_MarkCompleted" xml:space="preserve">
    <value>Mark Completed</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_InvalidTagFilter" xml:space="preserve">
    <value>Invalid Tag Filter: </value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_AnItemIsRetrievedFromTheQueueIfAvailable" xml:space="preserve">
    <value>An item is retrieved from the queue, if available</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_TheNumberOfAttemptsAlreadyMadeToWorkThisItem" xml:space="preserve">
    <value>The number of attempts already made to work this item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_TheStatusOfTheItem" xml:space="preserve">
    <value>The status of the item.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_TheDataAssociatedWithTheItemASingleCollectionRow" xml:space="preserve">
    <value>The data associated with the item - a single collection row.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_TheIDOfTheItemRetrievedEmptyIfThereAreNoneAvailable" xml:space="preserve">
    <value>The ID of the item retrieved - empty if there are none available.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_OptionallyATagMaskToFilterByThisCanConsistOfAnyNumberOfTagSearchesEachTermCanBe" xml:space="preserve">
    <value>Optionally, a tag mask to filter by. This can consist of any number of tag searches - each term can be separated by a semi-colon and they are all applied to the search (ie. they are AND'ed terms not OR'ed terms). For example, "Account: Joint; -Balance: Overdrawn; Card: *Visa*" will include any items which match all the terms, ie. every item must have an 'Account: Joint' tag applied, no item can have a 'Balance: Overdrawn' tag applied, every item must have a tag applied which starts with 'Card: ' and then contains the text 'Visa'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_OptionallyAKeyValueToFilterByOnlyItemsWithThisKeyValueWillBeConsidered" xml:space="preserve">
    <value>Optionally, a key value to filter by. Only items with this key value will be considered.</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_TheNameOfTheQueue" xml:space="preserve">
    <value>The name of the queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetNextItemAction_ThisActionGetsTheNextItemToBeWorkedFromTheQueueReturningItsDetailsAndLockingItS" xml:space="preserve">
    <value>This action gets the next item to be worked from the queue, returning its details and locking it so no other case can work it.

Items with higher priorities (lower numerical value) are processed first. Where the priority is the same, the next item is the one that has been in the queue the longest,  is not already locked, and is not already completed.

The Item ID returned is used to make further calls to update the work status for that item. It may be empty, in which case there are no items available. This can mean either a) the queue is empty, or b) the queue is not running. This mechanism can be used to cleanly stop all processes working a particular queue at the end of the next case. Items that have a 'deferred' time set will not be returned unless that time has been reached.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetNextItem" xml:space="preserve">
    <value>Get Next Item</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheItemSDataCollectionIsSetToTheGivenValue" xml:space="preserve">
    <value>The item's data collection is set to the given value</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheCollectionMustHaveTheSameKeyValueAsTheItemBeingUpdated" xml:space="preserve">
    <value>The collection must have the same key value as the item being updated</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheCollectionMustContainASingleRow" xml:space="preserve">
    <value>The collection must contain a single row</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheWorkItemMustHaveBeenLockedByTheSession" xml:space="preserve">
    <value>The work item must have been locked by the session</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_AnErrorOccurredSettingTheData0" xml:space="preserve">
    <value>An error occurred setting the data : {0}</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_OnlyCollectionsWithASingleRowCanBeSetOnAWorkItemThisCollectionHas0Rows" xml:space="preserve">
    <value>Only collections with a single row can be set on a work item. This collection has {0} rows</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_YouMustProvideACollectionToSetOnTheItem" xml:space="preserve">
    <value>You must provide a collection to set on the item</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheSpecifiedItemWasNotLockedByThisBusinessObject" xml:space="preserve">
    <value>The specified item was not locked by this business object</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_ItemIDIsInvalid" xml:space="preserve">
    <value>Item ID is invalid</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_ACollectionWithOneRowContainingTheDataToBeSetOnTheItemIfTheItemHasAKeyValueAndT" xml:space="preserve">
    <value>A collection with one row containing the data to be set on the item. If the item has a key value and this collection has a key value, they should match exactly.</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_TheIDOfTheWorkItemToSetTheDataOnThisItemShouldBeLockedByTheCallingSession" xml:space="preserve">
    <value>The ID of the work item to set the data on. This item should be locked by the calling session.</value>
  </data>
  <data name="clsWorkQueuesActions_SetDataAction_SetsTheDataOnTheSpecifiedItemToTheGivenValueTheCollectionMustContainOneRowExact" xml:space="preserve">
    <value>Sets the data on the specified item to the given value. 
The collection must contain one row exactly, and the key field, if present, must match the key field of the item being updated.
Also, the item must currently be locked by the current session - ie. it must have been retrieved using the 'Get Next' action.</value>
  </data>
  <data name="clsWorkQueuesActions_Action_SetData" xml:space="preserve">
    <value>Set Data</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_NoDataSpecified" xml:space="preserve">
    <value>No data specified</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_TheItemsAreAddedToTheQueue" xml:space="preserve">
    <value>The items are added to the queue</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_TheItemIDOfTheWorkQueueItem" xml:space="preserve">
    <value>The Item ID of the work queue item</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_TheIDsOfTheItemsWhichHaveBeenAddedToTheQueueInTheOrderOfTheCollectionOfDataPass" xml:space="preserve">
    <value>The IDs of the items which have been added to the queue, in the order of the collection of data passed that was input</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_OptionallyTheInitialStatusRequiredOfTheWorkQueueItemS" xml:space="preserve">
    <value>Optionally, the initial status required of the work queue item(s) </value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_OptionallyASemiColonSeparatedSetOfTagsToApplyToTheQueueItemS" xml:space="preserve">
    <value>Optionally, a semi-colon-separated set of tags to apply to the queue item(s)</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_OptionallyThePriorityForTheNewItemSLowerNumbersRepresentHigherPrioritiesTheDefa" xml:space="preserve">
    <value>Optionally, the priority for the new item(s). Lower numbers represent higher priorities. The default is 0.</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_BatchSizeDescription" xml:space="preserve">
    <value>Optionally, the batch size to use when adding many items to the queue.  A Value of 0 will process all items in one batch.  An empty field will use the default batch size of 1000.</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_OptionallyTheDateTimeTheNewItemSShouldBeDeferredUntil" xml:space="preserve">
    <value>Optionally, the date/time the new item(s) should be deferred until</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_ACollectionContainingTheDataOneRowForEachItemToBeAdded" xml:space="preserve">
    <value>A collection containing the data, one row for each item to be added</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_TheNameOfTheQueueToAddItemsTo" xml:space="preserve">
    <value>The name of the queue to add items to</value>
  </data>
  <data name="clsWorkQueuesActions_AddToQueueAction_TheDataCollectionContainsTheItemsToBeAddedToTheQueueTheCollectionMayContainSing" xml:space="preserve">
    <value>The Data collection contains the items to be added to the queue. The collection may contain single or multiple rows, with each representing an item to be added.{1}{1}If there is a failure during the process, the queue will be unchanged - i.e. no rows will be loaded even if the error occurred on the last one.{1}{1}If Defer Until is specified, the items will not be available to be worked until then. Otherwise, they are available immediately.{1}{1}If the queue has a key field defined, an item added has key data longer than the maximum permitted {0} characters, an error will occur</value>
  </data>
  <data name="clsWorkQueuesActions_Action_AddToQueue" xml:space="preserve">
    <value>Add To Queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetQueueNames_TheCollectionOfQueueNamesIsReturned" xml:space="preserve">
    <value>The collection of queue names is returned</value>
  </data>
  <data name="clsWorkQueuesActions_GetQueueNames_TheNameOfTheQueue" xml:space="preserve">
    <value>The name of the queue</value>
  </data>
  <data name="clsWorkQueuesActions_GetQueueNames_TheNamesOfTheQueuesFoundWithinTheCurrentEnvironmentContainsASingleTextColumnQue" xml:space="preserve">
    <value>The names of the queues found within the current environment. Contains a single text column 'Queue Name'.</value>
  </data>
  <data name="clsWorkQueuesActions_GetQueueNames_RetrievesTheNamesOfAllWorkQueuesInTheCurrentEnvironment" xml:space="preserve">
    <value>Retrieves the names of all work queues in the current environment</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetQueueNames" xml:space="preserve">
    <value>Get Queue Names</value>
  </data>
  <data name="clsWorkQueuesActions_AutomaticallySetExceptionAtCleanUp" xml:space="preserve">
    <value>Automatically set exception at CleanUp</value>
  </data>
  <data name="clsWorkQueuesActions_ThisInternalBusinessObjectProvidesTheAbilityForProcessesToInteractWithTheWorkQu" xml:space="preserve">
    <value>This Internal Business Object provides the ability for processes to interact with the Work Queues functionality.</value>
  </data>
  <data name="clsWorkQueuesActions_WorkQueues" xml:space="preserve">
    <value>Work Queues</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_TheOtherHolidaysWhichFallBetweenTheSpecifiedDatesInclusive" xml:space="preserve">
    <value>The other holidays which fall between the specified dates (inclusive)</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_TheDateOfTheOtherHolidayDefinedOnTheCalendar" xml:space="preserve">
    <value>The date of the other holiday defined on the calendar</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_TheLastDateToConsiderOtherHolidaysUntil" xml:space="preserve">
    <value>The last date to consider other holidays until</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_TheFirstDateToConsiderOtherHolidaysFrom" xml:space="preserve">
    <value>The first date to consider other holidays from</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetOtherHolidaysInRange_GetsAllTheOtherHolidaysSpecifiedInACalendarWhichFallWithinTheInclusiveDateRange" xml:space="preserve">
    <value>Gets all the other holidays specified in a calendar which fall within the (inclusive) date range given</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_GetOtherHolidaysInRange" xml:space="preserve">
    <value>Get Other Holidays In Range</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_ThePublicHolidaysWhichFallBetweenTheSpecifiedDatesInclusive" xml:space="preserve">
    <value>The public holidays which fall between the specified dates (inclusive)</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_TheNameOfThePublicHoliday" xml:space="preserve">
    <value>The name of the public holiday</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_TheDateOfThePublicHolidayEnabledOnTheCalendar" xml:space="preserve">
    <value>The date of the public holiday enabled on the calendar</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_TheLastDateToConsiderPublicHolidaysUntil" xml:space="preserve">
    <value>The last date to consider public holidays until</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_TheFirstDateToConsiderPublicHolidaysFrom" xml:space="preserve">
    <value>The first date to consider public holidays from</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetPublicHolidaysInRange_GetsAllTheEnabledPublicHolidaysDefinedOnACalendarWhichFallWithinTheInclusiveDat" xml:space="preserve">
    <value>Gets all the enabled public holidays defined on a calendar which fall within the (inclusive) date range given. Note that if a public holiday is configured to be ignored in a calendar, it will not be returned by this action.</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_GetPublicHolidaysInRange" xml:space="preserve">
    <value>Get Public Holidays In Range</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsOtherHoliday_TrueToIndicateThatTheGivenDateFallsOnAnotherHolidayFalseOtherwise" xml:space="preserve">
    <value>True to indicate that the given date falls on another holiday; False otherwise</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsOtherHoliday_TheDateToCheck" xml:space="preserve">
    <value>The date to check</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsOtherHoliday_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsOtherHoliday_ChecksIfTheGivenDateRepresentsADateDefinedAsAnOtherHolidayInTheSpecifiedCalendar" xml:space="preserve">
    <value>Checks if the given date represents a date defined as an 'other holiday' in the specified calendar. </value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_IsOtherHoliday" xml:space="preserve">
    <value>Is Other Holiday</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsPublicHoliday_IfDateIsAPublicHolidayThisContainsTheLabelOfThatPublicHolidayOtherwiseBlank" xml:space="preserve">
    <value>If date is a public holiday, this contains the label of that public holiday, otherwise blank</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsPublicHoliday_TrueToIndicateThatTheGivenDateFallsOnAPublicHolidayFalseOtherwise" xml:space="preserve">
    <value>True to indicate that the given date falls on a public holiday; False otherwise</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsPublicHoliday_TheDateToCheck" xml:space="preserve">
    <value>The date to check</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsPublicHoliday_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsPublicHoliday_ChecksIfTheGivenDateRepresentsAnEnabledPublicHolidayAsDefinedInTheSpecifiedCale" xml:space="preserve">
    <value>Checks if the given date represents an enabled public holiday as defined in the specified calendar. Note that if a public holiday is configured to be ignored in a calendar, this action will return False for that date</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_IsPublicHoliday" xml:space="preserve">
    <value>Is Public Holiday</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWeekend_TrueToIndicateThatTheGivenDateFallsOutsideTheWorkingWeekDefinedInTheCalendarFal" xml:space="preserve">
    <value>True to indicate that the given date falls outside the working week defined in the calendar; False otherwise.</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWeekend_TheDateToCheck" xml:space="preserve">
    <value>The date to check</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWeekend_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWeekend_ChecksIfTheGivenDateFallsOutsideTheWorkingWeekIeTheWeekendAsDefinedInTheSpecifi" xml:space="preserve">
    <value>Checks if the given date falls outside the working week - ie. the weekend - as defined in the specified calendar</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_IsWeekend" xml:space="preserve">
    <value>Is Weekend</value>
  </data>
  <data name="clsCalendarsBusinessObject_AddWorkingDays_TheDateWithTheSpecifiedNumberOfDaysAddedToIt" xml:space="preserve">
    <value>The date with the specified number of days added to it</value>
  </data>
  <data name="clsCalendarsBusinessObject_AddWorkingDays_TheNumberOfDaysToBeAddedNoteThatAValueOfZeroWillAlwaysReturnStartDateEvenIfItIs" xml:space="preserve">
    <value>The number of days to be added. Note that a value of zero will always return Start Date, even if it is not a working day</value>
  </data>
  <data name="clsCalendarsBusinessObject_AddWorkingDays_TheDateToWhichTheNumberOfWorkingDaysShouldBeAdded" xml:space="preserve">
    <value>The date to which the number of working days should be added</value>
  </data>
  <data name="clsCalendarsBusinessObject_AddWorkingDays_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_AddWorkingDays_AddsTheSpecifiedNumberOfWorkingDaysToAStartDateReturningTheResultInOrderToGetTh" xml:space="preserve">
    <value>Adds the specified number of working days to a start date returning the result. In order to get the next working day after a known date, use a 'Days' value of 1. To get the previous working day, use a value of -1. Note that calling this action with a Days value of 0 will always return Start Date, regardless of whether that is a working day or not.</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_AddWorkingDays" xml:space="preserve">
    <value>Add Working Days</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWorkingDay_TrueToIndicateTheGivenDateWasAWorkingDayFalseOtherwise" xml:space="preserve">
    <value>True to indicate the given date was a working day, False otherwise</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWorkingDay_TheDateToConsiderWhetherItIsAWorkingDayOrNot" xml:space="preserve">
    <value>The date to consider whether it is a working day or not</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWorkingDay_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_IsWorkingDay_ChecksIfTheGivenDateIsAWorkingDayOrNotAccordingToTheSpecifiedCalendar" xml:space="preserve">
    <value>Checks if the given date is a working day or not according to the specified calendar.</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_IsWorkingDay" xml:space="preserve">
    <value>Is Working Day</value>
  </data>
  <data name="clsCalendarsBusinessObject_CountWorkingDaysInRange_TheNumberOfWorkingDaysFoundWithinTheSpecifiedRangeInclusive" xml:space="preserve">
    <value>The number of working days found within the specified range, inclusive</value>
  </data>
  <data name="clsCalendarsBusinessObject_CountWorkingDaysInRange_TheLastDateToConsiderWorkingDaysUntil" xml:space="preserve">
    <value>The last date to consider working days until</value>
  </data>
  <data name="clsCalendarsBusinessObject_CountWorkingDaysInRange_TheFirstDateToConsiderWorkingDaysFrom" xml:space="preserve">
    <value>The first date to consider working days from</value>
  </data>
  <data name="clsCalendarsBusinessObject_CountWorkingDaysInRange_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_CountWorkingDaysInRange_CountsTheNumberOfWorkingDaysFoundWithinTheGivenRangeInclusive" xml:space="preserve">
    <value>Counts the number of working days found within the given range (inclusive). </value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_CountWorkingDaysInRange" xml:space="preserve">
    <value>Count Working Days In Range</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_TheWorkingDaysWhichFallBetweenTheSpecifiedDatesInclusive" xml:space="preserve">
    <value>The working days which fall between the specified dates (inclusive)</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_AWorkingDateAsDefinedByTheSpecifiedCalendarWhichFallsFromFirstDateUpToAndInclud" xml:space="preserve">
    <value>A working date as defined by the specified calendar which falls from First Date up to and including Last Date</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_TheLastDateToConsiderWorkingDaysUntil" xml:space="preserve">
    <value>The last date to consider working days until</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_TheFirstDateToConsiderWorkingDaysFrom" xml:space="preserve">
    <value>The first date to consider working days from</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_TheNameOfTheCalendarDefinedInSystemManager" xml:space="preserve">
    <value>The name of the calendar defined in System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_GetWorkingDaysInRange_GetsTheWorkingDaysAsConfiguredOnTheSpecifiedCalendarStartingAndEndingOnTheSpeci" xml:space="preserve">
    <value>Gets the working days as configured on the specified calendar, starting and ending on the specified dates.</value>
  </data>
  <data name="clsCalendarsBusinessObject_Action_GetWorkingDaysInRange" xml:space="preserve">
    <value>Get Working Days In Range</value>
  </data>
  <data name="clsCalendarsBusinessObject_CalendarAction_TheParameter0IsRequiredAndWasNotProvided" xml:space="preserve">
    <value>The parameter '{0}' is required and was not provided</value>
  </data>
  <data name="clsCalendarsBusinessObject_CalendarAction_NoCalendarNameSpecified" xml:space="preserve">
    <value>No calendar name specified</value>
  </data>
  <data name="clsCalendarsBusinessObject_CalendarAction_01DCannotBeLaterThan23D" xml:space="preserve">
    <value>{0} ({1:d}) cannot be later than {2} ({3:d})</value>
  </data>
  <data name="clsCalendarsBusinessObject_CalendarAction_TheSpecifiedCalendarMustExistWithinSystemManager" xml:space="preserve">
    <value>The specified calendar must exist within System Manager</value>
  </data>
  <data name="clsCalendarsBusinessObject_CalendarAction_NoChange" xml:space="preserve">
    <value>No Change</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_OtherHolidays" xml:space="preserve">
    <value>Other Holidays</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_PublicHolidays" xml:space="preserve">
    <value>Public Holidays</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_WorkingDays" xml:space="preserve">
    <value>Working Days</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_Days" xml:space="preserve">
    <value>Days</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_IsOtherHoliday" xml:space="preserve">
    <value>Is Other Holiday</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_IsPublicHoliday" xml:space="preserve">
    <value>Is Public Holiday</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_IsWeekend" xml:space="preserve">
    <value>Is Weekend</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_IsWorkingDay" xml:space="preserve">
    <value>Is Working Day</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_ResultDate" xml:space="preserve">
    <value>Result Date</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_LastDate" xml:space="preserve">
    <value>Last Date</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_FirstDate" xml:space="preserve">
    <value>First Date</value>
  </data>
  <data name="clsCalendarsBusinessObject_Params_CalendarName" xml:space="preserve">
    <value>Calendar Name</value>
  </data>
  <data name="clsCalendarsBusinessObject_NoCalendarWithTheName0Found" xml:space="preserve">
    <value>No calendar with the name '{0}' found</value>
  </data>
  <data name="clsCalendarsBusinessObject_ThisInternalBusinessObjectProvidesTheAbilityForProcessesToInteractWithWorkingDa" xml:space="preserve">
    <value>This Internal Business Object provides the ability for processes to interact with working days defined in calendars within System Manager.</value>
  </data>
  <data name="clsCalendarsBusinessObject_Calendars" xml:space="preserve">
    <value>Calendars</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_TheCredentialsAreMarkedAsInvalid" xml:space="preserve">
    <value>The credentials are marked as invalid</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_TheNameOfTheCredentials" xml:space="preserve">
    <value>The name of the credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsMarkAsInvalid_SetsTheStatusOfTheseCredentialsToInvalid00AnExceptionWillOccurIfAccessToTheseCr" xml:space="preserve">
    <value>Sets the status of these credentials to invalid.{0}{0}An Exception will occur if access to these credentials is not allowed (based on the running Resource, Process and User).</value>
  </data>
  <data name="clsCredentialsActions_Action_MarkasInvalid" xml:space="preserve">
    <value>Mark as Invalid</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_PropertyValueNotSpecified" xml:space="preserve">
    <value>Property value not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_PropertyNameNotSpecified" xml:space="preserve">
    <value>Property name not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_Params_PropertyName" xml:space="preserve">
    <value>Property Name</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_TheRequestedPropertyIsSetToTheSpecifiedValue" xml:space="preserve">
    <value>The requested property is set to the specified value</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_TheValueOfTheProperty" xml:space="preserve">
    <value>The value of the property</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_TheNameOfTheProperty" xml:space="preserve">
    <value>The name of the property</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_TheNameOfTheCredentials" xml:space="preserve">
    <value>The name of the credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSetProperty_SetsTheValueOfTheSpecifiedCredentialsProperty00AnExceptionWillOccurIfAccessToTh" xml:space="preserve">
    <value>Sets the value of the specified credentials property.{0}{0}An Exception will occur if access to these credentials is not allowed (based on the running Resource, Process and User).If the credential does not contain the specified property, the property will be added and the value set as specified.</value>
  </data>
  <data name="clsCredentialsActions_Action_SetProperty" xml:space="preserve">
    <value>Set Property</value>
  </data>
  <data name="clsCredentialsActions_Params_PropertyValue" xml:space="preserve">
    <value>Property Value</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_PropertyNameNotSpecified" xml:space="preserve">
    <value>Property name not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_APropertyWithTheSpecifiedNameMustBeAssociatedWithTheCredentials" xml:space="preserve">
    <value>A property with the specified name must be associated with the credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_TheValueOfTheRequestedPropertyIsReturned" xml:space="preserve">
    <value>The value of the requested property is returned</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_TheValueOfTheProperty" xml:space="preserve">
    <value>The value of the property</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_TheNameOfTheProperty" xml:space="preserve">
    <value>The name of the property</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_TheNameOfTheCredentials" xml:space="preserve">
    <value>The name of the credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGetProperty_ReturnsTheValueOfTheSpecifiedCredentialsProperty00AnExceptionWillOccurIfAccessT" xml:space="preserve">
    <value>Returns the value of the specified credentials property.{0}{0}An Exception will occur if access to these credentials is not allowed (based on the running Resource, Process and User) or if the credentials do not contain a property with the specified name.</value>
  </data>
  <data name="clsCredentialsActions_Action_GetProperty" xml:space="preserve">
    <value>Get Property</value>
  </data>
  <data name="clsCredentialsActions_Params_Credentials" xml:space="preserve">
    <value>Credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_UnrecognisedCredentialStatus0" xml:space="preserve">
    <value>Unrecognised credential status: {0}</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_ACollectionOfCredentialsMatchingTheSpecifiedStatusIsReturned" xml:space="preserve">
    <value>A collection of credentials matching the specified status is returned</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_ACollectionOfCredentialsMatchingSpecifiedStatus" xml:space="preserve">
    <value>A collection of credentials matching specified status</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_TheCredentialStatus" xml:space="preserve">
    <value>The credential status</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_TheExpiryDate" xml:space="preserve">
    <value>The expiry date</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_TheCredentialDescription" xml:space="preserve">
    <value>The credential description</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_TheNameOfTheCredential" xml:space="preserve">
    <value>The name of the credential</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_CredentialStatusValidInvalidOrExpired" xml:space="preserve">
    <value>Credential status (Valid, Invalid or Expired)</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsList_ListsAvailableCredentials00IfNoStatusIsSpecifiedThenAllCredentialsWillBeReturned" xml:space="preserve">
    <value>Lists available credentials.{0}{0}If no status is specified then all credentials will be returned.</value>
  </data>
  <data name="clsCredentialsActions_Action_List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_CannotGeneratePassword0" xml:space="preserve">
    <value>Cannot generate password ({0})</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_TheGeneratedPasswordIsReturned" xml:space="preserve">
    <value>The generated password is returned</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_TheGeneratedPassword" xml:space="preserve">
    <value>The generated password</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_AnyAdditionalCharactersThatOneOfShouldBeUsedAtLeastOnce" xml:space="preserve">
    <value>Any additional characters that one of should be used at least once</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_WhetherToUseNumericCharacters" xml:space="preserve">
    <value>Whether to use numeric characters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_WhetherToUseLowerCaseLetters" xml:space="preserve">
    <value>Whether to use lower case letters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_WhetherToUseUpperCaseLetters" xml:space="preserve">
    <value>Whether to use upper case letters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_TheLengthOfThePasswordMustBeBetween1And20" xml:space="preserve">
    <value>The length of the password, must be between 1 and 20</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGeneratePassword_GenerateAndReturnARandomPassword" xml:space="preserve">
    <value>Generate and return a random password</value>
  </data>
  <data name="clsCredentialsActions_Action_GeneratePassword" xml:space="preserve">
    <value>Generate Password</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheCredentialsWillHaveBeenUpdatedAndSetAsValidAndTheNewlyGeneratedPasswordRetur" xml:space="preserve">
    <value>The credentials will have been updated and set as valid, and the newly generated password returned.</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_CannotGeneratePassword0" xml:space="preserve">
    <value>Cannot generate password ({0})</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_ExpiryDateCannotBeInThePast" xml:space="preserve">
    <value>Expiry date cannot be in the past</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_UsernameLengthCannotBeGreaterThan64" xml:space="preserve">
    <value>Username length cannot be greater than 64</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_Params_AdditionalCharacters" xml:space="preserve">
    <value>Additional Characters</value>
  </data>
  <data name="clsCredentialsActions_Params_UseNumeric" xml:space="preserve">
    <value>Use Numeric</value>
  </data>
  <data name="clsCredentialsActions_Params_UseUpperCase" xml:space="preserve">
    <value>Use Upper Case</value>
  </data>
  <data name="clsCredentialsActions_Params_UseLowerCase" xml:space="preserve">
    <value>Use Lower Case</value>
  </data>
  <data name="clsCredentialsActions_Params_Length" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheGeneratedPassword" xml:space="preserve">
    <value>The generated password</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_AnyAdditionalCharactersOneOfWhichShouldBeUsedAtLeastOnceAllCharactersGivenInThi" xml:space="preserve">
    <value>Any additional characters, one of which should be used at least once. All characters given in this argument must be unique</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_WhetherToUseNumericCharacters" xml:space="preserve">
    <value>Whether to use numeric characters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_WhetherToUseLowerCaseLetters" xml:space="preserve">
    <value>Whether to use lower case letters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_WhetherToUseUpperCaseLetters" xml:space="preserve">
    <value>Whether to use upper case letters</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheLengthOfThePasswordMustBeBetween1And20" xml:space="preserve">
    <value>The length of the password, must be between 1 and 20</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheExpiryDate" xml:space="preserve">
    <value>The expiry date</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheUserName" xml:space="preserve">
    <value>The user name</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_TheNameOfTheCredentials" xml:space="preserve">
    <value>The name of the credentials</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGenerateAndSet_SetTheSpecifiedCredentialsWithARandomPassword00AnExceptionWillOccurIfAccessToTh" xml:space="preserve">
    <value>Set the specified credentials, with a random password.{0}{0}An Exception will occur if access to these credentials is not allowed (based on the running Resource, Process and User). If the credentials are currently invalid they will be marked as valid.</value>
  </data>
  <data name="clsCredentialsActions_Action_GenerateandSet" xml:space="preserve">
    <value>Generate and Set</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_TheCredentialsWillHaveBeenUpdatedAndSetAsValid" xml:space="preserve">
    <value>The credentials will have been updated and set as valid</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_ExpiryDateCannotBeInThePast" xml:space="preserve">
    <value>Expiry date cannot be in the past</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_PasswordLengthCannotBeZero" xml:space="preserve">
    <value>Password length cannot be zero</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_UsernameLengthCannotBeGreaterThan64" xml:space="preserve">
    <value>Username length cannot be greater than 64</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_TheExpiryDate" xml:space="preserve">
    <value>The expiry date</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_ThePassword" xml:space="preserve">
    <value>The password</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_TheUserName" xml:space="preserve">
    <value>The user name</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_TheNameOfTheCredentialsToSet" xml:space="preserve">
    <value>The name of the credentials to set</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsSet_SetTheSpecifiedCredentialsAnExceptionWillOccurIfAccessToTheseCredentialsIsNotAl" xml:space="preserve">
    <value>Set the specified credentials.

An Exception will occur if access to these credentials is not allowed (based on the running Resource, Process and User). If the credentials are currently invalid they will be marked as valid.</value>
  </data>
  <data name="clsCredentialsActions_Action_Set" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="clsCredentialsActions_Params_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="clsCredentialsActions_Params_ExpiryDate" xml:space="preserve">
    <value>Expiry Date</value>
  </data>
  <data name="clsCredentialsActions_Params_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="clsCredentialsActions_Params_Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_CredentialsNameNotSpecified" xml:space="preserve">
    <value>Credentials name not specified</value>
  </data>
  <data name="clsCredentialsActions_Params_CredentialsName" xml:space="preserve">
    <value>Credentials Name</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheCredentialsMustBeAccessibleToTheRunningUserProcessAndResource" xml:space="preserve">
    <value>The credentials must be accessible to the running user, process and resource</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_CredentialsWithTheSpecifiedNameMustExist" xml:space="preserve">
    <value>Credentials with the specified name must exist</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_ACredentialsKeyMustBeDefinedWithinThisBluePrismEnvironment" xml:space="preserve">
    <value>A credentials key must be defined within this Blue Prism environment</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheCredentialsAreReturned" xml:space="preserve">
    <value>The credentials are returned</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheStatus" xml:space="preserve">
    <value>The status</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheExpiryDate" xml:space="preserve">
    <value>The expiry date</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_ThePassword" xml:space="preserve">
    <value>The password</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheUserName" xml:space="preserve">
    <value>The user name</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_TheNameOfTheCredentialsToGet" xml:space="preserve">
    <value>The name of the credentials to get</value>
  </data>
  <data name="clsCredentialsActions_clsCredentialsGet_GetTheSpecifiedSetOfCredentialsAnExceptionWillOccurIfAccessToTheCredentialsIsNo" xml:space="preserve">
    <value>Get the specified set of credentials.

An Exception will occur if access to the credentials is not allowed, based on the running Resource, Process and User.</value>
  </data>
  <data name="clsCredentialsActions_Action_Get" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="clsCredentialsActions_ThisInternalBusinessObjectProvidesTheAbilityForProcessesToInteractWithTheCreden" xml:space="preserve">
    <value>This Internal Business Object provides the ability for processes to interact with the Credentials Management functionality.</value>
  </data>
  <data name="clsCredentialsActions_Credentials" xml:space="preserve">
    <value>Credentials</value>
  </data>
  <data name="clsDataGatewaysActions_Action_SendCustomData" xml:space="preserve">
    <value>Send Custom Data</value>
  </data>
  <data name="clsDataGatewaysActions_clsDataGatewaysSendCustomData_CollectionOfDataToBeSentToTheDataGateway" xml:space="preserve">
    <value>This action can be used to serialize and send a Blue Prism collection to the data gateway. 
    There is a limit of approximately ~4MB on the data that can be sent through this method. 
    This is due to limitations enforced by the JSON Serializer.</value>
  </data>
  <data name="clsDataGatewaysActions_SendCustomData_YouMustBeUsingAClientToServerConnectionToUseTheDataGateway" xml:space="preserve">
    <value>You must be using a client to server connection to use the data gateway.</value>
  </data>
  <data name="clsDataGatewaysActions_clsDataGatewaysSendCustomData_CustomData" xml:space="preserve">
    <value>The Blue Prism collection to send to the data gateways table</value>
  </data>
  <data name="clsDataGatewaysActions_Params_CustomData" xml:space="preserve">
    <value>Custom Data</value>
  </data>
  <data name="clsDataGatewaysActions_ThisInternalBusinessObjectProvidesTheAbilityForProcessesToInteractWithTheDataG" xml:space="preserve">
    <value>This Internal Business Object provides the ability for processes to interact with the Data Gateways functionality.</value>
  </data>
  <data name="clsDataGatewaysActions_DataGateways" xml:space="preserve">
    <value>Data Gateways</value>
  </data>
  <data name="clsDataGatewaysActions_Preconditions" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="clsDataGatewaysActions_EndPoint" xml:space="preserve">
    <value>No changes are made by this action</value>
  </data>
  <data name="EncryptionBusinessObject_DecryptValueAction_TheDecryptedValueIsReturned" xml:space="preserve">
    <value>The decrypted value is returned</value>
  </data>
  <data name="EncryptionBusinessObject_DecryptValueAction_TheDecrypted0Value" xml:space="preserve">
    <value>The decrypted {0} value</value>
  </data>
  <data name="EncryptionBusinessObject_DecryptValueAction_TheEncryptedDataToBeDecryptedIntoA0DataItem" xml:space="preserve">
    <value>The encrypted data to be decrypted into a {0} data item</value>
  </data>
  <data name="EncryptionBusinessObject_DecryptValueAction_TheNameOfTheSchemeWhichShouldDecryptTheData" xml:space="preserve">
    <value>The name of the scheme which should decrypt the data.</value>
  </data>
  <data name="EncryptionBusinessObject_DecryptValueAction_DecryptsTheGivenValueIntoA0DataItemUsingTheSpecifiedScheme" xml:space="preserve">
    <value>Decrypts the given value into a {0} data item using the specified scheme</value>
  </data>
  <data name="EncryptionBusinessObject_Action_Decrypt" xml:space="preserve">
    <value>Decrypt {0}</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptValueAction_TheEncryptedValueIsReturned" xml:space="preserve">
    <value>The encrypted value is returned</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptValueAction_TheEncryptedValueInTextForm" xml:space="preserve">
    <value>The encrypted value in text form</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptValueAction_The0ValueToBeEncrypted" xml:space="preserve">
    <value>The {0} value to be encrypted</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptValueAction_TheNameOfTheSchemeWhichShouldEncryptTheData" xml:space="preserve">
    <value>The name of the scheme which should encrypt the data.</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptValueAction_EncryptsTheGivenValueUsingTheSpecifiedScheme" xml:space="preserve">
    <value>Encrypts the given value using the specified scheme</value>
  </data>
  <data name="EncryptionBusinessObject_Action_Encrypt" xml:space="preserve">
    <value>Encrypt {0}</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptionAction_TheSpecifiedEncryptionSchemeMustBeAvailableToTheServerAndHaveAValidKeyEitherOnT" xml:space="preserve">
    <value>The specified encryption scheme must be available to the server, and have a valid key either on the Blue Prism Server or in the database</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptionAction_AnErrorOccurredInThe0Action1" xml:space="preserve">
    <value>An error occurred in the {0} action: {1}</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptionAction_AnErrorOccurredInThe0ActionNoEncrypterDecrypterWithTheName1WasFound" xml:space="preserve">
    <value>An error occurred in the {0} action: No Encrypter/Decrypter with the name '{1}' was found</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptionAction_NoEncryptionSchemeWasSpecifiedInThe0Action" xml:space="preserve">
    <value>No encryption scheme was specified in the {0} action</value>
  </data>
  <data name="EncryptionBusinessObject_Params_EncryptedValue" xml:space="preserve">
    <value>Encrypted Value</value>
  </data>
  <data name="EncryptionBusinessObject_Params_PlainValue" xml:space="preserve">
    <value>Plain Value</value>
  </data>
  <data name="EncryptionBusinessObject_Params_EncryptionScheme" xml:space="preserve">
    <value>Encryption Scheme</value>
  </data>
  <data name="EncryptionBusinessObject_ThisInternalBusinessObjectProvidesTheAbilityForProcessesToEncryptOrDecryptDataU" xml:space="preserve">
    <value>This Internal Business Object provides the ability for processes to encrypt or decrypt data using pre-defined encryption schemes setup within Blue Prism configuration.</value>
  </data>
  <data name="EncryptionBusinessObject_Encryption" xml:space="preserve">
    <value>Encryption</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_NoChangesAreMadeByThisAction" xml:space="preserve">
    <value>No changes are made by this action</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_LockHeld" xml:space="preserve">
    <value>Lock Held</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_ANameMustBeProvidedToQueryALock" xml:space="preserve">
    <value>A name must be provided to query a lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_TheCommentCurrentlySetOnTheLockRegardlessOfWhetherTheLockIsCurrentlyHeld" xml:space="preserve">
    <value>The comment currently set on the lock, regardless of whether the lock is currently held</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_FlagIndicatingIfTheLockIsHeldByTheSpecifiedTokenIfOneWasGivenOrAtAllOtherwise" xml:space="preserve">
    <value>Flag indicating if the lock is held by the specified token, if one was given, or at all otherwise</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_TheTokenToCheckAgainstTheLockIfProvidedChecksIfTheLockIsHeldByThisTokenOtherwis" xml:space="preserve">
    <value>The token to check against the lock - if provided, checks if the lock is held by this token, otherwise just checks if the lock is held at all.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_TheNameOfTheRequiredLockMandatoryParameter" xml:space="preserve">
    <value>The name of the required lock. Mandatory parameter.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_QueryLockAction_QueriesTheCurrentStateOfTheLock" xml:space="preserve">
    <value>Queries the current state of the lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Action_QueryLock" xml:space="preserve">
    <value>Query Lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_TheSpecifiedLockSWillHaveBeenReleased" xml:space="preserve">
    <value>The specified lock(s) will have been released.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_ATokenMustBeProvidedToReleaseALock" xml:space="preserve">
    <value>A token must be provided to release a lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_TrueToReleaseLocksMatchingTheSpecifiedConstraintsAcrossAllSessionsFalseToOnlyRe" xml:space="preserve">
    <value>True to release locks matching the specified constraints across all sessions; False to only release locks acquired in the current session. Default is False</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_AllSessions" xml:space="preserve">
    <value>All Sessions</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_TheCommentsToSetOnTheLockS" xml:space="preserve">
    <value>The comments to set on the lock(s)</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_TheTokenAssociatedWithTheLockSToBeReleasedMandatoryParameter" xml:space="preserve">
    <value>The token associated with the lock(s) to be released. Mandatory parameter.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_Token" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_TheNameOfTheSpecificLockToBeReleasedDefaultBehaviourIsToReleaseAllLocksWithTheG" xml:space="preserve">
    <value>The name of the specific lock to be released. Default behaviour is to release all locks with the given token.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_ReleasesTheLockSAssociatedWithTheGivenNameAndToken" xml:space="preserve">
    <value>Releases the lock(s) associated with the given name and token</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Action_ReleaseLock" xml:space="preserve">
    <value>Release Lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_TheTokenProvidedGuaranteesTheLockIfItIsEmptyThenTheLockWasNotAcquired" xml:space="preserve">
    <value>The token provided guarantees the lock - if it is empty, then the lock was not acquired</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_ANameMustBeProvidedToAcquireALock" xml:space="preserve">
    <value>A name must be provided to acquire a lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_TheTokenRegisteredAgainstTheLockThisWillBeEmptyIfTheLockCouldNotBeAcquired" xml:space="preserve">
    <value>The token registered against the lock. This will be empty if the lock could not be acquired</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_TheCommentsToSetOnTheLock" xml:space="preserve">
    <value>The comments to set on the lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_ThePreferredTokenToUseForTheLockDefaultBehaviourIsToGenerateANewUniqueToken" xml:space="preserve">
    <value>The preferred token to use for the lock. Default behaviour is to generate a new unique token.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLockAction_KeepEnviromentLockOnRelease" xml:space="preserve">
    <value>The environment lock will be kept after that lock is released. Default behaviour is to delete the lock.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_PreferredToken" xml:space="preserve">
    <value>Preferred Token</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_KeepLock" xml:space="preserve">
    <value>Keep Environment Lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_TheMaximumAmountOfTimeToAwaitTheLockDefaultIsToWaitForever" xml:space="preserve">
    <value>The maximum amount of time to await the lock. Default is to wait forever</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Params_Timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_TheNameOfTheRequiredLockMandatoryParameter" xml:space="preserve">
    <value>The name of the required lock. Mandatory parameter.</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_AcquireLockAction_AcquiresTheLockAssociatedWithTheGivenNameIfThisSessionAlreadyHoldsTheRequiredLo" xml:space="preserve">
    <value>Acquires the lock associated with the given name. If this session already holds the required lock, it will be re-acquired with a new token</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_Action_AcquireLock" xml:space="preserve">
    <value>Acquire Lock</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_CommentIsTooLargeMaximumOf0CharactersIsAllowedGivenCommentWas1Characters" xml:space="preserve">
    <value>Comment is too large. Maximum of {0} characters is allowed. Given comment was {1} characters</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_PreferredTokenIsTooLargeMaximumOf0CharactersIsAllowedGivenTokenWas1Characters" xml:space="preserve">
    <value>Preferred Token is too large. Maximum of {0} characters is allowed. Given token was {1} characters</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_NameIsTooLargeMaximumOf0CharactersIsAllowedGivenNameWas1Characters" xml:space="preserve">
    <value>Name is too large. Maximum of {0} characters is allowed. Given name was {1} characters</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_ThisNameIsReservedForLocksThatProtectSendingPublishedDashboardDataToDataGateways" xml:space="preserve">
    <value>The name "{0}" is reserved for environment locks that are used when sending Published Dashboard data to the Data Gateway. Please select a different name for this environment lock at stage "{1}".</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_SendPublishedDashboards" xml:space="preserve">
    <value>SEND_PUBLISHED_DASHBOARDS</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ReleaseLocksException" xml:space="preserve">
    <value>Release Locks Exception</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_ProvidesABasicEnvironmentWideLockHandlingFacilityToAllowHandlingOfCriticalSecti" xml:space="preserve">
    <value>Provides a basic environment-wide lock handling facility to allow handling of critical sections of processes</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvironmentLocking" xml:space="preserve">
    <value>Environment Locking</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_AnUnexpectedErrorOccurredCommunicatingWithTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred communicating with the Decipher server</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_AnUnexpectedErrorOccurredOnTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred on the Decipher server</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_TheBatchCannotBeSubmittedInItsCurrentState" xml:space="preserve">
    <value>The project cannot be submitted in its current state.</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_TheRequestedBatchCannotBeFound" xml:space="preserve">
    <value>The requested project cannot be found.</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_TheCurrentUserDoesNotHavePermissionToAccessThisFeature" xml:space="preserve">
    <value>The current user does not have permission to access this feature.</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_InvalidBatchID" xml:space="preserve">
    <value>Invalid project ID</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_QueueCannotBeFound" xml:space="preserve">
    <value>Queue cannot be found</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_NoBatchIDSpecified" xml:space="preserve">
    <value>No project ID specified</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_QueueName" xml:space="preserve">
    <value>Queue Name</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_DocumentData" xml:space="preserve">
    <value>Document data</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_DocumentId" xml:space="preserve">
    <value>The ID of the document</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_IfProvidedOverridesTheDefaultQueueToPutResultsForThisDocumentTypeIn" xml:space="preserve">
    <value>If provided, overrides the default queue to output results to</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_TheIDOfTheCreatedBatch" xml:space="preserve">
    <value>The unique ID of the project you want to be submitted</value>
  </data>
  <data name="DocumentProcessingSubmitBatchAction_SubmitsABatchOfDocumentsForProcessing" xml:space="preserve">
    <value>Submits a project for processing.</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Action_SubmitBatch" xml:space="preserve">
    <value>Submit Project</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_AnUnexpectedErrorOccurredCommunicatingWithTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred communicating with the Decipher server</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_AnUnexpectedErrorOccurredOnTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred on the Decipher server</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_TheBatchIsNotAbleToReceiveFilesInItsCurrentState" xml:space="preserve">
    <value>The batch is not able to receive files in its current state.</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_TheRequestedBatchCannotBeFound" xml:space="preserve">
    <value>The requested project cannot be found.</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_TheCurrentUserDoesNotHavePermissionToAccessThisFeature" xml:space="preserve">
    <value>The current user does not have permission to access this feature.</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_InvalidDataInRequestPleaseCheckThatAllRequiredFieldsHaveBeenProvidedAndAreCorre" xml:space="preserve">
    <value>Invalid data in request. Please check that all required fields have been provided and are correct and that the file is a valid image file.</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_FileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_NoFileNameSpecified" xml:space="preserve">
    <value>No fileName specified</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_NoBatchIDSpecified" xml:space="preserve">
    <value>No project ID specified</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_BatchID" xml:space="preserve">
    <value>Project ID</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_TheNameOfTheNewBatch" xml:space="preserve">
    <value>Path to the file to be added to the project</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_TheIDOfTheCreatedBatch" xml:space="preserve">
    <value>The unique ID of the project you want to file to be added to</value>
  </data>
  <data name="DocumentProcessingAddDocumentToBatchAction_AddsADocumentToAnExistingBatch" xml:space="preserve">
    <value>Adds a document to an existing project.</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Action_AddDocumenttoBatch" xml:space="preserve">
    <value>Add Document to Project</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheBatchTypeIdentifier" xml:space="preserve">
    <value>The project type identifier</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_AnUnexpectedErrorOccurredCommunicatingWithTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred communicating with the Decipher server</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_AnUnexpectedErrorOccurredOnTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred on the Decipher server</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheRequestedBatchTypeCannotBeFound" xml:space="preserve">
    <value>The requested project type cannot be found.</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheCurrentUserDoesNotHavePermissionToAccessThisFeature" xml:space="preserve">
    <value>The current user does not have permission to access this feature.</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_InvalidDataInRequestPleaseCheckThatAllRequiredFieldsHaveBeenProvidedAndAreCorre" xml:space="preserve">
    <value>Invalid data in request. Please check that all required fields have been provided and are correct.</value>
  </data>
  <data name="DocumentProcessingGetBatchDataAction_AnUnexpectedErrorOccurredCommunicatingWithTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred communicating with the Decipher server</value>
  </data>
  <data name="DocumentProcessingGetBatchDataAction_AnUnexpectedErrorOccurredOnTheDocumentProcessingServer" xml:space="preserve">
    <value>An unexpected error occurred on the Decipher server</value>
  </data>
  <data name="DocumentProcessingGetBatchDataAction_TheCurrentUserDoesNotHavePermissionToAccessThisFeature" xml:space="preserve">
    <value>The current user does not have permission to access this feature.</value>
  </data>
  <data name="DocumentProcessingGetBatchDataAction_InvalidDataInRequestPleaseCheckThatAllRequiredFieldsHaveBeenProvidedAndAreCorre" xml:space="preserve">
    <value>Invalid data in request. Please check that all required fields have been provided and are correct.</value>
  </data>
  <data name="DocumentProcessingGetBatchDataAction_TheRequestedBatchTypeCannotBeFound" xml:space="preserve">
    <value>The requested document cannot be found.</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_NoBatchNameSpecified" xml:space="preserve">
    <value>No project name specified</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_NoBatchTypeNameSpecified" xml:space="preserve">
    <value>No project type name specified</value>
  </data>
  <data name="DocumentProcessingGetDocumentDataAction_NoDocumentIdSpecified" xml:space="preserve">
    <value>No document ID specified</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Params_BatchTypeName" xml:space="preserve">
    <value>Project Type Name</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheIDOfTheCreatedBatch" xml:space="preserve">
    <value>The unique ID of the project you just created</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_ADescriptionOfTheNewBatch" xml:space="preserve">
    <value>A description of the new project (optional)</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheNameOfTheNewBatch" xml:space="preserve">
    <value>The name of the project you want to create, (this is not the same as the Project ID)</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_TheNameOfTheTypeOfBatchToCreate" xml:space="preserve">
    <value>Must exactly match an existing project type which has been configured in Decipher</value>
  </data>
  <data name="DocumentProcessingGetDocumentDataAction_TheIDOfTheDocumentToRetrieveTheDataOf" xml:space="preserve">
    <value>The ID of the document from which to retrieve data.</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_CreateANewBatchReadyToReceiveDocuments" xml:space="preserve">
    <value>Create a new project ready to receive documents.</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_RetrieveTheDataThatWasExtractedFromTheDocumentByDocumentProcessing" xml:space="preserve">
    <value>Retrieve the data that was extracted from the document by Decipher.</value>
  </data>
  <data name="DocumentProcessingGetDocumentDatahAction_TheDataExtractedFromTheDocument" xml:space="preserve">
    <value>The data extracted from the document by Decipher</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Action_CreateBatch" xml:space="preserve">
    <value>Create Project</value>
  </data>
  <data name="DocumentProcessingBusinessObject_Action_GetDocumentData" xml:space="preserve">
    <value>Get Document Data</value>
  </data>
  <data name="DocumentProcessingBusinessObject_DocumentProcessing" xml:space="preserve">
    <value>Decipher</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_MultipleBatchTypesOfThisNameExist" xml:space="preserve">
    <value>Multiple project types exist with this name</value>
  </data>
  <data name="DocumentProcessingCreateBatchAction_NoBatchTypesOfThisNameExist" xml:space="preserve">
    <value>No project types with this name exist</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_ThisNameIsReservedForWorkQueueSnapshots" xml:space="preserve">
    <value>The name "{0}" is reserved for environment locks that are used when taking data snapshots for work queue analysis. Please select a different name for this environment lock at stage "{1}".</value>
  </data>
  <data name="clsEnvironmentLockingBusinessObject_EnvLockingAction_ThisNameIsReservedForMIReporting" xml:space="preserve">
    <value>The name "{0}" is reserved for environment locks that are used when aggregating data for MI Reporting. Please select a different name for this environment lock at stage "{1}".</value>
  </data>
  <data name="clsProcessParameter_Direction_In" xml:space="preserve">
    <value>In</value>
  </data>
  <data name="clsProcessParameter_Direction_None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="clsProcessParameter_Direction_Out" xml:space="preserve">
    <value>Out</value>
  </data>
  <data name="EncryptionBusinessObject_EncryptionAction_AnErrorOccurredInTheEncryptionScheme0IsNotFipsCompliantInAction1" xml:space="preserve">
    <value>The encryption scheme: {0} is not fips compliant, in action: {1}</value>
  </data>
  <data name="clsWorkQueuesActions_Action_GetItemById" xml:space="preserve">
    <value>Get Item By ID</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemByIdAction_AnItemIsRetrievedFromTheQueueIfAvailable" xml:space="preserve">
    <value>An item is retrieved from the queue if available</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemByIdAction_NoItemIdSpecified" xml:space="preserve">
    <value>No Item Id Specified</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemByIdAction_TheIdOfTheQueueItem" xml:space="preserve">
    <value>The Id of the queue item</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemByIdAction_ThisActionGetsTheItemCorrespondingToTheId" xml:space="preserve">
    <value>This action gets the item corresponding to the Id</value>
  </data>
  <data name="clsWorkQueuesActions_GetItemByIdAction_TheNameOfTheQueue" xml:space="preserve">
    <value>The name of the queue.</value>
  </data>
  <data name="clsWorkQueueActions_GetExceptionItemsAction_TheNameOfTheResourceThatWorkedTheExceptionedItems" xml:space="preserve">
    <value>Optionally, the name of the resource that worked the exceptioned items</value>
  </data>
  <data name="clsWorkQueueActions_Params_ResourceName" xml:space="preserve">
    <value>Resource Name</value>
  </data>
  <data name="clsWorkQueuesActions_Params_BatchSize" xml:space="preserve">
    <value>Batch Size</value>
  </data>
  <data name="clsCredentialsActions_Params_Description" xml:space="preserve">
    <value>Description</value>
  </data>
</root>
