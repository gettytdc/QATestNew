<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="clsApplicationMember_Index" xml:space="preserve">
    <value>T_Index</value>
  </data>
  <data name="clsApplicationMember_ExpectedXMLElementNamed0Found1" xml:space="preserve">
    <value>T_Expected XML element named '{0}'; Found: T_'{1}'</value>
  </data>
  <data name="clsApplicationMember_CannotLoadApplicationMemberDataFromANullXMLElement" xml:space="preserve">
    <value>T_Cannot load application member data from a null XML element</value>
  </data>
  <data name="clsApplicationMember_ParameterIndexMustBeBetweenZeroAndTheSizeOfTheNumberOfMembersInclusive" xml:space="preserve">
    <value>T_Parameter Index must be between zero and the size of the number of members (inclusive)</value>
  </data>
  <data name="clsAPC_None" xml:space="preserve">
    <value>T_None</value>
  </data>
  <data name="clsArgumentList_OutputFromExternalProcessWasNotValid" xml:space="preserve">
    <value>T_Output from external process was not valid</value>
  </data>
  <data name="clsArgumentList_InputToTheProcessWasNotValid" xml:space="preserve">
    <value>T_Input to the process was not valid</value>
  </data>
  <data name="clsArgumentList_OutputsFromExternalProcessWereNotValid" xml:space="preserve">
    <value>T_Outputs from external process were not valid</value>
  </data>
  <data name="clsArgumentList_InputsToTheProcessWereNotValid" xml:space="preserve">
    <value>T_Inputs to the process were not valid</value>
  </data>
  <data name="clsProcessBreakpointInfo_InvalidBreakpointType" xml:space="preserve">
    <value>T_Invalid breakpoint type</value>
  </data>
  <data name="clsProcessBreakpointInfo_AnExceptionOccurredWhichWillBeHandledIfYouContinue" xml:space="preserve">
    <value>T_An exception occurred, which will be handled if you continue</value>
  </data>
  <data name="clsProcessBreakpointInfo_TheDataItem0WasAccessedByTheLastDebugStage" xml:space="preserve">
    <value>T_The Data Item '{0}' was accessed by the last debug stage.</value>
  </data>
  <data name="clsProcessBreakpointInfo_TheDataItem0WasModifiedByTheLastDebugStage" xml:space="preserve">
    <value>T_The Data Item '{0}' was modified by the last debug stage.</value>
  </data>
  <data name="clsProcessBreakpointInfo_ABreakpointWasReached" xml:space="preserve">
    <value>T_A breakpoint was reached</value>
  </data>
  <data name="clsProcessBreakpointInfo_TheBreakpointConditionOnThisStageWasMet" xml:space="preserve">
    <value>T_The breakpoint condition on this stage was met</value>
  </data>
  <data name="clsProcessBreakpointInfo_AnErrorOccurredWhileProcessingTheBreakpoint0" xml:space="preserve">
    <value>T_An error occurred while processing the breakpoint - {0}</value>
  </data>
  <data name="clsProcessBreakpointInfo_NoConditionSet" xml:space="preserve">
    <value>T_<No condition set></value>
  </data>
  <data name="clsBusinessObject_Description" xml:space="preserve">
    <value>T_Description</value>
  </data>
  <data name="clsBusinessObject_DataType" xml:space="preserve">
    <value>T_Data Type</value>
  </data>
  <data name="clsBusinessObject_Direction" xml:space="preserve">
    <value>T_Direction</value>
  </data>
  <data name="clsBusinessObject_Parameter" xml:space="preserve">
    <value>T_Parameter</value>
  </data>
  <data name="clsBusinessObject_GetDocumentationHTML_Endpoint" xml:space="preserve">
    <value>T_Endpoint: </value>
  </data>
  <data name="clsBusinessObject_GetDocumentationHTML_Preconditions" xml:space="preserve">
    <value>T_Preconditions:</value>
  </data>
  <data name="clsBusinessObject_GetDocumentationHTML_ActionName10" xml:space="preserve">
    <value>T_1.{0} {1}</value>
  </data>
  <data name="clsBusinessObject_TheRunmodeOfThisBusinessObjectIs0" xml:space="preserve">
    <value>T_The runmode of this business object is "{0}"</value>
  </data>
  <data name="clsBusinessObject_GetDocumentationHTML_VBOFriendlyName10" xml:space="preserve">
    <value>T_1.{0} {1}</value>
  </data>
  <data name="clsBusinessObject_GetWikiDocumentation_Endpoint" xml:space="preserve">
    <value>T_===Endpoint===</value>
  </data>
  <data name="clsBusinessObject_GetWikiDocumentation_Preconditions" xml:space="preserve">
    <value>T_===Preconditions===</value>
  </data>
  <data name="clsBusinessObject_Field0DataType1" xml:space="preserve">
    <value>T_**{0} ({1})</value>
  </data>
  <data name="clsBusinessObject_Param0DataType1Narrative2" xml:space="preserve">
    <value>T_:{0} ({1}) - {2}</value>
  </data>
  <data name="clsBusinessObject_Output" xml:space="preserve">
    <value>T_Output</value>
  </data>
  <data name="clsBusinessObject_Input" xml:space="preserve">
    <value>T_Input</value>
  </data>
  <data name="clsBusinessObject_BusinessObject0" xml:space="preserve">
    <value>T_=Business Object - {0}=</value>
  </data>
  <data name="clsBusinessObject_BusinessObjectAlreadyCleanedUp" xml:space="preserve">
    <value>T_Business object already cleaned up</value>
  </data>
  <data name="clsCollection_ChildCollectionInField0HasNoData" xml:space="preserve">
    <value>T_Child collection in field '{0}' has no data</value>
  </data>
  <data name="clsCollection_Field0IsNotACollection1ButSubFieldNotationWasUsed" xml:space="preserve">
    <value>T_Field '{0}' is not a collection ({1}), but sub-field notation was used</value>
  </data>
  <data name="clsCollection_CannotSetA0ValueIntoTheField1ItsDataTypeIs2" xml:space="preserve">
    <value>T_Cannot set a {0} value into the field: {1} - its data type is {2}</value>
  </data>
  <data name="clsCollection_CannotSet0TheCollectionHasNoCurrentRow" xml:space="preserve">
    <value>T_Cannot set {0}: T_The collection has no current row</value>
  </data>
  <data name="clsCollection_ReferencedFieldIsNotACollectionButSubFieldNotationWasUsed" xml:space="preserve">
    <value>T_Referenced field is not a collection, but sub-field notation was used</value>
  </data>
  <data name="clsCollection_TheCollectionHasNoCurrentRow" xml:space="preserve">
    <value>T_The collection has no current row</value>
  </data>
  <data name="clsCollection_CollectionRowAlreadyHasA0FieldOfType123" xml:space="preserve">
    <value>T_Collection row already has a {0} field of type: T_{1}.{2}{3}</value>
  </data>
  <data name="clsCollection_Field0IsDatatype1ShouldBeCollection" xml:space="preserve">
    <value>T_Field '{0}' is datatype: '{1}', should be collection</value>
  </data>
  <data name="clsCollection_UnrecognisedField0InCollection1" xml:space="preserve">
    <value>T_Unrecognised field: {0} in collection: T_{1}</value>
  </data>
  <data name="clsCollection_InvalidCollectionDataReturnedFromActionAreFieldNamesDuplicated" xml:space="preserve">
    <value>T_Invalid collection data returned from action - are field names duplicated?</value>
  </data>
  <data name="clsCollection_CanTConvert0ToABluePrismDataType" xml:space="preserve">
    <value>T_Can't convert {0} to a Blue Prism data type.</value>
  </data>
  <data name="clsCollection_Row0Of1" xml:space="preserve">
    <value>T_Row {0} of {1}</value>
  </data>
  <data name="clsCollection_Empty" xml:space="preserve">
    <value>T_Empty</value>
  </data>
  <data name="clsCollection_NoData" xml:space="preserve">
    <value>T_No Data</value>
  </data>
  <data name="clsCollection_plural_rows" xml:space="preserve">
    <value>T_{COUNT, plural, one {1 Row} other {# Rows}}</value>
  </data>
  <data name="clsCollection_InvalidCollectionPathToSplit0" xml:space="preserve">
    <value>T_Invalid collection path to split: T_{0}</value>
  </data>
  <data name="clsCollection_CannotSet0TheCollection1HasNoCurrentRow" xml:space="preserve">
    <value>T_Cannot set {0}: T_The collection {1} has no current row</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheCollectionFoundAt0HasNoCurrentRow" xml:space="preserve">
    <value>T_The collection found at '{0}' has no current row</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_CannotActOnASingleRowCollection" xml:space="preserve">
    <value>T_Cannot act on a single row collection</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_0IsOnlyValidForCollections1IsOfType2" xml:space="preserve">
    <value>T_{0} is only valid for collections, '{1}' is of type '{2}'</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheStage0IsOfType1ButCollectionNotationIsUsed2" xml:space="preserve">
    <value>T_The stage '{0}' is of type '{1}', but collection notation is used: T_{2}</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheReferencedCollectionStage0CanNotBeAccessedBecauseItResidesOnADifferentPageAn" xml:space="preserve">
    <value>T_The referenced collection stage '{0}' can not be accessed because it resides on a different page, and has been hidden</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_FailedToFindAnyCollectionStageWithName0" xml:space="preserve">
    <value>T_Failed to find any collection stage with name '{0}'</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_NoCollectionNameWasSpecified" xml:space="preserve">
    <value>T_No collection name was specified</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_MustNotBeASingleRowCollection" xml:space="preserve">
    <value>T_Must not be a single-row collection</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheCollectionStageMustBeWithinTheScopeOfTheActionStage" xml:space="preserve">
    <value>T_The collection stage must be within the scope of the action stage</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheCollectionStageMustExist" xml:space="preserve">
    <value>T_The collection stage must exist</value>
  </data>
  <data name="clsCollectionBusinessObjectAction_TheNameOfTheCollectionToActUpon" xml:space="preserve">
    <value>T_The name of the collection to act upon</value>
  </data>
  <data name="clsBusinessObject_0CollectionField" xml:space="preserve">
    <value> T_- {0}</value>
  </data>
  <data name="Collections" xml:space="preserve">
    <value>T_Collections</value>
  </data>
  <data name="NoCollectionFoundForThisField" xml:space="preserve">
    <value>T_No collection found for this field</value>
  </data>
  <data name="TheField0DefinedIn1IsNotPresentIn2" xml:space="preserve">
    <value>T_The field '{0}' defined in {1} is not present in {2}</value>
  </data>
  <data name="TheField0IsDefinedInEachCollectionButTheDataTypesDoNotMatch" xml:space="preserve">
    <value>T_The field '{0}' is defined in each collection, but the data types do not match</value>
  </data>
  <data name="TheField0AlreadyExistsInThisCollectionDefinition" xml:space="preserve">
    <value>T_The field '{0}' already exists in this collection definition</value>
  </data>
  <data name="NotAValidNameForACollectionField" xml:space="preserve">
    <value>T_Not a valid name for a collection field</value>
  </data>
  <data name="NotDefined" xml:space="preserve">
    <value>T_Not Defined</value>
  </data>
  <data name="x0DefinesExtraFieldsNotPresentIn1" xml:space="preserve">
    <value>T_{0} defines extra fields not present in {1}</value>
  </data>
  <data name="FailedToCreateInstanceOfBusinessObject01" xml:space="preserve">
    <value>T_Failed to create instance of Business Object {0} - {1}</value>
  </data>
  <data name="BusinessObjectsWithinTheEnvironmentIEObjectsWhichMayBeDrawnOntoAProcessToCaptur" xml:space="preserve">
    <value>T_Business Objects within the environment (i.e. objects which may be drawn onto a process to capture and replicate a part of a business process) adhere to strict guidelines in their implementation. T_The definition and behaviour of the object both as seen in Process Studio during design time and as implemented during test or via Control Room at runtime uses the same interface definition, known as an object's capabilities. T_All business objects used within Blue Prism, generic and bespoke, have a common property - Get Capabilities. T_The GetCapabilities function returns an XML formatted string which defines the interfaces for that object, their friendly names (as they appear in Process Studio) and any inputs and outputs that are required. T_The Business Object Definition object captures the name, parameters, preconditions and endpoints of each function relating to a business object and translates to the object definition seen within Process Studio.</value>
  </data>
  <data name="AboutThisDocument" xml:space="preserve">
    <value>T_About this document...</value>
  </data>
  <data name="CBluePrismLimited" xml:space="preserve">
    <value>T_(c) Blue Prism Limited</value>
  </data>
  <data name="TheInformationContainedInThisDocumentIsTheProprietaryInformationOfBluePrismLimi" xml:space="preserve">
    <value>T_The information contained in this document is the proprietary information of Blue Prism Limited and should not be disclosed to a third party without the written consent of an authorised Blue Prism representative.</value>
  </data>
  <data name="BusinessObjectDefinition" xml:space="preserve">
    <value>T_Business Object Definition</value>
  </data>
  <data name="InternalError" xml:space="preserve">
    <value>T_Internal error</value>
  </data>
  <data name="MissingObject" xml:space="preserve">
    <value>T_Missing object</value>
  </data>
  <data name="ThisObjectCannotBeConfiguredThroughTheUserInterface" xml:space="preserve">
    <value>T_This object cannot be configured through the user interface</value>
  </data>
  <data name="MissingBusinessObject" xml:space="preserve">
    <value>T_Missing Business Object</value>
  </data>
  <data name="FailedCleanUp" xml:space="preserve">
    <value>T_Failed CleanUp: </value>
  </data>
  <data name="BusinessObjectIsNotValid" xml:space="preserve">
    <value>T_Business Object is not valid</value>
  </data>
  <data name="FailedToGetCapabilitiesOf01" xml:space="preserve">
    <value>T_Failed to get capabilities of {0} - {1}</value>
  </data>
  <data name="ErrorInCapabilitiesOf01" xml:space="preserve">
    <value>T_Error in capabilities of {0} - {1}</value>
  </data>
  <data name="ErrorSettingConfigXML0" xml:space="preserve">
    <value>T_Error setting Config XML - {0}</value>
  </data>
  <data name="SetConfigMethodDoesNotExistInConfigurableObjectDefaultValuesWillBeShown" xml:space="preserve">
    <value>T_SetConfig Method does not exist in configurable object, default Values will be shown</value>
  </data>
  <data name="InvalidRunModeSpecifiedRunModeMustBeExclusiveForegroundOrBackground" xml:space="preserve">
    <value>T_Invalid run mode specified - run mode must be Exclusive, Foreground or Background</value>
  </data>
  <data name="ResourceNameMismatch" xml:space="preserve">
    <value>T_Resource name mismatch</value>
  </data>
  <data name="MissingResourceunit" xml:space="preserve">
    <value>T_Missing <resourceunit></value>
  </data>
  <data name="GetCapabilitiesXMLDidNotReturnAnything" xml:space="preserve">
    <value>T_GetCapabilitiesXML did not return anything</value>
  </data>
  <data name="AboutBusinessObjects" xml:space="preserve">
    <value>T_About Business Objects</value>
  </data>
  <data name="TheBusinessObjectDefinitionDescribesTheAPIsAvailableWithinASingleBusinessObject" xml:space="preserve">
    <value>T_The Business Object Definition describes the APIs available within a single business object, their parameters and their behaviours from both a business and technical perspective. T_The definition of each object function describes the business function of the interface, the parameters and usage of the business function and any technical notes required in the on-going support of the interface, including reference to the capabilities of the object. T_The Business Object Definition API is a dual-purpose document designed to serve the needs of both business users and technical system support staff who require information relating to the business functions available and their details. T_As such, the BOD is a working document and is subject to change during the course of development and implementation.</value>
  </data>
  <data name="TheBusinessObject0CouldNotBeFound" xml:space="preserve">
    <value>T_The Business Object '{0}' could not be found.</value>
  </data>
  <data name="clsCOMBusinessObject_Exception0" xml:space="preserve">
    <value>T_Exception - {0}</value>
  </data>
  <data name="clsCOMBusinessObjectAction_FailedToProcessInputs" xml:space="preserve">
    <value>T_Failed to process inputs</value>
  </data>
  <data name="clsCOMBusinessObjectAction_FailedToProcessOutputs" xml:space="preserve">
    <value>T_Failed to process outputs</value>
  </data>
  <data name="clsCOMBusinessObjectAction_ErrorInInputs0" xml:space="preserve">
    <value>T_Error in inputs - {0}</value>
  </data>
  <data name="clsCOMBusinessObjectAction_ErrorInOutputs0" xml:space="preserve">
    <value>T_Error in outputs - {0}</value>
  </data>
  <data name="clsCOMBusinessObjectAction_Missing0" xml:space="preserve">
    <value>T_Missing <{0}></value>
  </data>
  <data name="clsCompilerRunner_CouldNotExecuteCodeStageBecauseExceptionThrownByCodeStage" xml:space="preserve">
    <value>T_Could not execute code stage because exception thrown by code stage: </value>
  </data>
  <data name="clsCompilerRunner_CouldNotCreateAnInstanceOfTheCodeClassBecause0" xml:space="preserve">
    <value>T_Could not create an instance of the code class because {0}</value>
  </data>
  <data name="clsCompilerRunner_CouldNotCreateAnInstanceOfTheCodeClassBecauseTheClassIsNotCompiled" xml:space="preserve">
    <value>T_Could not create an instance of the code class because the class is not compiled</value>
  </data>
  <data name="clsCompilerRunner_0ErrorCode0MoreDetail1" xml:space="preserve">
    <value>T_{0} Error code:{0} More Detail: T_{1}</value>
  </data>
  <data name="clsCompilerRunner_CouldNotRunTheObjectBecauseOneOfTheCodeStagesHasACompileErrorUseCheckForErrorsF" xml:space="preserve">
    <value>T_Could not run the object because one of the code stages has a compile error, use Check for Errors for a list of problems</value>
  </data>
  <data name="clsCompilerRunner_CouldNotExecuteCodeStage" xml:space="preserve">
    <value>T_Could not execute code stage: </value>
  </data>
  <data name="clsFunction_0FunctionTakesNoArguments" xml:space="preserve">
    <value>T_{0} function takes no arguments</value>
  </data>
  <data name="clsFunction_UnhandledErrorOccurredInThe0Function1" xml:space="preserve">
    <value>T_Unhandled error occurred in the {0} function: T_{1}</value>
  </data>
  <data name="Signature_MismatchWhenComparingParams0ElementsAgainstArgs1ElementsLoopOutOfSyncAtIndex2" xml:space="preserve">
    <value>T_Mismatch when comparing params ({0} elements) against args ({1} elements) - loop out of sync at index: T_{2}</value>
  </data>
  <data name="clsFunction_GetOSVersion_GetOperatingSystemVersion" xml:space="preserve">
    <value>T_Get operating system version</value>
  </data>
  <data name="clsFunction_GetOSVersion_GetTheOperatingSystemVersionForExampleWindows2000OrWindowsXP" xml:space="preserve">
    <value>T_Get the operating system version - for example 'Windows 2000' or 'Windows XP'</value>
  </data>
  <data name="clsFunction_GetOSVersion_Failed" xml:space="preserve">
    <value>T_Failed</value>
  </data>
  <data name="clsFunction_GetOSVersion_GetOSVersionFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_GetOSVersion function should not have any parameters</value>
  </data>
  <data name="clsFunction_GetIEVersionMajor_GetInternetExplorerMajorVersionNumber" xml:space="preserve">
    <value>T_Get Internet Explorer major version number</value>
  </data>
  <data name="clsFunction_GetIEVersionMajor_GetIEVersionMajorFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_GetIEVersionMajor function should not have any parameters</value>
  </data>
  <data name="clsFunction_GetOSVersionMinor_GetOperatingSystemMinorVersionNumber" xml:space="preserve">
    <value>T_Get operating system minor version number</value>
  </data>
  <data name="clsFunction_GetOSVersionMinor_GetTheOperatingSystemMinorVersionNumber" xml:space="preserve">
    <value>T_Get the operating system minor version number</value>
  </data>
  <data name="clsFunction_GetOSVersionMinor_GetOSVersionMinorFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_GetOSVersionMinor function should not have any parameters</value>
  </data>
  <data name="clsFunction_GetOSVersionMajor_GetTheOperatingSystemMajorVersionNumber" xml:space="preserve">
    <value>T_Get the operating system major version number</value>
  </data>
  <data name="clsFunction_GetOSVersionMajor_GetOSVersionMajorFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_GetOSVersionMajor function should not have any parameters</value>
  </data>
  <data name="clsFunction_GetOSArchitecture_GetTheOperatingSystemArchitecture" xml:space="preserve">
    <value>T_Get the operating system architecture</value>
  </data>
  <data name="clsFunction_GetOSArchitecture_GetTheOperatingSystemArcitecture" xml:space="preserve">
    <value>T_Get the operating system arcitecture</value>
  </data>
  <data name="clsFunction_GetOSArchitecture_GetOSArchitectureFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_GetOSArchitecture function should not have any parameters</value>
  </data>
  <data name="clsToTimeSpanComponent_WhenRoundingTheFractionalComponentIsDiscardedSoForExample90MinutesBecomes1HourF" xml:space="preserve">
    <value>T_When rounding, the fractional component is discarded, so for example 90 minutes becomes 1 hour. T_For negative TimeSpan values, any rounding is towards zero, so -90 minutes becomes -1 hour.</value>
  </data>
  <data name="clsToTimeSpanComponent_TheTimeSpanToBeConverted" xml:space="preserve">
    <value>T_The TimeSpan to be converted.</value>
  </data>
  <data name="clsFunction_ToDate_TheDateTimeToBeConverted" xml:space="preserve">
    <value>T_The DateTime to be converted.</value>
  </data>
  <data name="clsFunction_ToDateTime_TheTimeToBeConverted" xml:space="preserve">
    <value>T_The Time to be converted.</value>
  </data>
  <data name="clsFunction_ToDateTime_TheDateToBeConverted" xml:space="preserve">
    <value>T_The Date to be converted.</value>
  </data>
  <data name="clsFunction_ToOtherType_ConvertsTo0" xml:space="preserve">
    <value>T_Converts to {0}</value>
  </data>
  <data name="clsFunction_ToOtherType_ConvertsAValueToA0FollowingTheStandardBluePrismDataCastingRules" xml:space="preserve">
    <value>T_Converts a value to a {0}, following the standard Blue Prism data casting rules.</value>
  </data>
  <data name="clsFunction_ToOtherType_UnableToConvertSuppliedValueToA01" xml:space="preserve">
    <value>T_Unable to convert supplied value to a {0} : T_{1}</value>
  </data>
  <data name="clsFunction_ToOtherType_0FunctionRequires1Parameter" xml:space="preserve">
    <value>T_{0} function requires 1 parameter</value>
  </data>
  <data name="clsFunction_ToOtherType_TheTextToBeConverted" xml:space="preserve">
    <value>T_The text to be converted.</value>
  </data>
  <data name="clsFunction_ExceptionStage_TheNameOfTheStageWhichIsTheSourceOfTheExceptionCurrentlyBeingHandled" xml:space="preserve">
    <value>T_The name of the stage which is the source of the exception currently being handled.</value>
  </data>
  <data name="clsFunction_ExceptionStage_ExceptionStageFunctionCanOnlyBeUsedWhenInRecoveryMode" xml:space="preserve">
    <value>T_ExceptionStage function can only be used when in recovery mode</value>
  </data>
  <data name="clsFunction_ExceptionStage_ExceptionStageFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_ExceptionStage function should not have any parameters</value>
  </data>
  <data name="clsFunction_ExceptionStage_CurrentExceptionSource" xml:space="preserve">
    <value>T_Current exception source</value>
  </data>
  <data name="clsFunction_ExceptionDetail_TheDetailForTheExceptionCurrentlyBeingRecoveredFrom" xml:space="preserve">
    <value>T_The detail for the exception currently being recovered from.</value>
  </data>
  <data name="clsFunction_ExceptionDetail_ExceptionDetailFunctionCanOnlyBeUsedWhenInRecoveryMode" xml:space="preserve">
    <value>T_ExceptionDetail function can only be used when in recovery mode</value>
  </data>
  <data name="clsFunction_ExceptionDetail_ExceptionDetailFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_ExceptionDetail function should not have any parameters</value>
  </data>
  <data name="clsFunction_ExceptionDetail_CurrentExceptionDetail" xml:space="preserve">
    <value>T_Current exception detail</value>
  </data>
  <data name="clsFunction_ExceptionType_TheTypeOfTheExceptionCurrentlyBeingRecoveredFrom" xml:space="preserve">
    <value>T_The type of the exception currently being recovered from.</value>
  </data>
  <data name="clsFunction_ExceptionType_ExceptionTypeFunctionCanOnlyBeUsedWhenInRecoveryMode" xml:space="preserve">
    <value>T_ExceptionType function can only be used when in recovery mode</value>
  </data>
  <data name="clsFunction_ExceptionType_ExceptionTypeFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_ExceptionType function should not have any parameters</value>
  </data>
  <data name="clsFunction_ExceptionType_CurrentExceptionType" xml:space="preserve">
    <value>T_Current exception type</value>
  </data>
  <data name="clsIsFunction_ChecksIfTheGivenTextIsAValid0AccordingToTheCurrentRegionalSettings1EgIs0Example" xml:space="preserve">
    <value>T_Checks if the given text is a valid {0} according to the current regional settings.{1}eg. T_{2}("Example") results in False</value>
  </data>
  <data name="clsIsFunction_TheTextToBeChecked" xml:space="preserve">
    <value>T_The text to be checked.</value>
  </data>
  <data name="clsIsFunction_0FunctionRequires1Parameter" xml:space="preserve">
    <value>T_{0} function requires 1 parameter</value>
  </data>
  <data name="clsFunction_LoadTextFile_ReadTheContentsOfATextFile" xml:space="preserve">
    <value>T_Read the contents of a text file.</value>
  </data>
  <data name="clsFunction_LoadTextFile_TheNameOfTheFileToLoad" xml:space="preserve">
    <value>T_The name of the file to load.</value>
  </data>
  <data name="clsFunction_LoadTextFile_LoadATextFile" xml:space="preserve">
    <value>T_Load a text file</value>
  </data>
  <data name="clsFunction_LoadBinaryFile_ReadTheContentsOfAFileAsBinaryData" xml:space="preserve">
    <value>T_Read the contents of a file as binary data.</value>
  </data>
  <data name="clsFunction_LoadBinaryFile_TheNameOfTheFileToLoad" xml:space="preserve">
    <value>T_The name of the file to load.</value>
  </data>
  <data name="clsFunction_LoadBinaryFile_LoadABinaryFile" xml:space="preserve">
    <value>T_Load a binary file</value>
  </data>
  <data name="clsFunction_FormatUTCDateTime_ShortDesc_FormatUTCDateTime" xml:space="preserve">
    <value>T_Format UTC DateTime</value>
  </data>
  <data name="clsFunction_FormatDateTime_ShortDesc_FormatDateTime" xml:space="preserve">
    <value>T_Format DateTime</value>
  </data>
  <data name="clsFunction_FormatDate_GetsTextRepresentingA01InAGivenFormat3Eg201022003DdMMMYy3ResultsIn01Feb03" xml:space="preserve">
    <value>T_Gets text representing a {0} {1} in a given format.{3} eg. {2}("01/02/2003","dd MMM yy"){3} results in "01 Feb 03".</value>
  </data>
  <data name="clsFunction_FormatDate_TheDateFormat" xml:space="preserve">
    <value>T_The date format.</value>
  </data>
  <data name="clsFunction_FormatDate_AnErrorOccurredWhileFormattingTheDate0" xml:space="preserve">
    <value>T_An error occurred while formatting the date: T_{0}</value>
  </data>
  <data name="clsFunction_FormatDate_ShortDesc_FormatDate" xml:space="preserve">
    <value>T_Format Date</value>
  </data>
  <data name="clsFunction_AddDays_AddANumberOfDaysToADateEgAddDays0102200520ResultsInTheDate21022005" xml:space="preserve">
    <value>T_Add a number of days to a date. T_Eg AddDays("01/02/2005",20) results in the date "21/02/2005"</value>
  </data>
  <data name="clsFunction_AddDays_maParms_TheNumberOfDaysToAdd" xml:space="preserve">
    <value>T_The number of days to add</value>
  </data>
  <data name="clsFunction_AddDays_TheDateToAddTo" xml:space="preserve">
    <value>T_The date to add to</value>
  </data>
  <data name="clsFunction_AddDays_ShortDesc_AddDays" xml:space="preserve">
    <value>T_Add Days</value>
  </data>
  <data name="clsFunction_AddMonths_AddsANumberOfMonthsToADateEgAddMonths250120053ResultsInTheDate25042005" xml:space="preserve">
    <value>T_Adds a number of months to a date. T_Eg AddMonths("25/01/2005",3) results in the date "25/04/2005"</value>
  </data>
  <data name="clsFunction_AddMonths_maParms_TheNumberOfMonthsToAdd" xml:space="preserve">
    <value>T_The number of months to add</value>
  </data>
  <data name="clsFunction_AddMonths_TheDateToAddTo" xml:space="preserve">
    <value>T_The date to add to</value>
  </data>
  <data name="clsFunction_AddMonths_ShortDesc_AddMonths" xml:space="preserve">
    <value>T_Add Months</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_ForHoursMinutesAndSecondsValuesOutsideOfTheGivenRangeCanBeSuppliedAndWillBeInte" xml:space="preserve">
    <value>T_For hours, minutes and seconds, values outside of the given range can be supplied, and will be interpreted appropriately. T_For example, specifying 90 seconds will result in a TimeSpan of 1 minute and 30 seconds. 

T_For backwards compatibility, a fifth parameter can be supplied. T_It is ignored.</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_GetsATimespanMadeFromTheGivenDaysHoursMinutesSecondsEGMakeTimeSpan213250Results" xml:space="preserve">
    <value>T_Gets a timespan made from the given days, hours, minutes, seconds. 
  T_E.g. T_MakeTimeSpan(2,13,25,0) results in 2.13:25:00</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_ForBackwardsCompatibility" xml:space="preserve">
    <value>T_For backwards compatibility.</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_TheNumberOfSeconds059" xml:space="preserve">
    <value>T_The number of seconds, 0-59.</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_TheNumberOfMinutes059" xml:space="preserve">
    <value>T_The number of minutes, 0-59.</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_TheNumberOfHours023" xml:space="preserve">
    <value>T_The number of hours, 0-23.</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_TheNumberOfDays" xml:space="preserve">
    <value>T_The number of days</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_UnableToConvertTheSuppliedParametersToATime0" xml:space="preserve">
    <value>T_Unable to convert the supplied parameters to a time - {0}</value>
  </data>
  <data name="clsFunction_MakeTimeSpan_ShortDesc_MakeTimeSpan" xml:space="preserve">
    <value>T_Make TimeSpan</value>
  </data>
  <data name="clsFunction_MakeTime_GetsATimeMadeFromTheGivenHoursMinutesAndSecondsEGMakeTime13250ResultsIn132500" xml:space="preserve">
    <value>T_Gets a time made from the given hours, minutes and seconds. 
  T_E.g. T_MakeTime(13,25,0) results in 13:25:00</value>
  </data>
  <data name="clsFunction_MakeTime_TheSeconds059" xml:space="preserve">
    <value>T_The seconds, 0-59.</value>
  </data>
  <data name="clsFunction_MakeTime_TheMinutes059" xml:space="preserve">
    <value>T_The minutes, 0-59.</value>
  </data>
  <data name="clsFunction_MakeTime_TheHours023" xml:space="preserve">
    <value>T_The hours, 0-23.</value>
  </data>
  <data name="clsFunction_MakeTime_UnableToConvertTheSuppliedParametersToATime" xml:space="preserve">
    <value>T_Unable to convert the supplied parameters to a time</value>
  </data>
  <data name="clsFunction_MakeTime_ShortDesc_MakeTime" xml:space="preserve">
    <value>T_Make Time</value>
  </data>
  <data name="clsFunction_MakeDateTime_GetsADatetimeMadeFromTheGivenDayMonthAndYearHoursMinutesAndSecondsEGMakeDateTim" xml:space="preserve">
    <value>T_Gets a datetime made from the given day, month and year, hours, minutes and seconds. 
  T_E.g. T_MakeDateTime(1,2,2005,13,25,00,False) results in 01/02/2005 at 13:25:00</value>
  </data>
  <data name="clsFunction_MakeDateTime_TrueIfTheInputValueIsALocalTimeLocalTimeValuesWillBeConvertedToUTCWhenStored" xml:space="preserve">
    <value>T_True if the input value is a local time (local time values will be converted to UTC when stored)</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheSeconds059" xml:space="preserve">
    <value>T_The seconds, 0-59.</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheMinutes059" xml:space="preserve">
    <value>T_The minutes, 0-59.</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheHours023" xml:space="preserve">
    <value>T_The hours, 0-23.</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheYear" xml:space="preserve">
    <value>T_The year.</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheMonthOfTheYearEGJan1Feb2" xml:space="preserve">
    <value>T_The month of the year, e.g. Jan = 1, Feb = 2.</value>
  </data>
  <data name="clsFunction_MakeDateTime_TheDayOfTheMonth" xml:space="preserve">
    <value>T_The day of the month.</value>
  </data>
  <data name="clsFunction_MakeDateTime_UnableToConvertTheSuppliedParametersToADatetime0" xml:space="preserve">
    <value>T_Unable to convert the supplied parameters to a datetime - {0}</value>
  </data>
  <data name="clsFunction_MakeDateTime_InvalidYear0TheCenturyMustBeSpecified" xml:space="preserve">
    <value>T_Invalid year '{0}' - the century must be specified</value>
  </data>
  <data name="clsFunction_MakeDateTime_ShortDesc_MakeDateTime" xml:space="preserve">
    <value>T_Make DateTime</value>
  </data>
  <data name="clsFunction_MakeDate_GetsADateMadeFromTheGivenDayMonthAndYearEGMakeDate122005ResultsIn01022005" xml:space="preserve">
    <value>T_Gets a date made from the given day, month and year. 
  T_E.g. T_MakeDate(1,2,2005) results in 01/02/2005.</value>
  </data>
  <data name="clsFunction_MakeDate_TheYearDONOTUseATwoDigitYearIEUse1929Not29" xml:space="preserve">
    <value>T_The year. T_DO NOT use a two-digit year - i.e. use 1929, not 29.</value>
  </data>
  <data name="clsFunction_MakeDate_TheMonthOfTheYearEGJan1Feb2" xml:space="preserve">
    <value>T_The month of the year, e.g. Jan = 1, Feb = 2.</value>
  </data>
  <data name="clsFunction_MakeDate_TheDayOfTheMonth" xml:space="preserve">
    <value>T_The day of the month.</value>
  </data>
  <data name="clsFunction_MakeDate_UnableToConvertThe3SuppliedParametersToADate" xml:space="preserve">
    <value>T_Unable to convert the 3 supplied parameters to a date</value>
  </data>
  <data name="clsFunction_MakeDate_ShortDesc_MakeDate" xml:space="preserve">
    <value>T_Make Date</value>
  </data>
  <data name="clsFunction_DateDiff_GetsTheNumberOfIntervalsEGDaysMonthsEtcBetweenTwoDatesSeeTheHelpDocumentationFo" xml:space="preserve">
    <value>T_Gets the number of intervals (e.g. days, months etc) between two dates. T_See the Help documentation for examples and full interval list.</value>
  </data>
  <data name="clsFunction_DateDiff_TheDateToCalculateTo" xml:space="preserve">
    <value>T_The date to calculate to.</value>
  </data>
  <data name="clsFunction_DateDiff_TheDateToCalculateFrom" xml:space="preserve">
    <value>T_The date to calculate from.</value>
  </data>
  <data name="clsFunction_DateDiff_TheTypeOfIntervalRepresentedByANumber" xml:space="preserve">
    <value>T_The type of interval (represented by a number).</value>
  </data>
  <data name="clsFunction_DateDiff_DateDifference" xml:space="preserve">
    <value>T_Date Difference</value>
  </data>
  <data name="clsFunction_DateAdd_GetsADateWithANumberOfIntervalsEGDaysMonthsEtcAddedToItSeeTheHelpDocumentationF" xml:space="preserve">
    <value>T_Gets a date with a number of intervals (e.g. days, months etc) added to it. T_See the Help documentation for examples and full interval list.</value>
  </data>
  <data name="clsFunction_DateAdd_TheDateDatetimeToBeAddedTo" xml:space="preserve">
    <value>T_The date/datetime to be added to.</value>
  </data>
  <data name="clsFunction_DateAdd_TheNumberOfIntervalsToBeAdded" xml:space="preserve">
    <value>T_The number of intervals to be added.</value>
  </data>
  <data name="clsFunction_DateAdd_TheTypeOfIntervalRepresentedByANumber" xml:space="preserve">
    <value>T_The type of interval (represented by a number).</value>
  </data>
  <data name="clsFunction_DateAdd_ThirdParameterForDateAddMustBeTheDate" xml:space="preserve">
    <value>T_Third parameter for DateAdd must be the date</value>
  </data>
  <data name="clsFunction_DateAdd_SecondParameterForDateAddMustBeTheNumberToAddOrSubtract" xml:space="preserve">
    <value>T_Second parameter for DateAdd must be the number to add or subtract</value>
  </data>
  <data name="clsFunction_DateAdd_FirstParameterForDateAddMustBeANumberThatRefersToAValidDateInterval" xml:space="preserve">
    <value>T_First parameter for DateAdd must be a number that refers to a valid date interval</value>
  </data>
  <data name="clsFunction_DateAdd_AddToDate" xml:space="preserve">
    <value>T_Add to Date</value>
  </data>
  <data name="clsFunction_Now_GetsTheCurrentDateAndTimeAsADatetimeValue" xml:space="preserve">
    <value>T_Gets the current date and time as a datetime value.</value>
  </data>
  <data name="clsFunction_Now_NowFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_Now function should not have any parameters</value>
  </data>
  <data name="clsFunction_Now_CurrentDateAndTime" xml:space="preserve">
    <value>T_Current Date and Time</value>
  </data>
  <data name="clsFunction_UTCTime_GetsTheCurrentUTCTimeAsATimeValue" xml:space="preserve">
    <value>T_Gets the current UTC time as a Time value.</value>
  </data>
  <data name="clsFunction_UTCTime_UTCTimeFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_UTCTime function should not have any parameters</value>
  </data>
  <data name="clsFunction_UTCTime_CurrentUTCTime" xml:space="preserve">
    <value>T_Current UTC time</value>
  </data>
  <data name="clsFunction_LocalTime_GetsTheCurrentLocalTimeAsATimeValue" xml:space="preserve">
    <value>T_Gets the current local time as a Time value.</value>
  </data>
  <data name="clsFunction_LocalTime_LocalTimeFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_LocalTime function should not have any parameters</value>
  </data>
  <data name="clsFunction_LocalTime_CurrentLocalTime" xml:space="preserve">
    <value>T_Current local time</value>
  </data>
  <data name="clsFunction_Today_GetsTheCurrentDateAsADateValue" xml:space="preserve">
    <value>T_Gets the current date as a date value.</value>
  </data>
  <data name="clsFunction_Today_TodayFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_Today function should not have any parameters</value>
  </data>
  <data name="clsFunction_Today_CurrentDate" xml:space="preserve">
    <value>T_Current Date</value>
  </data>
  <data name="clsFunction_Lower_GetsTextRepresentingATextExpressionInLowerCaseEGLowerEXAMpleResultsInExample" xml:space="preserve">
    <value>T_Gets text representing a text expression in lower case. 
  T_E.g. T_Lower("EXAMple") results in "example".</value>
  </data>
  <data name="clsFunction_Lower_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_Lower_MakeLowerCase" xml:space="preserve">
    <value>T_Make Lower Case</value>
  </data>
  <data name="clsFunction_Replace_GetsTextWithOnePieceOfTextReplacedWithAnotherEGReplaceExampleAmToResultsInExtop" xml:space="preserve">
    <value>T_Gets text with one piece of text replaced with another
T_  E.g. T_Replace("Example","am","to") results in "Extople".</value>
  </data>
  <data name="clsFunction_Replace_TheStringToBeWrittenOverTheOldPattern" xml:space="preserve">
    <value>T_The string to be written over the old pattern.</value>
  </data>
  <data name="clsFunction_Replace_TheStringPatternToBeReplaced" xml:space="preserve">
    <value>T_The string pattern to be replaced.</value>
  </data>
  <data name="clsFunction_Replace_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_Replace_ReplaceText" xml:space="preserve">
    <value>T_Replace Text</value>
  </data>
  <data name="clsFunction_Upper_GetsTextRepresentingATextExpressionInUpperCaseEGUpperEXAMpleResultsInEXAMPLE" xml:space="preserve">
    <value>T_Gets text representing a text expression in upper case. 
  T_E.g. T_Upper("EXAMple") results in "EXAMPLE".</value>
  </data>
  <data name="clsFunction_Upper_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_Upper_MakeUpperCase" xml:space="preserve">
    <value>T_Make Upper Case</value>
  </data>
  <data name="clsFunction_EndsWith_ChecksIfOnePieceOfTextEndsWithAnotherEGEndsWithExampleAmpleResultsInTrue" xml:space="preserve">
    <value>T_Checks if one piece of text ends with another
T_  E.g. T_EndsWith("Example","ample") results in True.</value>
  </data>
  <data name="clsFunction_EndsWith_TheTextToCheckAgainst" xml:space="preserve">
    <value>T_The text to check against.</value>
  </data>
  <data name="clsFunction_EndsWith_TheTextExpressionToBeChecked" xml:space="preserve">
    <value>T_The text expression to be checked.</value>
  </data>
  <data name="clsFunction_EndsWith_ShortDesc_EndsWith" xml:space="preserve">
    <value>T_Ends With</value>
  </data>
  <data name="clsFunction_StartsWith_ChecksIfOnePieceOfTextStartsWithAnotherEGStartsWithExampleExamResultsInTrue" xml:space="preserve">
    <value>T_Checks if one piece of text starts with another
T_  E.g. T_StartsWith("Example","Exam") results in True.</value>
  </data>
  <data name="clsFunction_StartsWith_TheTextToCheckAgainst" xml:space="preserve">
    <value>T_The text to check against.</value>
  </data>
  <data name="clsFunction_StartsWith_TheTextExpressionToBeChecked" xml:space="preserve">
    <value>T_The text expression to be checked.</value>
  </data>
  <data name="clsFunction_StartsWith_ShortDesc_StartsWith" xml:space="preserve">
    <value>T_Starts With</value>
  </data>
  <data name="clsFunction_Trim_GetsTextThatIsTheInputWithAnyWhitespaceTrimmedFromTheStartAndEndEGTrimExampleRe" xml:space="preserve">
    <value>T_Gets text that is the input with any whitespace trimmed from the start and end. 
  T_E.g. T_Trim("  Example  ") results in "Example".</value>
  </data>
  <data name="clsFunction_Trim_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_Trim_Trim" xml:space="preserve">
    <value>T_Trim</value>
  </data>
  <data name="clsFunction_TrimEnd_GetsTextThatIsTheInputWithAnyWhitespaceTrimmedFromTheEndEGTrimEndExampleResults" xml:space="preserve">
    <value>T_Gets text that is the input with any whitespace trimmed from the end. 
  T_E.g. T_TrimEnd("  Example  ") results in "  Example".</value>
  </data>
  <data name="clsFunction_TrimEnd_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_TrimEnd_ShortDesc_TrimEnd" xml:space="preserve">
    <value>T_Trim End</value>
  </data>
  <data name="clsFunction_TrimStart_GetsTextThatIsTheInputWithAnyWhitespaceTrimmedFromTheStartEGTrimStartExampleRes" xml:space="preserve">
    <value>T_Gets text that is the input with any whitespace trimmed from the start. 
  T_E.g. T_TrimStart("  Example  ") results in "Example  ".</value>
  </data>
  <data name="clsFunction_TrimStart_TheTextExpressionToBeConverted" xml:space="preserve">
    <value>T_The text expression to be converted.</value>
  </data>
  <data name="clsFunction_TrimStart_ShortDesc_TrimStart" xml:space="preserve">
    <value>T_Trim Start</value>
  </data>
  <data name="clsFunction_Bytes_GetsTheNumberOfBytesInSomeBinaryData" xml:space="preserve">
    <value>T_Gets the number of bytes in some binary data.</value>
  </data>
  <data name="clsFunction_Bytes_TheBinaryDataToBeMeasured" xml:space="preserve">
    <value>T_The binary data to be measured.</value>
  </data>
  <data name="clsFunction_Bytes_BytesFunctionRequires1Parameter" xml:space="preserve">
    <value>T_Bytes function requires 1 parameter</value>
  </data>
  <data name="clsFunction_Bytes_ByteCount" xml:space="preserve">
    <value>T_Byte Count</value>
  </data>
  <data name="clsFunction_Len_GetsTheNumberOfCharactersInSomeTextEGLenExampleWillResultIn7" xml:space="preserve">
    <value>T_Gets the number of characters in some text
T_  E.g. len("Example") will result in 7.</value>
  </data>
  <data name="clsFunction_Len_TheTextToBeMeasured" xml:space="preserve">
    <value>T_The text to be measured.</value>
  </data>
  <data name="clsFunction_Len_Length" xml:space="preserve">
    <value>T_Length</value>
  </data>
  <data name="clsFunction_InStr_GetsTheStartingPointOfASubSectionOfTextEGInStrExampleMpResultsIn4TheResultIsAlw" xml:space="preserve">
    <value>T_Gets the starting point of a sub-section of text. 
  T_E.g. T_InStr("Example", "mp") results in 4. 
T_The result is always 0 when no match is found.</value>
  </data>
  <data name="clsFunction_InStr_TheTextExpressionToBeSearchedFor" xml:space="preserve">
    <value>T_The text expression to be searched for.</value>
  </data>
  <data name="clsFunction_InStr_TheTextExpressionToBeSearched" xml:space="preserve">
    <value>T_The text expression to be searched.</value>
  </data>
  <data name="clsFunction_InStr_FindInString" xml:space="preserve">
    <value>T_Find in String</value>
  </data>
  <data name="clsFunction_NewLine_GetTheNewLineCharactersCarriageReturnFollowedByLineFeed" xml:space="preserve">
    <value>T_Get the new line characters, carriage return followed by line feed.</value>
  </data>
  <data name="clsFunction_NewLine_NewLineFunctionShouldNotHaveAnyParameters" xml:space="preserve">
    <value>T_NewLine function should not have any parameters</value>
  </data>
  <data name="clsFunction_NewLine_GetNewLineCharacters" xml:space="preserve">
    <value>T_Get new line characters</value>
  </data>
  <data name="clsFunction_Chr_GetTheCharacterRepresentedByTheGivenNumericCodeEG65IsA66IsB" xml:space="preserve">
    <value>T_Get the character represented by the given numeric code, e.g. 65 is A, 66 is B</value>
  </data>
  <data name="clsFunction_Chr_ANumericCharacterCode" xml:space="preserve">
    <value>T_A numeric character code</value>
  </data>
  <data name="clsFunction_Chr_GetCharacter" xml:space="preserve">
    <value>T_Get Character</value>
  </data>
  <data name="clsFunction_Mid_GetsTextTakenFromTheMiddleOfTextExpressionEGMidExample33WillResultInAmp" xml:space="preserve">
    <value>T_Gets text taken from the middle of text expression. 
  T_E.g. T_Mid("Example",3,3) will result in "amp".</value>
  </data>
  <data name="clsFunction_Mid_TheNumberOfCharactersToReturn" xml:space="preserve">
    <value>T_The number of characters to return.</value>
  </data>
  <data name="clsFunction_Mid_ThePositionOfTheFirstCharacterToBeReturned" xml:space="preserve">
    <value>T_The position of the first character to be returned.</value>
  </data>
  <data name="clsFunction_Mid_TheTextFromWhichCharactersAreReturned" xml:space="preserve">
    <value>T_The text from which characters are returned.</value>
  </data>
  <data name="clsFunction_Mid_CharactersFromMiddle" xml:space="preserve">
    <value>T_Characters from Middle</value>
  </data>
  <data name="clsFunction_Right_GetsTextTakenFromTheRightOfTextExpressionEGRightExample3WillResultInPle" xml:space="preserve">
    <value>T_Gets text taken from the right of text expression. 
  T_E.g. T_Right("Example",3) will result in "ple".</value>
  </data>
  <data name="clsFunction_Right_TheNumberOfCharactersToReturn" xml:space="preserve">
    <value>T_The number of characters to return.</value>
  </data>
  <data name="clsFunction_Right_TheTextFromWhichCharactersAreReturned" xml:space="preserve">
    <value>T_The text from which characters are returned.</value>
  </data>
  <data name="clsFunction_Right_CharactersFromRight" xml:space="preserve">
    <value>T_Characters from Right</value>
  </data>
  <data name="clsFunction_Left_GetsTextTakenFromTheLeftOfATextExpressionEGLeftExample3WillResultInExa" xml:space="preserve">
    <value>T_Gets text taken from the left of a text expression. 
  T_E.g. T_Left("Example",3) will result in "Exa".</value>
  </data>
  <data name="clsFunction_Left_TheNumberOfCharactersToReturn" xml:space="preserve">
    <value>T_The number of characters to return.</value>
  </data>
  <data name="clsFunction_Left_TheTextFromWhichCharactersAreReturned" xml:space="preserve">
    <value>T_The text from which characters are returned.</value>
  </data>
  <data name="clsFunction_Left_CharactersFromLeft" xml:space="preserve">
    <value>T_Characters from Left</value>
  </data>
  <data name="clsFunction_Log_DeterminesThePowerToWhichTheLogarithmSBaseMustBeRaisedToAchieveTheInputValueEGL" xml:space="preserve">
    <value>T_Determines the power to which the logarithm's base must be raised to achieve the input value. 
  T_E.g. T_Log(1000, 10) = 3 because 10^3 = 1000.</value>
  </data>
  <data name="clsFunction_Log_TheBaseOfTheLogarithmFunction" xml:space="preserve">
    <value>T_The base of the logarithm function.</value>
  </data>
  <data name="clsFunction_Log_TheInputValueToTheLogarithmFunction" xml:space="preserve">
    <value>T_The input value to the logarithm function.</value>
  </data>
  <data name="clsFunction_Log_TheLogFunctionOnlySupportsPositiveNumericArguments" xml:space="preserve">
    <value>T_The Log function only supports positive numeric arguments</value>
  </data>
  <data name="clsFunction_Log_LogarithmToAnyBase" xml:space="preserve">
    <value>T_Logarithm to any base</value>
  </data>
  <data name="clsFunction_Sqrt_GetsTheSquareRootOfTheNumberEGSqrt9ResultsIn3" xml:space="preserve">
    <value>T_Gets the square root of the number. 
  T_E.g. T_Sqrt(9) results in 3.</value>
  </data>
  <data name="clsFunction_Sqrt_TheSquareRootToBeCalculated" xml:space="preserve">
    <value>T_The square root to be calculated.</value>
  </data>
  <data name="clsFunction_Sqrt_SquareRoot" xml:space="preserve">
    <value>T_Square Root</value>
  </data>
  <data name="clsFunction_DecPad_GetsTextRepresentingANumberWithDecimalPlacesPaddedOutWithZerosEGDecPad12Results" xml:space="preserve">
    <value>T_Gets text representing a number with decimal places padded out with zeros. 
  T_E.g. T_DecPad(1,2) results in "1.00".</value>
  </data>
  <data name="clsFunction_DecPad_TheNumberOfDecimalPlacesToPadOutTo" xml:space="preserve">
    <value>T_The number of decimal places to pad out to.</value>
  </data>
  <data name="clsFunction_DecPad_TheNumberToBePadded" xml:space="preserve">
    <value>T_The number to be padded.</value>
  </data>
  <data name="clsFunction_DecPad_PadDecimals" xml:space="preserve">
    <value>T_Pad Decimals</value>
  </data>
  <data name="clsFunction_RndDn_GetsANumberRoundedDownToANumberOfDecimalPlacesEGRndDn1471ResultsIn14RndDnIsSymm" xml:space="preserve">
    <value>T_Gets a number rounded down to a number of decimal places. 
  T_E.g. T_RndDn(1.47,1) results in 1.4. 
T_RndDn is symmetrical, i.e. values are truncated towards zero.</value>
  </data>
  <data name="clsFunction_RndDn_Signatures_TheNumberToBeRounded" xml:space="preserve">
    <value>T_The number to be rounded.</value>
  </data>
  <data name="clsFunction_RndDn_TheNumberOfDecimalPlacesToRoundToOptional" xml:space="preserve">
    <value>T_The number of decimal places to round to (optional)</value>
  </data>
  <data name="clsFunction_RndDn_TheNumberToBeRounded" xml:space="preserve">
    <value>T_The number to be rounded</value>
  </data>
  <data name="clsFunction_RndDn_RoundDown" xml:space="preserve">
    <value>T_Round Down</value>
  </data>
  <data name="clsFunction_RndUp_GetsANumberRoundedUpToANumberOfDecimalPlacesEGRndUp1471ResultsIn15" xml:space="preserve">
    <value>T_Gets a number rounded up to a number of decimal places. 
  T_E.g. T_RndUp(1.47,1) results in 1.5.</value>
  </data>
  <data name="clsFunction_RndUp_TheNumberToBeRounded" xml:space="preserve">
    <value>T_The number to be rounded.</value>
  </data>
  <data name="clsFunction_RndUp_TheNumberOfDecimalPlacesToRoundTo" xml:space="preserve">
    <value>T_The number of decimal places to round to.</value>
  </data>
  <data name="clsFunction_RndUp_RoundUp" xml:space="preserve">
    <value>T_Round Up</value>
  </data>
  <data name="clsFunction_Round_GetsANumberRoundOffToANumberOfDecimalPlacesEGRound1471ResultsIn15" xml:space="preserve">
    <value>T_Gets a number round off to a number of decimal places. 
  T_E.g. T_Round(1.47,1) results in 1.5.</value>
  </data>
  <data name="clsFunction_Round_TheNumberOfDecimalPlacesToRoundTo" xml:space="preserve">
    <value>T_The number of decimal places to round to.</value>
  </data>
  <data name="clsFunction_Round_TheNumberToBeRounded" xml:space="preserve">
    <value>T_The number to be rounded.</value>
  </data>
  <data name="clsFunction_Round_Round" xml:space="preserve">
    <value>T_Round</value>
  </data>
  <data name="clsFunction_plural_requires_argument_of_type" xml:space="preserve">
    <value>T_{NAME} function requires {COUNT} {COUNT, plural, one {argument of type} other {arguments of types}}: T_({ARGS})</value>
  </data>
  <data name="clsFunction_plural_arguments_of_type" xml:space="preserve">
    <value>T_; {COUNT, plural, one {argument of type} other {arguments of types}}: T_({ARGS})</value>
  </data>
  <data name="clsFunction_GetIEVersionMajor_FailedToGetInternetExplorerVersion0" xml:space="preserve">
    <value>T_Failed to get Internet Explorer version {0}</value>
  </data>
  <data name="clsToTimeSpanComponent_ConvertTo0" xml:space="preserve">
    <value>T_Convert to {0}</value>
  </data>
  <data name="clsIsFunction_IsDataType0" xml:space="preserve">
    <value>T_Is {0}</value>
  </data>
  <data name="FailedToReadFile0" xml:space="preserve">
    <value>T_Failed to read file - {0}</value>
  </data>
  <data name="The0ToBeFormatted" xml:space="preserve">
    <value>T_The {0} to be formatted.</value>
  </data>
  <data name="clsToTimeSpanComponent_ConvertsATimeSpanToAWholeNumberRoundedDownOf0" xml:space="preserve">
    <value>T_Converts a TimeSpan to a whole number, rounded down, of {0}</value>
  </data>
  <data name="clsToTimeSpanComponent_ConvertsATimeSpanToATotalNumberOf0" xml:space="preserve">
    <value>T_Converts a TimeSpan to a total number of {0}</value>
  </data>
  <data name="clsToTimeSpanComponent_Seconds" xml:space="preserve">
    <value>T_Seconds</value>
  </data>
  <data name="clsToTimeSpanComponent_Minutes" xml:space="preserve">
    <value>T_Minutes</value>
  </data>
  <data name="clsToTimeSpanComponent_Days" xml:space="preserve">
    <value>T_Days</value>
  </data>
  <data name="clsToTimeSpanComponent_Hours" xml:space="preserve">
    <value>T_Hours</value>
  </data>
  <data name="clsBusinessObjectAction_NewAction" xml:space="preserve">
    <value>T_new action</value>
  </data>
  <data name="clsGeometry_LineDirectionMustNotBeZero" xml:space="preserve">
    <value>T_Line direction must not be zero</value>
  </data>
  <data name="clsGeometry_LinesAreParellelSoDoNotHaveAUniqueIntersection" xml:space="preserve">
    <value>T_Lines are parellel, so do not have a unique intersection</value>
  </data>
  <data name="clsGroupBusinessObject_AlreadyCleanedUp" xml:space="preserve">
    <value>T_Already Cleaned Up</value>
  </data>
  <data name="clsGroupBusinessObject_InternalBusinessObjects" xml:space="preserve">
    <value>T_Internal Business Objects</value>
  </data>
  <data name="clsGroupBusinessObject_VisualBusinessObjects" xml:space="preserve">
    <value>T_Visual Business Objects</value>
  </data>
  <data name="clsGroupBusinessObject_WebAPIServices" xml:space="preserve">
    <value>T_Web API Services</value>
  </data>
  <data name="clsGroupBusinessObject_SOAPWebServices" xml:space="preserve">
    <value>T_SOAP Web Services</value>
  </data>
  <data name="clsGroupBusinessObject_LegacyCOMObjects" xml:space="preserve">
    <value>T_Legacy COM Objects</value>
  </data>
  <data name="clsGroupBusinessObject_CannotExecuteAGroup" xml:space="preserve">
    <value>T_Cannot execute a group</value>
  </data>
  <data name="clsInternalBusinessObject_NoConfigurationAvailableForAnInternalBusinessObject" xml:space="preserve">
    <value>T_No configuration available for an Internal Business Object</value>
  </data>
  <data name="clsInternalBusinessObject_MissingAction0" xml:space="preserve">
    <value>T_Missing action {0}</value>
  </data>
  <data name="clsInternalBusinessObject_AnInternalBusinessObjectCannotBeConfigured" xml:space="preserve">
    <value>T_An Internal Business Object cannot be configured</value>
  </data>
  <data name="clsNavigateStep_AMIDidNotRecogniseTheActionType0" xml:space="preserve">
    <value>T_AMI did not recognise the action type '{0}'</value>
  </data>
  <data name="clsProcess_ThereWasAnErrorWritingToTheSpecifiedLocation0" xml:space="preserve">
    <value>T_There was an error writing to the specified location - {0}</value>
  </data>
  <data name="clsProcess_InitFailed0" xml:space="preserve">
    <value>T_Init failed - {0}</value>
  </data>
  <data name="clsProcess_CanTRunNextStepWhenNotRunningInTheFirstPlace" xml:space="preserve">
    <value>T_Can't RunNextStep when not running in the first place!</value>
  </data>
  <data name="clsProcess_InternalErrorCouldNotFindCurrentRunStageWithID0" xml:space="preserve">
    <value>T_Internal error - could not find current run stage with ID '{0}'</value>
  </data>
  <data name="clsProcess_ThereIsNoCurrentRunStage" xml:space="preserve">
    <value>T_There is no current run-stage</value>
  </data>
  <data name="clsProcess_IsStageInRecoverySectionCalledOutOfContext" xml:space="preserve">
    <value>T_IsStageInRecoverySection called out of context</value>
  </data>
  <data name="clsProcess_StageLinksBackToRecoveryCalledOutOfContext" xml:space="preserve">
    <value>T_StageLinksBackToRecovery called out of context</value>
  </data>
  <data name="clsProcess_UnrecognisedDataType0" xml:space="preserve">
    <value>T_Unrecognised data type: T_{0}</value>
  </data>
  <data name="clsProcess_TheTargetStoreInCollection" xml:space="preserve">
    <value>T_the target 'store-in' collection</value>
  </data>
  <data name="clsProcess_TheOutputParameterSCollection" xml:space="preserve">
    <value>T_the output parameter's collection</value>
  </data>
  <data name="clsProcess_CannotSetNextStageThatKindOfStage" xml:space="preserve">
    <value>T_Cannot set next stage that kind of stage</value>
  </data>
  <data name="clsProcess_MissingStageForSetRunStage" xml:space="preserve">
    <value>T_Missing stage for SetRunStage</value>
  </data>
  <data name="clsProcess_TheCollectionDefinitionOfField0IsOfDatatype1WhichDoesNotMatchTheIncomingFieldOf" xml:space="preserve">
    <value>T_The collection definition of field {0} is of datatype {1} which does not match the incoming field of datatype {2}</value>
  </data>
  <data name="clsProcess_TheCollectionDefinitionDoesNotContainTheField0" xml:space="preserve">
    <value>T_The collection definition does not contain the field {0}</value>
  </data>
  <data name="clsProcess_OutputParametersCanOnlyMapToStages" xml:space="preserve">
    <value>T_Output parameters can only map to stages</value>
  </data>
  <data name="clsProcess_ParameterIsNotAnInOrOutParameter" xml:space="preserve">
    <value>T_Parameter is not an in or out parameter</value>
  </data>
  <data name="clsProcess_OutputsFromExternalProcessWereEmpty" xml:space="preserve">
    <value>T_Outputs from external process were empty</value>
  </data>
  <data name="clsProcess_ErrorUpdatingStatistic0" xml:space="preserve">
    <value>T_Error updating statistic: T_{0}.</value>
  </data>
  <data name="clsProcess_CannotSetTheValueOnAnEnvironmentVariable" xml:space="preserve">
    <value>T_Cannot set the value on an environment variable</value>
  </data>
  <data name="clsProcess_FailedToTranslateData0" xml:space="preserve">
    <value>T_Failed to translate data - {0}</value>
  </data>
  <data name="clsProcess_CollectionFieldsAreDefinedButCannotBeMatchedToTheIncomingCollection0" xml:space="preserve">
    <value>T_Collection fields are defined but cannot be matched to the incoming collection - {0}</value>
  </data>
  <data name="clsProcess_CannotStoreOutputIn0BecauseItIsOnAnotherPageAndHasBeenHidden" xml:space="preserve">
    <value>T_Cannot store output in {0} because it is on another page, and has been hidden</value>
  </data>
  <data name="clsProcess_Stage0DoesNotExist" xml:space="preserve">
    <value>T_Stage {0} does not exist</value>
  </data>
  <data name="clsProcess_InvalidMapType0ForParameterInvalidProcess" xml:space="preserve">
    <value>T_Invalid map type '{0}' for parameter. T_Invalid process?</value>
  </data>
  <data name="clsProcess_CannotUse0ForParameterBecauseItIsOnAnotherPageAndHasBeenHidden" xml:space="preserve">
    <value>T_Cannot use {0} for parameter because it is on another page, and has been hidden</value>
  </data>
  <data name="clsProcess_MissingStage0ForParameter" xml:space="preserve">
    <value>T_Missing stage {0} for parameter</value>
  </data>
  <data name="clsProcess_CannotRead01" xml:space="preserve">
    <value>T_Cannot read {0} - {1}</value>
  </data>
  <data name="clsProcess_0RefersToACollectionFieldButThatStageIsNotACollection" xml:space="preserve">
    <value>T_{0} refers to a collection field, but that stage is not a collection</value>
  </data>
  <data name="clsProcess_CanTConvertParameter0From1To23" xml:space="preserve">
    <value>T_Can't convert parameter {0} from {1} to {2} - {3}</value>
  </data>
  <data name="clsProcess_TheStage0IsOfType1ButCollectionNotationIsUsed2" xml:space="preserve">
    <value>T_The stage '{0}' is of type '{1}', but collection notation is used: T_{2}</value>
  </data>
  <data name="clsProcess_CannotAccessTheStage0OutOfScope" xml:space="preserve">
    <value>T_Cannot access the stage '{0}' - out of scope</value>
  </data>
  <data name="clsProcess_CouldNotFindStage0" xml:space="preserve">
    <value>T_Could not find stage '{0}'.</value>
  </data>
  <data name="clsProcess_CouldNotFindReferencedCollection0" xml:space="preserve">
    <value>T_Could not find referenced collection '{0}'.</value>
  </data>
  <data name="clsProcess_CanTAccessCollection0OutOfScope" xml:space="preserve">
    <value>T_Can't access collection {0} - out of scope</value>
  </data>
  <data name="clsProcess_RunStep_Exception" xml:space="preserve">
    <value>T_Exception: </value>
  </data>
  <data name="clsProcess_LoggingFailed" xml:space="preserve">
    <value>T_Logging failed: </value>
  </data>
  <data name="clsProcess_RunStepCalledWhenInAnUnexpectedState" xml:space="preserve">
    <value>T_RunStep called when in an unexpected state</value>
  </data>
  <data name="clsProcess_UnexpectedError" xml:space="preserve">
    <value>T_Unexpected error </value>
  </data>
  <data name="clsProcess_TheCurrentStageHasBeenDeleted" xml:space="preserve">
    <value>T_The current stage has been deleted</value>
  </data>
  <data name="clsProcess_ThereIsNoCurrentStage" xml:space="preserve">
    <value>T_There is no current stage</value>
  </data>
  <data name="clsProcess_NoResultWasGeneratedThisShouldNeverHappen" xml:space="preserve">
    <value>T_No result was generated - this should never happen!</value>
  </data>
  <data name="clsProcess_AStackImbalanceHasOccurredCheckYourProcessForErrors" xml:space="preserve">
    <value>T_A stack imbalance has occurred. T_Check your process for errors.</value>
  </data>
  <data name="clsProcess_RedoFailed" xml:space="preserve">
    <value>T_Redo failed</value>
  </data>
  <data name="clsProcess_RedoFailed0" xml:space="preserve">
    <value>T_Redo failed - {0}</value>
  </data>
  <data name="clsProcess_CouldNotUndo" xml:space="preserve">
    <value>T_Could not undo</value>
  </data>
  <data name="clsProcess_UndoFailed0" xml:space="preserve">
    <value>T_Undo failed - {0}</value>
  </data>
  <data name="clsProcess_UndoFailed" xml:space="preserve">
    <value>T_Undo failed</value>
  </data>
  <data name="clsProcess_ThisIsAVeryOldProcessWhichCannotBeLoadedIntoThisVersionOfAutomatePleaseContactB" xml:space="preserve">
    <value>T_This is a very old process which cannot be loaded into this version of Automate. T_Please contact Blue Prism Technical Support for assistance</value>
  </data>
  <data name="clsProcess_ExceptionWhileLoadingProcess0" xml:space="preserve">
    <value>T_Exception while loading process : T_{0}</value>
  </data>
  <data name="clsProcess_ExceptionOccurred0" xml:space="preserve">
    <value>T_Exception occurred: T_{0}</value>
  </data>
  <data name="clsProcess_TheFollowingClipboardStagesWereIgnored" xml:space="preserve">
    <value>T_The following clipboard stages were ignored:</value>
  </data>
  <data name="clsProcess_TheFollowingStagesWereReplacedByTheClipboardStages" xml:space="preserve">
    <value>T_The following stages were replaced by the clipboard stages:</value>
  </data>
  <data name="clsProcess_PageInformationStage0b" xml:space="preserve">
    <value>T_Page Information Stage -{0}</value>
  </data>
  <data name="clsProcess_PageInformationStage0" xml:space="preserve">
    <value>T_Page Information Stage - {0}</value>
  </data>
  <data name="clsProcess_ThePageInformationBoxFromTheClipboardWillNotBePastedAsAPageInformationBoxCanOnl" xml:space="preserve">
    <value>T_The Page Information Box from the clipboard will not be pasted, as a Page Information box can only go on the first page. 

T_Also the Page Information Box from the clipboard will not be pasted, as a Page Information box can only go on the first page.</value>
  </data>
  <data name="clsProcess_InformationBox0" xml:space="preserve">
    <value>T_Information box - {0}</value>
  </data>
  <data name="clsProcess_StartStage0" xml:space="preserve">
    <value>T_Start stage - {0}</value>
  </data>
  <data name="clsProcess_BadProcessPassedToPasteProcessMethod" xml:space="preserve">
    <value>T_Bad process passed to paste process method</value>
  </data>
  <data name="clsProcess_CanNotCopyOrCutStageDataBecauseNoStagesAreSelected" xml:space="preserve">
    <value>T_Can not copy or cut stage data, because no stages are selected</value>
  </data>
  <data name="clsProcess_YouHaveSelectedOneOrMoreStagesWhichAreGroupedToAnotherStageForExampleALoopStart" xml:space="preserve">
    <value>T_You have selected one or more stages which are grouped to another stage
T_(for example a Loop Start stage) without selecting the other stage(s) in the group
T_(for example the Loop End stage). 

T_Please ensure that all such stages are included in your selection before attempting
T_to copy or cut to the clipboard.</value>
  </data>
  <data name="clsProcess_CouldNotFindStageWithSuppliedID" xml:space="preserve">
    <value>T_Could not find stage with supplied ID</value>
  </data>
  <data name="clsProcess_0ErrorMessageWas1" xml:space="preserve">
    <value>T_{0} Error message was - {1}</value>
  </data>
  <data name="clsProcess_FailedToFindStageLinkedFromStage0OnPage1" xml:space="preserve">
    <value>T_Failed to find stage linked from stage '{0}' on page '{1}'.</value>
  </data>
  <data name="clsProcess_CouldNotFindCurrentRunstageFromId0" xml:space="preserve">
    <value>T_Could not find current runstage from id '{0}'</value>
  </data>
  <data name="clsProcess_MissingSubsheetWithID0" xml:space="preserve">
    <value>T_Missing subsheet with ID: T_{0}</value>
  </data>
  <data name="clsProcess_WrongNumberOfSheetsProcessHas0GivenCollectionHas1" xml:space="preserve">
    <value>T_Wrong number of sheets - process has {0}; given collection has {1}</value>
  </data>
  <data name="clsProcess_PageNotFound" xml:space="preserve">
    <value>T_Page not found</value>
  </data>
  <data name="clsProcess_CanTCreateALinkToA0Stage" xml:space="preserve">
    <value>T_Can't create a link to a {0} stage</value>
  </data>
  <data name="clsProcess_CanTCreateALinkBetweenStagesOnDifferentSheets" xml:space="preserve">
    <value>T_Can't create a link between stages on different sheets</value>
  </data>
  <data name="clsProcess_UnableToDeleteStage0" xml:space="preserve">
    <value>T_Unable to delete stage: T_{0}</value>
  </data>
  <data name="clsProcess_NoLoggingEngineAvailableToUpdateStatistic" xml:space="preserve">
    <value>T_No logging engine available to update statistic</value>
  </data>
  <data name="clsProcess_AttemptToSetApplicationDefinitionPropertyOfProcessWhenProcessTypeIsNotBusinessO" xml:space="preserve">
    <value>T_Attempt to set application definition property of process when process type is not business object</value>
  </data>
  <data name="clsProcess_TheAMIPropertyOnlyValidForProcessesOfTypeObject" xml:space="preserve">
    <value>T_The AMI property only valid for processes of type Object</value>
  </data>
  <data name="clsProcess_SteppingOver" xml:space="preserve">
    <value>T_Stepping Over</value>
  </data>
  <data name="clsProcess_Action1" xml:space="preserve">
    <value>T_Action 1</value>
  </data>
  <data name="clsProcess_InitialiseYouWillNotBeAbleToCallThisActionFromABusinessProcessNorWillItBeCalledAtAnyOther" xml:space="preserve">
    <value>T_You will not be able to call this action from a business process, nor will it be called at any other time than after the creation of the object.</value>
  </data>
  <data name="clsProcess_TheInitialiseActionWillBeCalledAutomaticallyImmediatelyAfterLoadingYourBusiness" xml:space="preserve">
    <value>T_The initialise action will be called automatically immediately after loading your business object.</value>
  </data>
  <data name="clsProcess_ThisIsAnOptionalPageWhereYouMightChooseToPerformSomeInitialisationTasksAfterYou" xml:space="preserve">
    <value>T_This is an optional page where you might choose to perform some initialisation tasks after your business object is loaded.</value>
  </data>
  <data name="clsProcess_InitialisePage" xml:space="preserve">
    <value>T_Initialise Page</value>
  </data>
  <data name="clsProcess_CleanUpYouWillNotBeAbleToCallThisActionFromABusinessProcessNorWillItBeCalledAtAnyOther" xml:space="preserve">
    <value>T_You will not be able to call this action from a business process, nor will it be called at any other time than before the disposal of the business object.</value>
  </data>
  <data name="clsProcess_TheCleanupActionWillBeCalledAutomaticallyImmediatelyAfterClosingYourBusinessObj" xml:space="preserve">
    <value>T_The cleanup action will be called automatically immediately after closing your business object at the end of a business process.</value>
  </data>
  <data name="clsProcess_CleanUpPageThisIsAnOptionalPageWhereYouMightChooseToPerformSomeFinalisationOrCl" xml:space="preserve">
    <value>T_Clean Up Page

T_This is an optional page where you might choose to perform some finalisation (or "cleanup") tasks as your business object is closed down.</value>
  </data>
  <data name="clsProcess_0Copy" xml:space="preserve">
    <value>T_{0} - Copy</value>
  </data>
  <data name="clsProcess_0Copy1" xml:space="preserve">
    <value>T_{0} - Copy ({1})</value>
  </data>
  <data name="clsProcess_AlsoTheStage0WillNotBePastedBecauseItIsAnObjectStudioStage" xml:space="preserve">
    <value>T_Also the stage '{0}' will not be pasted because it is an Object Studio stage</value>
  </data>
  <data name="clsProcess_TheStage0WillNotBePastedBecauseItIsAnObjectStudioStage" xml:space="preserve">
    <value>T_The stage '{0}' will not be pasted because it is an Object Studio stage</value>
  </data>
  <data name="clsProcess_AlsoThe0InformationBoxFromTheClipboardWasNotPastedAsA1InformationBoxCanOnlyGoOn" xml:space="preserve">
    <value>T_Also the {0} Information box from the clipboard was not pasted, as a {1} Information box can only go on the first page.</value>
  </data>
  <data name="clsProcess_The0InformationBoxFromTheClipboardWasNotPastedAsA1InformationBoxCanOnlyGoOnTheF" xml:space="preserve">
    <value>T_The {0} Information box from the clipboard was not pasted, as a {1} Information box can only go on the first page.</value>
  </data>
  <data name="clsProcess_AlsoThe0InformationBoxFromTheClipboardWasIgnored" xml:space="preserve">
    <value>T_Also the {0} Information box from the clipboard was ignored.</value>
  </data>
  <data name="clsProcess_The0InformationBoxFromTheClipboardWasIgnored" xml:space="preserve">
    <value>T_The {0} Information box from the clipboard was ignored.</value>
  </data>
  <data name="clsProcess_GetPastableProcess_BusinessObject" xml:space="preserve">
    <value>T_Business Object</value>
  </data>
  <data name="clsProcess_GetPastableProcess_Process" xml:space="preserve">
    <value>T_Process</value>
  </data>
  <data name="clsProcess_UnableToInterpretClipboardTextAsProcessXml" xml:space="preserve">
    <value>T_Unable to interpret clipboard text as process xml</value>
  </data>
  <data name="clsProcessBreakpoint_ConditionInsideBreakpointExpressionEvaluatesToA0DataItemOnly1ResultsAreValid" xml:space="preserve">
    <value>T_Condition inside breakpoint expression evaluates to a {0} data item. T_Only {1} results are valid.</value>
  </data>
  <data name="clsProcessBreakpoint_FailedToEvaluateBreakpointCondition0" xml:space="preserve">
    <value>T_Failed to evaluate breakpoint condition - {0}</value>
  </data>
  <data name="clsProcessDataTypes_NoDatatypeFoundWithTheName0" xml:space="preserve">
    <value>T_No datatype found with the name '{0}'</value>
  </data>
  <data name="clsProcessDataTypes_UnknownIsTheNameGivenToTheTypeOfADataItemWhenNoTypeHasYetBeenSetForTheItem" xml:space="preserve">
    <value>T_Unknown is the name given to the type of a data item when no type has yet been set for the item.</value>
  </data>
  <data name="clsProcessDataTypes_BinaryItemsAreUsedToStoreBinaryData" xml:space="preserve">
    <value>T_Binary items are used to store binary data</value>
  </data>
  <data name="clsProcessDataTypes_ImageItemsAreUsedToStoreImages" xml:space="preserve">
    <value>T_Image items are used to store images</value>
  </data>
  <data name="clsProcessDataTypes_TimeSpanItemsAreUsedToStoreLengthsOfTimeInDaysHoursMinutesAndSeconds00ForExampl" xml:space="preserve">
    <value>T_TimeSpan items are used to store lengths of time in days, hours, minutes and seconds.{0}{0}For example, this may represent the time elapsed between telephone conversations with a customer.</value>
  </data>
  <data name="clsProcessDataTypes_TextItemsAreUsedToStoreAlphanumericData00ThisInformationMayBeNamesAddressesTele" xml:space="preserve">
    <value>T_Text items are used to store alphanumeric data.{0}{0}This information may be names, addresses, telephone numbers, etc.</value>
  </data>
  <data name="clsProcessDataTypes_PasswordItemsAreUsedToStoreSensitiveData00AnyInformationTypedIntoAPasswordField" xml:space="preserve">
    <value>T_Password items are used to store sensitive data.{0}{0}Any information typed into a password field will be obscured and will never be revealed.</value>
  </data>
  <data name="clsProcessDataTypes_NumberItemsAreUsedToStoreNumericValues00ForExampleThisMayBeAnAccountBalanceOrTh" xml:space="preserve">
    <value>T_Number items are used to store numeric values.{0}{0}For example, this may be an account balance or the value of a monthly payment.</value>
  </data>
  <data name="clsProcessDataTypes_AFlagItemCanStoreOneOfTwoValuesTrueOrFalse00TypicallyAFlagItemMayBeUsedToRecord" xml:space="preserve">
    <value>T_A Flag item can store one of two values: T_True or False.{0}{0}Typically a Flag item may be used to record whether or not a letter was sent to a customer or whether or not a case belongs to a special group of cases.</value>
  </data>
  <data name="clsProcessDataTypes_DateTimeItemsAreUsedToStoreDateAndTimeDataValuesMayRangeFrom0To122TheyAreSimila" xml:space="preserve">
    <value>T_DateTime items are used to store date and time data. T_Values may range from {0} to {1}.{2}{2}They are similar to Date items, but Date items cannot store time data.</value>
  </data>
  <data name="clsProcessDataTypes_DateItemsAreUsedToRecordADateInTheYearValuesMayRangeFrom0To122TheyAreSimilarToD" xml:space="preserve">
    <value>T_Date items are used to record a date in the year. T_Values may range from {0} to {1}.{2}{2}They are similar to DateTime items, but Date items cannot store time data.</value>
  </data>
  <data name="clsProcessDataTypes_CollectionsAreUsedToStoreManyPiecesOfInformationAtOnce00ForExampleThisMayBeALis" xml:space="preserve">
    <value>T_Collections are used to store many pieces of information at once.{0}{0}For example this may be a list of customers together with their contact details.</value>
  </data>
  <data name="clsProcessDataTypes_UnrecognisedDataType" xml:space="preserve">
    <value>T_Unrecognised data type.</value>
  </data>
  <data name="clsProcessOperator_Power_RaisesANumberToThePowerOfAnotherEg34333381" xml:space="preserve">
    <value>T_Raises a number to the power of another - eg 3^4 = 3*3*3*3 = 81.</value>
  </data>
  <data name="clsProcessOperator_Divide_GetsANumberByDividingOneNumberByAnotherEG12ResultsIn05" xml:space="preserve">
    <value>T_Gets a number by dividing one number by another. 
  T_E.g. 1 / 2 results in 0.5.</value>
  </data>
  <data name="clsProcessOperator_Multiply_GetsANumberByMultiplyingTwoNumbersTogetherEG12ResultsIn2" xml:space="preserve">
    <value>T_Gets a number by multiplying two numbers together. 
  T_E.g. 1 * 2 results in 2.</value>
  </data>
  <data name="clsProcessOperator_Subtract_GetsANumberBySubtractingOneNumberFromAnotherEG21ResultsIn1" xml:space="preserve">
    <value>T_Gets a number by subtracting one number from another. 
  T_E.g. 2 - 1 results in 1.</value>
  </data>
  <data name="clsProcessOperator_Add_GetsANumberByAddingTwoNumbersTogetherEG12ResultsIn3" xml:space="preserve">
    <value>T_Gets a number by adding two numbers together. 
  T_E.g. 1 + 2 results in 3.</value>
  </data>
  <data name="clsProcessOperator_Concatenate_GetsATextExpressionByConcatenatingTwoOthersEGABResultsInAB" xml:space="preserve">
    <value>T_Gets a text expression by concatenating two others. 
  T_E.g. T_"A" & "B" results in "AB".</value>
  </data>
  <data name="clsProcessOperator_LessThanOrEqual_GetsAFlagSayingWhetherOneValueIsLessThanOrEqualToAnotherEG35ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is less than or equal to another. 
  T_E.g. 3 <= 5 results in True.</value>
  </data>
  <data name="clsProcessOperator_LessThan_GetsAFlagSayingWhetherOneValueIsLessThanAnotherEG35ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is less than another. 
  T_E.g. 3 < 5 results in True.</value>
  </data>
  <data name="clsProcessOperator_GreaterThanOrEqual_GetsAFlagSayingWhetherOneValueIsGreaterThanOrEqualToAnotherEG53ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is greater than or equal to another. 
  T_E.g. 5 >= 3 results in True.</value>
  </data>
  <data name="clsProcessOperator_GreaterThan_GetsAFlagSayingWhetherOneValueIsGreaterThanAnotherEG53ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is greater than another. 
  T_E.g. 5 > 3 results in True.</value>
  </data>
  <data name="clsProcessOperator_Inequal_GetsAFlagSayingWhetherOneValueIsNotEqualToAnotherEG53ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is not equal to another. 
  T_E.g. 5 <> 3 results in True.</value>
  </data>
  <data name="clsProcessOperator_Equal_GetsAFlagSayingWhetherOneValueIsEqualToAnotherEG532ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether one value is equal to another. 
  T_E.g. 5 = 3 + 2 results in True.</value>
  </data>
  <data name="clsProcessOperator_Or_GetsAFlagSayingWhetherAtLeastOneOfTwoConditionsIsTrueEG12OR34ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether at least one of two conditions is true. 
  T_E.g. T_1<2 OR 3>4 results in True.</value>
  </data>
  <data name="clsProcessOperator_And_GetsAFlagSayingWhetherTwoConditionsAreSimultaneouslyTrueEG12AND34ResultsInTrue" xml:space="preserve">
    <value>T_Gets a flag saying whether two conditions are simultaneously true. 
  T_E.g. T_(1<2) AND (3<4) results in True.</value>
  </data>
  <data name="clsProcessOperators_CanTCompare0" xml:space="preserve">
    <value>T_Can't compare {0}</value>
  </data>
  <data name="clsProcessOperators_ATimeSpanCanOnlyBeComparedToAnotherTimespan" xml:space="preserve">
    <value>T_A timeSpan can only be compared to another timespan</value>
  </data>
  <data name="clsProcessOperators_CanTCompareDifferentDateTypes" xml:space="preserve">
    <value>T_Can't compare different date types</value>
  </data>
  <data name="clsProcessOperators_CanOnlyCompareANumberToANumber" xml:space="preserve">
    <value>T_Can only compare a number to a number</value>
  </data>
  <data name="clsProcessOperators_DoOp_Less_ATimespanCanOnlyBeComparedToAnotherTimespan" xml:space="preserve">
    <value>T_A timespan can only be compared to another timespan</value>
  </data>
  <data name="clsProcessOperators_DoOp_GreaterEq_ATimespanCanOnlyBeComparedToAnotherTimespan" xml:space="preserve">
    <value>T_A timespan can only be compared to another timespan</value>
  </data>
  <data name="clsProcessOperators_DoOp_Greater_ATimespanCanOnlyBeComparedToAnotherTimespan" xml:space="preserve">
    <value>T_A timespan can only be compared to another timespan</value>
  </data>
  <data name="clsProcessOperators_DivisionByZeroCannotEvaluate0ToThePowerOfANegativeValue" xml:space="preserve">
    <value>T_Division by zero - cannot evaluate 0 to the power of a negative value</value>
  </data>
  <data name="clsProcessOperators_CanOnlyPerformExponentiationUsingTwoNumbers" xml:space="preserve">
    <value>T_Can only perform exponentiation using two numbers</value>
  </data>
  <data name="clsProcessOperators_CanTDivideA0" xml:space="preserve">
    <value>T_Can't divide a {0}</value>
  </data>
  <data name="clsProcessOperators_DivisionByZero" xml:space="preserve">
    <value>T_Division by zero</value>
  </data>
  <data name="clsProcessOperators_CanOnlyDivideATimespanByANumber" xml:space="preserve">
    <value>T_Can only divide a timespan by a number</value>
  </data>
  <data name="clsProcessOperators_CanOnlyDivideANumberByANumber" xml:space="preserve">
    <value>T_Can only divide a number by a number</value>
  </data>
  <data name="clsProcessOperators_CanTMultiplyA0" xml:space="preserve">
    <value>T_Can't multiply a {0}</value>
  </data>
  <data name="clsProcessOperators_CanOnlyMultiplyTimespanByANumber" xml:space="preserve">
    <value>T_Can only multiply timespan by a number</value>
  </data>
  <data name="clsProcessOperators_YouCanOnlyMultiplyANumberByAnotherNumberOrATimespan" xml:space="preserve">
    <value>T_You can only multiply a number by another number or a timespan</value>
  </data>
  <data name="clsProcessOperators_CanTSubtractFrom0" xml:space="preserve">
    <value>T_Can't subtract from {0}</value>
  </data>
  <data name="clsProcessOperators_CanOnlySubtractATimespanFromATimespan" xml:space="preserve">
    <value>T_Can only subtract a timespan from a timespan</value>
  </data>
  <data name="clsProcessOperators_CanOnlySubtractATimespanOrA0FromA0" xml:space="preserve">
    <value>T_Can only subtract a timespan or a {0} from a {0}</value>
  </data>
  <data name="clsProcessOperators_CanOnlySubtractANumberFromANumber" xml:space="preserve">
    <value>T_Can only subtract a number from a number</value>
  </data>
  <data name="clsProcessOperators_CanTAddTo0" xml:space="preserve">
    <value>T_Can't add to {0}</value>
  </data>
  <data name="clsProcessOperators_CanOnlyAddABinaryToABinary" xml:space="preserve">
    <value>T_Can only add a binary to a binary</value>
  </data>
  <data name="clsProcessOperators_CanOnlyAddATimespanToA0" xml:space="preserve">
    <value>T_Can only add a timespan to a {0}</value>
  </data>
  <data name="clsProcessOperators_CanOnlyAddATimespanToATimespan" xml:space="preserve">
    <value>T_Can only add a timespan to a timespan</value>
  </data>
  <data name="clsProcessOperators_CanOnlyAddANumberToANumber" xml:space="preserve">
    <value>T_Can only add a number to a number</value>
  </data>
  <data name="clsProcessOperators_ExceptionOccurred0" xml:space="preserve">
    <value>T_Exception occurred - {0}</value>
  </data>
  <data name="clsProcessOperators_UnknownOperator0" xml:space="preserve">
    <value>T_Unknown operator '{0}'</value>
  </data>
  <data name="clsProcessOperators_BothOperandsForORMustBeFlag" xml:space="preserve">
    <value>T_Both operands for 'OR' must be flag</value>
  </data>
  <data name="clsProcessOperators_BothOperandsForANDMustBeFlags" xml:space="preserve">
    <value>T_Both operands for 'AND' must be flags</value>
  </data>
  <data name="clsProcessOperators_CannotPerform0OperationWhenTheRightHandValueIsEmpty" xml:space="preserve">
    <value>T_Cannot perform {0} operation when the right-hand value is empty</value>
  </data>
  <data name="clsProcessOperators_CannotPerform0OperationWhenTheLeftHandValueIsEmpty" xml:space="preserve">
    <value>T_Cannot perform {0} operation when the left-hand value is empty</value>
  </data>
  <data name="clsProcessOperators_The0OperationMustHaveTwoOperands" xml:space="preserve">
    <value>T_The {0} operation must have two operands</value>
  </data>
  <data name="clsProcessOperators_InvalidDataTypeForUnaryMinus" xml:space="preserve">
    <value>T_Invalid data type for unary minus</value>
  </data>
  <data name="clsProcessOperators_CannotPerform0OperationOnAnEmptyValue" xml:space="preserve">
    <value>T_Cannot perform {0} operation on an empty value</value>
  </data>
  <data name="clsExpression_UnexpectedInParameters" xml:space="preserve">
    <value>T_Unexpected ) in parameters</value>
  </data>
  <data name="clsExpression_DataItem0CannotBeAccessedFromStage1BecauseItHasBeenHiddenFromTheCurrentPage" xml:space="preserve">
    <value>T_Data item {0} cannot be accessed from stage '{1}' because it has been hidden from the current page.</value>
  </data>
  <data name="clsExpression_MissingData0" xml:space="preserve">
    <value>T_Missing data: T_{0}</value>
  </data>
  <data name="clsExpression_DataItemsMustBeBetweenAndTextMustBeBetweenAndFunctionsShouldBeInTheFormFunction" xml:space="preserve">
    <value>T_Data items must be between [ and ]. T_Text must be between " and ". T_Functions should be in the form FunctionName()</value>
  </data>
  <data name="clsExpression_NoFieldNameSpecifiedWithinCollection0" xml:space="preserve">
    <value>T_No field name specified within collection '{0}'</value>
  </data>
  <data name="clsExpression_Stage0IsNotACollection" xml:space="preserve">
    <value>T_Stage '{0}' is not a collection</value>
  </data>
  <data name="clsExpression_Collection0IsOutOfScope" xml:space="preserve">
    <value>T_Collection '{0}' is out of scope</value>
  </data>
  <data name="clsExpression_MissingCollection0" xml:space="preserve">
    <value>T_Missing collection: T_{0}</value>
  </data>
  <data name="clsExpression_CollectionNameMustHaveAndAroundIt" xml:space="preserve">
    <value>T_Collection name must have [ and ] around it</value>
  </data>
  <data name="clsExpression_CouldNotConvert0IntoANumber" xml:space="preserve">
    <value>T_Could not convert '{0}' into a number</value>
  </data>
  <data name="clsExpression_InvalidValuesSuppliedToParametersOfFunction0" xml:space="preserve">
    <value>T_Invalid values supplied to parameters of function '{0}'</value>
  </data>
  <data name="clsExpression_IncorrectNumberOfParametersToFunction0" xml:space="preserve">
    <value>T_Incorrect number of parameters to function '{0}'</value>
  </data>
  <data name="clsExpression_UndefinedFunction0" xml:space="preserve">
    <value>T_Undefined function '{0}'</value>
  </data>
  <data name="clsExpression_SyntaxErrorTheToken0IsInvalidPleaseCheckTheCaseOfYourOperatorsEgOrVersusORAndCh" xml:space="preserve">
    <value>T_Syntax error. T_The token '{0}' is invalid. T_Please check the case of your operators (eg 'or' versus 'OR') and check that your functions use brackets after the function name eg Now(), eg Len("abc").</value>
  </data>
  <data name="clsExpression_The0OperatorRequiresAnExpressionOnTheRightNoSuchExpressionFound" xml:space="preserve">
    <value>T_The '{0}' operator requires an expression on the right - no such expression found</value>
  </data>
  <data name="clsExpression_CannotEvaluateAnExpressionWithoutAScope" xml:space="preserve">
    <value>T_Cannot evaluate an expression without a scope</value>
  </data>
  <data name="clsExpression_EvaluateExpression_MissingQuote" xml:space="preserve">
    <value>T_Missing "</value>
  </data>
  <data name="clsExpression_EvaluateExpression_MissingRightBracket" xml:space="preserve">
    <value>T_Missing ]</value>
  </data>
  <data name="clsExpression_EvaluateExpression_MisplacedLeftBracket" xml:space="preserve">
    <value>T_Misplaced [</value>
  </data>
  <data name="clsExpression_EvaluateExpression_MisplacedQuote" xml:space="preserve">
    <value>T_Misplaced "</value>
  </data>
  <data name="clsExpression_InvalidDataType" xml:space="preserve">
    <value>T_Invalid data type</value>
  </data>
  <data name="clsExpression_NoResult" xml:space="preserve">
    <value>T_No result</value>
  </data>
  <data name="clsProcessParameter_0HasNoDefinedFields" xml:space="preserve">
    <value>T_'{0}' has no defined fields</value>
  </data>
  <data name="clsProcessParameter_ForOutputParameter0" xml:space="preserve">
    <value> T_for output parameter '{0}'</value>
  </data>
  <data name="clsProcessParameter_ForInputParameter0" xml:space="preserve">
    <value> T_for input parameter '{0}'</value>
  </data>
  <data name="clsProcessParameter_TheInputParameter0" xml:space="preserve">
    <value>T_the input parameter '{0}'</value>
  </data>
  <data name="clsSelectionContainerEnumerator_CollectionHasBeenModifiedSinceTheIterationBegan" xml:space="preserve">
    <value>T_Collection has been modified since the iteration began</value>
  </data>
  <data name="clsProcessStageComparer_BadValuesPassedToStageComparer" xml:space="preserve">
    <value>T_Bad values passed to stage comparer</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoASecureString" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a secure string</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoAByteArray" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a byte array</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoAnImage" xml:space="preserve">
    <value>T_Cannot cast a {0} value into an image</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoAGuid" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a Guid</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoABoolean" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a boolean</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoADecimal" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a decimal</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoAnInteger" xml:space="preserve">
    <value>T_Cannot cast a {0} value into an integer</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoATimespan" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a timespan</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoADate" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a date</value>
  </data>
  <data name="clsProcessValue_CannotConvertA0ValueIntoADate" xml:space="preserve">
    <value>T_Cannot convert a {0} value into a date</value>
  </data>
  <data name="clsProcessValue_CannotCastA0ValueIntoAString" xml:space="preserve">
    <value>T_Cannot cast a {0} value into a string</value>
  </data>
  <data name="clsProcessValue_CannotGetValueAsLocalDateTimeWhenTypeIs0" xml:space="preserve">
    <value>T_Cannot get value as Local DateTime when type is {0}</value>
  </data>
  <data name="clsProcessValue_CannotGetValueAsUTCDateTimeWhenTypeIs0" xml:space="preserve">
    <value>T_Cannot get value as UTC DateTime when type is {0}</value>
  </data>
  <data name="clsProcessValue_TheDatatype0CannotBeConvertedIntoADate" xml:space="preserve">
    <value>T_The datatype '{0}' cannot be converted into a date</value>
  </data>
  <data name="clsProcessValue_InvalidCastOperationArgumentsFrom0To1Value2" xml:space="preserve">
    <value>T_Invalid cast operation arguments - from {0} to {1}; Value={2}</value>
  </data>
  <data name="clsProcessValue_UnableToParseValue0AsTimespan" xml:space="preserve">
    <value>T_Unable to parse value '{0}' as timespan</value>
  </data>
  <data name="clsProcessValue_UnableToParseValue0AsFlag" xml:space="preserve">
    <value>T_Unable to parse value '{0}' as flag</value>
  </data>
  <data name="clsProcessValue_UnableToCastValue0ToANumberDataItem" xml:space="preserve">
    <value>T_Unable to cast value '{0}' to a number data item</value>
  </data>
  <data name="clsProcessValue_TextValue0CannotBeInterpretedAsA1" xml:space="preserve">
    <value>T_Text value '{0}' cannot be interpreted as a {1}</value>
  </data>
  <data name="clsProcessValue_NoConversionAvailableFrom0To1" xml:space="preserve">
    <value>T_No conversion available from {0} to {1}</value>
  </data>
  <data name="clsProcessValue_CannotCastToUnknownType" xml:space="preserve">
    <value>T_Cannot cast to unknown type</value>
  </data>
  <data name="clsProcessValue_UnexpectedDataType0" xml:space="preserve">
    <value>T_Unexpected data type: T_{0}</value>
  </data>
  <data name="clsProcessValue_InvalidValueForANumber0" xml:space="preserve">
    <value>T_Invalid value for a number: T_{0}</value>
  </data>
  <data name="clsProcessValue_InvalidValueForAFlag0" xml:space="preserve">
    <value>T_Invalid value for a flag: T_{0}</value>
  </data>
  <data name="clsProcessValue_InvalidValueForADateDatetime0" xml:space="preserve">
    <value>T_Invalid value for a date/datetime: T_{0}</value>
  </data>
  <data name="clsProcessValue_DataTypeOf0IsNotValidForAValueOriginatingFromAUserInterface" xml:space="preserve">
    <value>T_Data type of '{0}' is not valid for a value originating from a user interface</value>
  </data>
  <data name="clsProcessValue_InvalidDataTypeForDateTime0" xml:space="preserve">
    <value>T_Invalid data type for date/time: T_{0}</value>
  </data>
  <data name="clsProcessValue_CannotFormatADateOnA0Value" xml:space="preserve">
    <value>T_Cannot format a date on a {0} value</value>
  </data>
  <data name="clsProcessValue_InvalidValue0ForANew1" xml:space="preserve">
    <value>T_Invalid value '{0}' for a new {1}</value>
  </data>
  <data name="clsProcessValue_SomethingIsCallingNewClsProcessValuePassingAPasswordInAsPlaintext" xml:space="preserve">
    <value>T_Something is calling New clsProcessValue, passing a password in as plaintext</value>
  </data>
  <data name="clsProcessValue_CouldNotConvertTheGivenBase64StringIntoABinaryValue0" xml:space="preserve">
    <value>T_Could not convert the given base64 string into a binary value: T_{0}</value>
  </data>
  <data name="clsProcessValue_CouldNotConvertTheString0IntoATimespanValue1" xml:space="preserve">
    <value>T_Could not convert the string '{0}' into a timespan value: T_{1}</value>
  </data>
  <data name="clsProcessWSDL_SOAPParameterConversion01DidNotMatchExpected2" xml:space="preserve">
    <value>T_SOAP parameter conversion {0}->{1} did not match expected {2}</value>
  </data>
  <data name="clsProcessWSDL_CouldNotFindAppropriateStartStageToTranslateParametersFrom" xml:space="preserve">
    <value>T_Could not find appropriate start stage to translate parameters from</value>
  </data>
  <data name="clsProcessWSDL_CanOnlyDealWithASingleRequest" xml:space="preserve">
    <value>T_Can only deal with a single request</value>
  </data>
  <data name="clsProcessWSDL_CouldnTFindPageMatchingRequestedMethod" xml:space="preserve">
    <value>T_Couldn't find page matching requested method</value>
  </data>
  <data name="clsProcessWSDL_CannotExposeCollectionParameter0BecauseTheCollectionFieldsAreNotDefined" xml:space="preserve">
    <value>T_Cannot expose collection parameter {0} because the collection fields are not defined</value>
  </data>
  <data name="clsProcessWSDL_CouldNotProcessParameter0" xml:space="preserve">
    <value>T_Could not process parameter {0}</value>
  </data>
  <data name="clsProcessWSDL_NoMethodCalled" xml:space="preserve">
    <value>T_No method called</value>
  </data>
  <data name="clsReadStep_NoteThatDataItemsShouldNotBeSurroundedBySquareBracketsInStoreInFields" xml:space="preserve">
    <value> T_Note that data items should not be surrounded by square brackets ("[","]") in 'store-in' fields</value>
  </data>
  <data name="clsReadStep_AMIDidNotRecogniseThe0ActionType1" xml:space="preserve">
    <value>T_AMI did not recognise the {0}action type '{1}'</value>
  </data>
  <data name="clsReadStep_AMIDidNotRecogniseTheActionType0" xml:space="preserve">
    <value>T_AMI did not recognise the action type '{0}'</value>
  </data>
  <data name="clsReadStep_AMIDidNotRecogniseTheAlternativeActionType0" xml:space="preserve">
    <value>T_AMI did not recognise the alternative action type '{0}'</value>
  </data>
  <data name="clsUndo_UndoTypes_Type_Title" xml:space="preserve">
    <value>T_UndoTypes_{type}_Title</value>
  </data>
  <data name="clsUndo_ResetLoggingOf" xml:space="preserve">
    <value>T_Reset logging of</value>
  </data>
  <data name="clsUndo_ResetFontStyleOf" xml:space="preserve">
    <value>T_Reset font style of</value>
  </data>
  <data name="clsUndo_ResetFontSizeOf" xml:space="preserve">
    <value>T_Reset font size of</value>
  </data>
  <data name="clsUndo_ResetFontColourOf" xml:space="preserve">
    <value>T_Reset font colour of</value>
  </data>
  <data name="clsUndo_ResetFontOf" xml:space="preserve">
    <value>T_Reset font of</value>
  </data>
  <data name="clsUndo_Unpaste" xml:space="preserve">
    <value>T_Unpaste</value>
  </data>
  <data name="clsUndo_Uncut" xml:space="preserve">
    <value>T_Uncut</value>
  </data>
  <data name="clsUndo_ReswitchLink" xml:space="preserve">
    <value>T_Reswitch link</value>
  </data>
  <data name="clsUndo_RemoveLinkTo" xml:space="preserve">
    <value>T_Remove link to</value>
  </data>
  <data name="clsUndo_ResetPageOrder" xml:space="preserve">
    <value>T_Reset page order</value>
  </data>
  <data name="clsUndo_ResetNameOf" xml:space="preserve">
    <value>T_Reset name of</value>
  </data>
  <data name="clsUndo_Unpublish" xml:space="preserve">
    <value>T_Unpublish</value>
  </data>
  <data name="clsUndo_ResetPropertiesOf" xml:space="preserve">
    <value>T_Reset properties of</value>
  </data>
  <data name="clsUndo_ResetSizeOf" xml:space="preserve">
    <value>T_Reset size of</value>
  </data>
  <data name="clsUndo_ResetPositionOf" xml:space="preserve">
    <value>T_Reset position of</value>
  </data>
  <data name="clsUndo_Restore" xml:space="preserve">
    <value>T_Restore</value>
  </data>
  <data name="clsUndo_Remove" xml:space="preserve">
    <value>T_Remove</value>
  </data>
  <data name="clsUndo_Breakpoint" xml:space="preserve">
    <value>T_Breakpoint</value>
  </data>
  <data name="clsUndo_ChangeLoggingOf" xml:space="preserve">
    <value>T_Change logging of</value>
  </data>
  <data name="clsUndo_ChangeFontStyleOf" xml:space="preserve">
    <value>T_Change font style of</value>
  </data>
  <data name="clsUndo_ChangeFontSizeOf" xml:space="preserve">
    <value>T_Change font size of</value>
  </data>
  <data name="clsUndo_ChangeFontColourOf" xml:space="preserve">
    <value>T_Change font colour of</value>
  </data>
  <data name="clsUndo_ChangeFontOf" xml:space="preserve">
    <value>T_Change font of</value>
  </data>
  <data name="clsUndo_Paste" xml:space="preserve">
    <value>T_Paste</value>
  </data>
  <data name="clsUndo_Cut" xml:space="preserve">
    <value>T_Cut</value>
  </data>
  <data name="clsUndo_SwitchLink" xml:space="preserve">
    <value>T_Switch link</value>
  </data>
  <data name="clsUndo_LinkTo" xml:space="preserve">
    <value>T_Link to</value>
  </data>
  <data name="clsUndo_ChangePageOrder" xml:space="preserve">
    <value>T_Change page order</value>
  </data>
  <data name="clsUndo_ChangeNameOf" xml:space="preserve">
    <value>T_Change name of</value>
  </data>
  <data name="clsUndo_Publish" xml:space="preserve">
    <value>T_Publish</value>
  </data>
  <data name="clsUndo_ChangePropertiesOf" xml:space="preserve">
    <value>T_Change properties of</value>
  </data>
  <data name="clsUndo_ChangeSizeOf" xml:space="preserve">
    <value>T_Change size of</value>
  </data>
  <data name="clsUndo_ChangePositionOf" xml:space="preserve">
    <value>T_Change position of</value>
  </data>
  <data name="clsUndo_Delete" xml:space="preserve">
    <value>T_Delete</value>
  </data>
  <data name="clsUndo_Create" xml:space="preserve">
    <value>T_Create</value>
  </data>
  <data name="clsUndo_Default" xml:space="preserve">
    <value>T_[Default]</value>
  </data>
  <data name="clsUndo_Page" xml:space="preserve">
    <value>T_Page</value>
  </data>
  <data name="clsUndo_Selected0Items" xml:space="preserve">
    <value>T_selected {0} items</value>
  </data>
  <data name="clsUndo_Selection" xml:space="preserve">
    <value>T_selection</value>
  </data>
  <data name="clsUndo_ActionSummary" xml:space="preserve">
    <value>T_{Action} {Summary}</value>
  </data>
  <data name="clsUndo_ActionDescription" xml:space="preserve">
    <value>T_{Action} {Description}</value>
  </data>
  <data name="clsVBO_BusinessObjectsWithinTheEnvironmentIEObjectsWhichMayBeDrawnOntoAProcessToCaptur" xml:space="preserve">
    <value>T_Business Objects within the environment (i.e. objects which may be drawn onto a process to capture and replicate a part of a business process) adhere to strict guidelines in their implementation. T_The definition and behaviour of the object both as seen in Process Studio during design time and as implemented during test or via Control Room at runtime uses the same interface definition, known as an object's capabilities. T_All business objects used within Blue Prism, generic and bespoke, have a common property - Get Capabilities. T_The GetCapabilities function returns an XML formatted string which defines the interfaces for that object, their friendly names (as they appear in Process Studio) and any inputs and outputs that are required. T_The Business Object Definition object captures the name, parameters, preconditions and endpoints of each function relating to a business object and translates to the object definition seen within Process Studio.</value>
  </data>
  <data name="clsVBO_AboutBusinessObjects" xml:space="preserve">
    <value>T_About Business Objects</value>
  </data>
  <data name="clsVBO_TheBusinessObjectDefinitionDescribesTheAPIsAvailableWithinASingleBusinessObject" xml:space="preserve">
    <value>T_The Business Object Definition describes the APIs available within a single business object, their parameters and their behaviours from both a business and technical perspective. T_The definition of each object function describes the business function of the interface, the parameters and usage of the business function and any technical notes required in the on-going support of the interface, including reference to the capabilities of the object. T_The Business Object Definition API is a dual-purpose document designed to serve the needs of both business users and technical system support staff who require information relating to the business functions available and their details. T_As such, the BOD is a working document and is subject to change during the course of development and implementation.</value>
  </data>
  <data name="clsVBO_AboutThisDocument" xml:space="preserve">
    <value>T_About this document...</value>
  </data>
  <data name="clsVBO_CBluePrismLimited" xml:space="preserve">
    <value>T_(c) Blue Prism Limited</value>
  </data>
  <data name="clsVBO_TheInformationContainedInThisDocumentIsTheProprietaryInformationOfBluePrismLimi" xml:space="preserve">
    <value>T_The information contained in this document is the proprietary information of Blue Prism Limited and should not be disclosed to a third party without the written consent of an authorised Blue Prism representative.</value>
  </data>
  <data name="clsVBO_BusinessObjectDefinition" xml:space="preserve">
    <value>T_Business Object Definition</value>
  </data>
  <data name="clsVBO_NotConfigurable" xml:space="preserve">
    <value>T_Not configurable</value>
  </data>
  <data name="clsVBO_VisualBusinessObjectFailed" xml:space="preserve">
    <value>T_Visual Business Object failed</value>
  </data>
  <data name="clsVBO_VisualBusinessObjectAborted" xml:space="preserve">
    <value>T_Visual Business Object aborted</value>
  </data>
  <data name="clsVBO_VisualBusinessObjectDidNotStart" xml:space="preserve">
    <value>T_Visual Business Object did not start</value>
  </data>
  <data name="clsVBO_DebugHookFailed0" xml:space="preserve">
    <value>T_Debug hook failed - {0}</value>
  </data>
  <data name="clsVBO_Action0NotFound" xml:space="preserve">
    <value>T_Action '{0}' not found</value>
  </data>
  <data name="clsVBO_TheRequestedAction0CanNotBeRunBecauseItHasNotBeenPublished" xml:space="preserve">
    <value>T_The requested action '{0}' can not be run because it has not been published</value>
  </data>
  <data name="clsVBO_CanNotRunPage0BecauseTheVisualBusinessObjectIsNotValid1" xml:space="preserve">
    <value>T_Can not run page '{0}' because the Visual Business Object is not valid - {1}</value>
  </data>
  <data name="clsVBO_CanNotFindStartStageForCleanupPage" xml:space="preserve">
    <value>T_Can not find start stage for cleanup page</value>
  </data>
  <data name="clsVBO_VisualBusinessObjectIsAlreadyDisposed" xml:space="preserve">
    <value>T_Visual Business Object is already disposed</value>
  </data>
  <data name="clsVBO_CleanupFailedVisualBusinessObjectNotValid0" xml:space="preserve">
    <value>T_Cleanup failed: T_Visual Business Object not valid - {0}</value>
  </data>
  <data name="clsVBO_InitialisationFailedVisualBusinessObjectNotValid0" xml:space="preserve">
    <value>T_Initialisation failed: T_Visual business object not valid - {0}</value>
  </data>
  <data name="clsVBO_CanNotRunRequestedActionBecauseTheObjectIsNotValid0" xml:space="preserve">
    <value>T_Can not run requested action because the object is not valid - {0}</value>
  </data>
  <data name="clsVBO_ActionDidNotCompleteRunning" xml:space="preserve">
    <value>T_Action did not complete running</value>
  </data>
  <data name="clsVBO_FailedToSetTargetApplicationInfo0" xml:space="preserve">
    <value>T_Failed to set target application info - {0}</value>
  </data>
  <data name="clsVBO_ParentObject0MustBeDefinedAsShared" xml:space="preserve">
    <value>T_Parent object '{0}' must be defined as shared.</value>
  </data>
  <data name="clsVBO_CannotFindParentObject" xml:space="preserve">
    <value>T_Cannot find parent object </value>
  </data>
  <data name="clsVBO_NoProcessLoaderAvailable" xml:space="preserve">
    <value>T_No process loader available</value>
  </data>
  <data name="clsWaitChoice_AttemptToSetANonConditionActionOnAWaitChoice" xml:space="preserve">
    <value>T_Attempt to set a non-condition action on a Wait Choice</value>
  </data>
  <data name="clsWaitChoice_AMIDidNotRecogniseTheConditionType0" xml:space="preserve">
    <value>T_AMI did not recognise the condition type '{0}'</value>
  </data>
  <data name="clsWebService_TheWebServiceDefinitionDescribesTheAPIsAvailableWithinASingleWebServiceTheirPar" xml:space="preserve">
    <value>T_The Web Service Definition describes the APIs available within a single web service, their parameters and their behaviours. T_The Web Service Definition API is a dual-purpose document designed to serve the needs of both business users and technical system support staff who require information relating to the business functions available and their details. T_As such, the BOD is a working document and is subject to change during the course of development and implementation.</value>
  </data>
  <data name="clsWebService_Div" xml:space="preserve">
    <value>T_div</value>
  </data>
  <data name="clsWebService_AboutThisDocument" xml:space="preserve">
    <value>T_About this document</value>
  </data>
  <data name="clsWebService_TheInformationContainedInThisDocumentIsTheProprietaryInformationOfThirdPartyHos" xml:space="preserve">
    <value>T_The information contained in this document is the proprietary information of Third party hosting the web service</value>
  </data>
  <data name="clsWebService_WebServiceDefinition" xml:space="preserve">
    <value>T_Web Service Definition</value>
  </data>
  <data name="clsWebService_NoConfigurationAvailableForAWebService" xml:space="preserve">
    <value>T_No configuration available for a web service</value>
  </data>
  <data name="clsWebService_AWebServiceCannotBeConfigured" xml:space="preserve">
    <value>T_A web service cannot be configured</value>
  </data>
  <data name="clsWSDLProcess_CannotConvertA0IntoAXsd1" xml:space="preserve">
    <value>T_Cannot convert a {0} into a xsd:{1)</value>
  </data>
  <data name="clsWSDLProcess_CannotConvertANumberIntoAXsd0" xml:space="preserve">
    <value>T_Cannot convert a number into a xsd:{0}</value>
  </data>
  <data name="clsWSDLProcess_DonTKnowHowToTranslate0ToXSD" xml:space="preserve">
    <value>T_Don't know how to translate {0} to XSD</value>
  </data>
  <data name="clsWSDLProcess_UnrecognisedFieldTypeFor0" xml:space="preserve">
    <value>T_Unrecognised field type for {0}</value>
  </data>
  <data name="clsWSDLProcess_DonTKnowHowToGetTheTypeForTheFieldOf0" xml:space="preserve">
    <value>T_Don't know how to get the type for the field of {0}</value>
  </data>
  <data name="clsWSDLProcess_FoundPart0" xml:space="preserve">
    <value>T_Found part '{0}'</value>
  </data>
  <data name="clsWSDLProcess_DocumentEncodedIsNotSupported" xml:space="preserve">
    <value>T_Document/encoded is not supported</value>
  </data>
  <data name="clsWSDLProcess_FoundMessage0" xml:space="preserve">
    <value>T_Found message '{0}'</value>
  </data>
  <data name="clsWSDLProcess_FoundOperation0" xml:space="preserve">
    <value>T_Found operation '{0}'</value>
  </data>
  <data name="clsWSDLProcess_OnlySoapBindingsAreSupportedAtThisTimeThisWebServiceDoesNotHaveAnySoapBindings" xml:space="preserve">
    <value>T_Only Soap bindings are supported at this time, this web service does not have any soap bindings</value>
  </data>
  <data name="clsWSDLProcess_FoundServicePort0" xml:space="preserve">
    <value>T_Found service port '{0}'</value>
  </data>
  <data name="clsWSDLProcess_FoundService0" xml:space="preserve">
    <value>T_Found service '{0}'</value>
  </data>
  <data name="clsWSDLProcess_CouldNotLoadWebServiceDescriptionLanguage" xml:space="preserve">
    <value>T_Could not load web service description language.</value>
  </data>
  <data name="clsWSDLProcess_Service0NotDefined" xml:space="preserve">
    <value>T_Service '{0}' not defined</value>
  </data>
  <data name="clsWSDLProcess_SUCCESSRetrievedAllWebServiceDetails" xml:space="preserve">
    <value>T_SUCCESS: T_Retrieved all web service details</value>
  </data>
  <data name="clsWSDLProcess_RetrievedSchemaFrom0" xml:space="preserve">
    <value>T_Retrieved schema from {0}</value>
  </data>
  <data name="clsWSDLProcess_RetrievedWsdlFrom0" xml:space="preserve">
    <value>T_Retrieved wsdl from {0}</value>
  </data>
  <data name="CodeLanguage_UnrecognisedLanguageName" xml:space="preserve">
    <value>T_Unrecognised language name</value>
  </data>
  <data name="ObjectCache_TheValueInTheCacheIsNotOfTheExpectedType0" xml:space="preserve">
    <value>T_The value in the cache is not of the expected type {0}</value>
  </data>
  <data name="ProcessValueConvertor_UnexpectedExceptionConvertingValue0ToANetValue1" xml:space="preserve">
    <value>T_Unexpected exception converting value '{0}' to a .net value: T_{1}</value>
  </data>
  <data name="ProcessValueConvertor_CannotConvertValueOfDatatype0ToADatatypeCompatibleWithNETCode" xml:space="preserve">
    <value>T_Cannot convert value of datatype '{0}' to a datatype compatible with .NET code</value>
  </data>
  <data name="ProcessValueConvertor_CannotConvertCollectionFieldOfType0" xml:space="preserve">
    <value>T_Cannot convert collection field of type '{0}'</value>
  </data>
  <data name="EmptyCollectionException_TheCollectionIsEmpty" xml:space="preserve">
    <value>T_The collection is empty</value>
  </data>
  <data name="WebRequestException_HTTPResponseContent0" xml:space="preserve">
    <value>T_HTTP Response Content: T_{0}</value>
  </data>
  <data name="WebRequestException_NotAvailable" xml:space="preserve">
    <value>T_Not available</value>
  </data>
  <data name="WebRequestException_HTTPStatusCode0" xml:space="preserve">
    <value>T_HTTP Status Code: T_{0}</value>
  </data>
  <data name="WebRequestException_WebExceptionStatus0" xml:space="preserve">
    <value>T_Web Exception Status: T_{0}</value>
  </data>
  <data name="WebRequestException_ErrorDuringWebAPIHTTPRequest" xml:space="preserve">
    <value>T_Error during Web API HTTP Request</value>
  </data>
  <data name="clsLoggingEngine_ExceptionWhileDisposingOfLoggingEngine0" xml:space="preserve">
    <value>T_Exception while disposing of logging engine: T_{0}</value>
  </data>
  <data name="ProcessXmlDocument_ThisIsNotAValidProcessDefinitionRootElementIs0ItShouldBeProcess" xml:space="preserve">
    <value>T_This is not a valid process definition (root element is <{0}> - it should be <process>)</value>
  </data>
  <data name="ProcessXmlDocument_NotAValidProcess" xml:space="preserve">
    <value>T_Not a valid process</value>
  </data>
  <data name="ProcessXmlDocument_TheXMLDefinitionForTheProcessWasNotAvailable" xml:space="preserve">
    <value>T_The XML definition for the process was not available.</value>
  </data>
  <data name="clsActionStage_CannotRecursivelyCallActionsInASharedObject0" xml:space="preserve">
    <value>T_Cannot recursively call actions in a Shared object '{0}'.</value>
  </data>
  <data name="clsActionStage_TheBusinessObject0DoesNotSupportTheAction1" xml:space="preserve">
    <value>T_The Business Object {0} does not support the action '{1}'</value>
  </data>
  <data name="clsActionStage_TheObject0IsNotValidTheLastErrorMessageRecordedWas1" xml:space="preserve">
    <value>T_The object '{0}' is not valid. T_The last error message recorded was: T_{1}</value>
  </data>
  <data name="clsActionStage_TheBusinessObject0IsNotAvailablePleaseVisitSystemManagerToCheckThatThisObjectIs" xml:space="preserve">
    <value>T_The Business Object {0} is not available. T_Please visit System Manager to check that this Object is installed and that it has not been disabled.</value>
  </data>
  <data name="clsActionStage_NoResourceSpecifiedForAction" xml:space="preserve">
    <value>T_No resource specified for action</value>
  </data>
  <data name="clsAppStage_Font" xml:space="preserve">
    <value>T_font</value>
  </data>
  <data name="clsAppStage_CanTExecute0AsApplicationManagerIsNotAvailable" xml:space="preserve">
    <value>T_Can't execute {0} as Application Manager is not available</value>
  </data>
  <data name="clsAppStage_FailedToPerformStep0In12" xml:space="preserve">
    <value>T_Failed to perform step {0} in {1} - {2}</value>
  </data>
  <data name="clsAppStage_Step0In1HasNoActionAssigned" xml:space="preserve">
    <value>T_Step {0} in {1} has no action assigned</value>
  </data>
  <data name="clsAppStage_PauseAfterStepMustEvaluateToATimespanOrANumberOfSeconds0EvaluatedToATypeOf1" xml:space="preserve">
    <value>T_Pause After Step must evaluate to a timespan or a number (of seconds) ('{0}' evaluated to a type of '{1}')</value>
  </data>
  <data name="clsAppStage_MissingParameterForDynamicIdentifier0In1" xml:space="preserve">
    <value>T_Missing parameter for dynamic identifier '{0}' in {1}</value>
  </data>
  <data name="clsAppStage_CannotFindTargetElementInStep0Of1" xml:space="preserve">
    <value>T_Cannot find target element in step {0} of {1}</value>
  </data>
  <data name="clsAppStage_ForParameterInRow0" xml:space="preserve">
    <value> T_for parameter in row {0}</value>
  </data>
  <data name="clsCalculationStage_FailedToEvaluateExpression01" xml:space="preserve">
    <value>T_Failed to evaluate expression '{0}' - {1}</value>
  </data>
  <data name="clsCalculationStage_CouldNotStoreCalculationResult0" xml:space="preserve">
    <value>T_Could not store calculation result {0}</value>
  </data>
  <data name="clsCalculationStage_On0" xml:space="preserve">
    <value> T_on {0}</value>
  </data>
  <data name="clsChoiceStartStage_Node0OfStage1OnPage2" xml:space="preserve">
    <value>T_node {0} of stage '{1}' on page '{2}'</value>
  </data>
  <data name="clsChoiceStartStage_MissingLinkFromChoiceEnd" xml:space="preserve">
    <value>T_Missing link from choice end</value>
  </data>
  <data name="clsChoiceStartStage_MissingLinkFromChoice" xml:space="preserve">
    <value>T_Missing link from choice</value>
  </data>
  <data name="clsChoiceStartStage_DecisionDidNotResultInAYesNoAnswer" xml:space="preserve">
    <value>T_Decision did not result in a yes/no answer</value>
  </data>
  <data name="clsChoiceStartStage_For0" xml:space="preserve">
    <value> T_for {0}</value>
  </data>
  <data name="clsCodeStage_ThisCodeStageCouldNotBeRunBecauseItWasAddedOrModifiedSinceTheObjectWasStarted" xml:space="preserve">
    <value>T_This code stage could not be run because it was added or modified since the object was started</value>
  </data>
  <data name="clsCollectionStage_CollectionHasNoData" xml:space="preserve">
    <value>T_Collection has no data</value>
  </data>
  <data name="clsCollectionStage_BadDatatype0" xml:space="preserve">
    <value>T_Bad datatype: T_{0}</value>
  </data>
  <data name="clsCollectionStage_TheCollectionIsNotCurrentlyInAnIterationAndThereforeTheIterationIndexIsNotDefin" xml:space="preserve">
    <value>T_The collection is not currently in an iteration and therefore the iteration index is not defined.</value>
  </data>
  <data name="CollectionDelegateParams_CurrentlyAtTheBeginningOfThePathCannotDecrementAnyFurther" xml:space="preserve">
    <value>T_Currently at the beginning of the path. T_Cannot decrement any further</value>
  </data>
  <data name="CollectionDelegateParams_ThereIsNoCurrentStageInThePath" xml:space="preserve">
    <value>T_There is no current stage in the path</value>
  </data>
  <data name="CollectionDelegateParams_PathHas0ElementsIndexIsCurrently1" xml:space="preserve">
    <value>T_Path has {0} elements; Index is currently {1}</value>
  </data>
  <data name="clsCollectionStage_RanOutOfAvailableFieldNames" xml:space="preserve">
    <value>T_Ran out of available field names</value>
  </data>
  <data name="clsCollectionStage_CanTExecuteStage" xml:space="preserve">
    <value>T_Can't execute stage </value>
  </data>
  <data name="clsDataStage_AttemptToSetValueOf01WithMismatchedDataTypeOf2" xml:space="preserve">
    <value>T_Attempt to set value of {0} ({1}) with mismatched data type of {2}</value>
  </data>
  <data name="clsDataStage_AttemptToSetValueOnAnEnvironmentVariable" xml:space="preserve">
    <value>T_Attempt to set value on an environment variable</value>
  </data>
  <data name="clsDataStage_SessionVariableDefinitionDoesNotMatchValue" xml:space="preserve">
    <value>T_Session variable definition does not match value</value>
  </data>
  <data name="clsDataStage_DataItemNamesMustNotContainQuotationMarks" xml:space="preserve">
    <value>T_Data item names must not contain quotation marks</value>
  </data>
  <data name="clsDataStage_DataItemNamesMustNotContainTheFullStopCharacter" xml:space="preserve">
    <value>T_Data item names must not contain the full stop character</value>
  </data>
  <data name="clsDataStage_DataItemNamesMustNotContainSquareBrackets" xml:space="preserve">
    <value>T_Data item names must not contain square brackets</value>
  </data>
  <data name="clsDataStage_DataItemNamesMustNotBeBlank" xml:space="preserve">
    <value>T_Data item names must not be blank</value>
  </data>
  <data name="clsDataStage_UnexpectedNullReferenceWhenAccessingStageSValueStage0Initialvalue1" xml:space="preserve">
    <value>T_Unexpected null reference when accessing stage's value (stage='{0}', initialvalue={1})</value>
  </data>
  <data name="clsDataStage_AttemptToSetInitialValueOnAnEnvironmentVariable" xml:space="preserve">
    <value>T_Attempt to set initial value on an environment variable</value>
  </data>
  <data name="clsDataStage_AttemptToSetInitialValueOf01WithMismatchedDataTypeOf2" xml:space="preserve">
    <value>T_Attempt to set initial value of {0} ({1}) with mismatched data type of {2}</value>
  </data>
  <data name="clsDataStage_EnvironmentVariableNotDefined" xml:space="preserve">
    <value>T_Environment variable not defined</value>
  </data>
  <data name="clsDataStage_CanTExecuteStage0" xml:space="preserve">
    <value>T_Can't execute stage {0}</value>
  </data>
  <data name="clsDataStage_ErrorGettingValue0" xml:space="preserve">
    <value>T_<<Error getting value: T_{0}>></value>
  </data>
  <data name="clsDataStage_0Characters" xml:space="preserve">
    <value>T_({0} characters)</value>
  </data>
  <data name="clsDecisionStage_CanTSwitchThatTypeOfLink" xml:space="preserve">
    <value>T_Can't switch that type of link</value>
  </data>
  <data name="clsDecisionStage_StageCannotLinkToItself" xml:space="preserve">
    <value>T_Stage cannot link to itself</value>
  </data>
  <data name="clsDecisionStage_DecisionDidNotResultInAYesNoAnswer" xml:space="preserve">
    <value>T_Decision did not result in a yes/no answer</value>
  </data>
  <data name="clsEndStage_EndOfSubsheetWithoutCorrespondingStart" xml:space="preserve">
    <value>T_End of subsheet without corresponding start</value>
  </data>
  <data name="clsExceptionStage_ThereWasAnErrorInTheExpressionOfTheExceptionStage0" xml:space="preserve">
    <value>T_There was an error in the expression of the Exception stage - {0}</value>
  </data>
  <data name="clsLoopEndStage_MissingLinkFromLoopEnd" xml:space="preserve">
    <value>T_Missing link from loop end</value>
  </data>
  <data name="clsLoopEndStage_0Of1" xml:space="preserve">
    <value>T_{0} of {1}</value>
  </data>
  <data name="clsLoopEndStage_UnsupportedLoopType" xml:space="preserve">
    <value>T_Unsupported loop type</value>
  </data>
  <data name="clsLoopEndStage_LoopEndWithoutMatchingLoopStart" xml:space="preserve">
    <value>T_Loop end without matching loop start</value>
  </data>
  <data name="clsLoopStartStage_CanTFindEndStageForLoop" xml:space="preserve">
    <value>T_Can't find end stage for loop</value>
  </data>
  <data name="clsLoopStartStage_UnsupportedLoopType" xml:space="preserve">
    <value>T_Unsupported loop type</value>
  </data>
  <data name="clsLoopStartStage_LoopTypeNotConfiguredOnStage0PleaseVisitTheStageAndSetTheLoopType" xml:space="preserve">
    <value>T_Loop type not configured on stage {0}. T_Please visit the stage and set the loop type.</value>
  </data>
  <data name="clsLoopStartStage_LoopCollectionIsNotAccessibleBecauseItLiesOnADifferentPageAndIsMarkedAsHidden" xml:space="preserve">
    <value>T_Loop collection is not accessible because it lies on a different page and is marked as hidden</value>
  </data>
  <data name="clsLoopStartStage_InvalidCollectionSuppliedForForEachLoop" xml:space="preserve">
    <value>T_Invalid Collection supplied for For Each loop</value>
  </data>
  <data name="clsLoopStartStage_AForEachLoopMustSpecifyACollection" xml:space="preserve">
    <value>T_A For Each loop must specify a Collection</value>
  </data>
  <data name="clsLoopStartStage_1Of0" xml:space="preserve">
    <value>T_1 of {0}</value>
  </data>
  <data name="clsLoopStartStage_NestedValue0IsNotACollection" xml:space="preserve">
    <value>T_Nested value '{0}' is not a collection</value>
  </data>
  <data name="clsMultipleCalculationStage_CouldNotStoreCalculationResult0" xml:space="preserve">
    <value>T_Could not store calculation result - {0}</value>
  </data>
  <data name="clsMultipleCalculationStage_FailedToEvaluateExpression01" xml:space="preserve">
    <value>T_Failed to evaluate expression '{0} - {1}</value>
  </data>
  <data name="clsMultipleCalculationStage_Step0OfStage1OnPage2" xml:space="preserve">
    <value>T_step {0} of stage '{1}' on page '{2}'</value>
  </data>
  <data name="clsNavigateStage_Step0Action12" xml:space="preserve">
    <value>T_*Step {0} - Action: T_{1} ({2})</value>
  </data>
  <data name="clsNavigateStage_Step0NoActionSet" xml:space="preserve">
    <value>T_*Step {0} - No action set</value>
  </data>
  <data name="clsNavigateStage_ForPauseAfterStep" xml:space="preserve">
    <value>T_for 'Pause After Step'</value>
  </data>
  <data name="clsNavigateStage_CouldNotEvaluatePauseAfterStep0" xml:space="preserve">
    <value>T_Could not evaluate 'Pause After Step' - {0}</value>
  </data>
  <data name="clsNavigateStage_StageID" xml:space="preserve">
    <value>T_*Stage ID: </value>
  </data>
  <data name="clsNoteStage_NewNote" xml:space="preserve">
    <value>T_new note</value>
  </data>
  <data name="clsProcessStage_UnexpectedCollectionInfoPassedForNonCollectionParameter" xml:space="preserve">
    <value>T_Unexpected collection info passed, for non-collection parameter</value>
  </data>
  <data name="clsProcessStage_InvalidExpression0" xml:space="preserve">
    <value>T_Invalid expression: T_{0}</value>
  </data>
  <data name="clsProcessStage_0Stage1OnPage2" xml:space="preserve">
    <value>T_{0} Stage '{1}' on page '{2}'</value>
  </data>
  <data name="clsProcessStage_0Stage1NotOnAPage" xml:space="preserve">
    <value>T_{0} Stage '{1}' - not on a page</value>
  </data>
  <data name="Result_Colon" xml:space="preserve">
    <value> : </value>
  </data>
  <data name="clsReadStage_StageID" xml:space="preserve">
    <value>T_*Stage ID: </value>
  </data>
  <data name="clsReadStage_Step0Action12" xml:space="preserve">
    <value>T_*Step {0} - Action: T_{1} ({2})</value>
  </data>
  <data name="clsResumeStage_EncounteredResumeStageWhenNotInRecoveryMode" xml:space="preserve">
    <value>T_Encountered resume stage when not in recovery mode</value>
  </data>
  <data name="clsSkillStage_NoResourceSpecifiedForAction" xml:space="preserve">
    <value>T_No resource specified for action.</value>
  </data>
  <data name="clsSkillStage_TheWebAPI0IsNotValidTheLastErrorMessageRecordedWas1" xml:space="preserve">
    <value>T_The web API '{0}' is not valid. T_The last error message recorded was: T_{1}</value>
  </data>
  <data name="clsSkillStage_PleaseEnsureThatItIsInstalledAndHasNotBeenDisabled" xml:space="preserve">
    <value>T_Please ensure that it is installed and has not been disabled.</value>
  </data>
  <data name="clsSkillStage_TheWebAPI0IsNotAvailable" xml:space="preserve">
    <value>T_The web API '{0}' is not available.</value>
  </data>
  <data name="clsSkillStage_NoWebAPISpecifiedForSkill" xml:space="preserve">
    <value>T_No web API specified for skill</value>
  </data>
  <data name="clsSkillStage_PleaseEnsureItIsInstalledAndHasNotBeenDisabled" xml:space="preserve">
    <value>T_Please ensure it is installed and has not been disabled.</value>
  </data>
  <data name="clsSkillStage_TheSpecifiedSkillInStage0IsNotAvailable" xml:space="preserve">
    <value>T_The specified Skill in stage '{0}' is not available.</value>
  </data>
  <data name="clsSkillStage_TheWebAPI0DoesNotSupportTheAction1" xml:space="preserve">
    <value>T_The web API '{0}' does not support the action '{1}'</value>
  </data>
  <data name="clsSubProcessRefStage_ErrorLoadingExternalProcess0" xml:space="preserve">
    <value>T_Error loading external process - {0}</value>
  </data>
  <data name="clsSubProcessRefStage_UnexpectedRunModeDuringSubprocessExecution" xml:space="preserve">
    <value>T_Unexpected run mode during subprocess execution</value>
  </data>
  <data name="clsSubProcessRefStage_ExternalProcess0" xml:space="preserve">
    <value>T_External process {0}</value>
  </data>
  <data name="clsSubProcessRefStage_ExternalProcessDidNotStart" xml:space="preserve">
    <value>T_External process did not start</value>
  </data>
  <data name="clsSubProcessRefStage_DebugHookFailed0" xml:space="preserve">
    <value>T_Debug hook failed - {0}</value>
  </data>
  <data name="clsSubProcessRefStage_CanTRunAnExternalProcessNoProcessLoaderAvailable" xml:space="preserve">
    <value>T_Can't run an external process - no process loader available</value>
  </data>
  <data name="clsSubProcessRefStage_TheProcessStage0DoesNotReferenceAValidSubprocess" xml:space="preserve">
    <value>T_The Process stage '{0}' does not reference a valid subprocess.</value>
  </data>
  <data name="clsSubProcessRefStage_TheProcessStage0ReferencesASubprocessWhichHasBeenRetired" xml:space="preserve">
    <value>T_The Process stage '{0}' references a subprocess which has been retired.</value>
  </data>
  <data name="clsSubsheetInfoStage_CanTExecuteStage0" xml:space="preserve">
    <value>T_Can't execute stage {0}</value>
  </data>
  <data name="clsSubsheetInfoStage_Narrative0" xml:space="preserve">
    <value>T_: {0}</value>
  </data>
  <data name="ThePageReferencedIsEitherMissingOrInvalid" xml:space="preserve">
    <value>T_The page referenced is either missing or invalid.</value>
  </data>
  <data name="clsWaitStartStage_ForTheTimeout" xml:space="preserve">
    <value> T_for the timeout</value>
  </data>
  <data name="clsWaitStartStage_InRow0" xml:space="preserve">
    <value> T_in row {0}</value>
  </data>
  <data name="clsWaitStartStage_ForParameterInRow0" xml:space="preserve">
    <value> T_for parameter in row {0}</value>
  </data>
  <data name="clsWaitStartStage_MissingLinkFromWaitChoice01" xml:space="preserve">
    <value>T_Missing link from wait - choice {0}: T_{1}</value>
  </data>
  <data name="clsWaitStartStage_ApplicationManagerReturnedAChoiceIndexBeyondTheNumberOfChoicesInTheStage01" xml:space="preserve">
    <value>T_Application manager returned a choice index beyond the number of choices in the stage ({0} > {1})</value>
  </data>
  <data name="clsWaitStartStage_MissingLinkFromTimeoutIn0" xml:space="preserve">
    <value>T_Missing link from timeout in {0}</value>
  </data>
  <data name="clsWaitStartStage_AMIErrorOccurredIn01" xml:space="preserve">
    <value>T_AMI error occurred in {0} - {1}</value>
  </data>
  <data name="clsWaitStartStage_DataTypeOfCondition0DoesNotMatchDatatypeOfExpectedReply" xml:space="preserve">
    <value>T_Data type of condition {0} does not match datatype of expected reply</value>
  </data>
  <data name="clsWaitStartStage_TheExpectedReply0In1IsNotAValidExpression" xml:space="preserve">
    <value>T_The expected reply '{0}' in {1} is not a valid expression</value>
  </data>
  <data name="clsWaitStartStage_Step0Of1HasNoConditionAssigned" xml:space="preserve">
    <value>T_Step {0} of {1} has no condition assigned</value>
  </data>
  <data name="clsWaitStartStage_CanTExecuteStage0AsApplicationManagerIsNotAvailable" xml:space="preserve">
    <value>T_Can't execute stage '{0}' as Application Manager is not available</value>
  </data>
  <data name="clsWaitStartStage_MissingLinkFromTimeout" xml:space="preserve">
    <value>T_Missing link from timeout</value>
  </data>
  <data name="clsWaitStartStage_WaitStageAbandonedDueToAnInterruptRequest" xml:space="preserve">
    <value>T_Wait stage abandoned due to an interrupt request</value>
  </data>
  <data name="clsWaitStartStage_TheTimeoutValueCannotBeNegativeFound0" xml:space="preserve">
    <value>T_The timeout value cannot be negative - found: T_{0}</value>
  </data>
  <data name="clsWaitStartStage_TimeoutExpressionMustProduceATimespanOrANumberOfSeconds" xml:space="preserve">
    <value>T_Timeout expression must produce a timespan or a number (of seconds)</value>
  </data>
  <data name="clsWaitStartStage_InvalidTimeoutExpression0" xml:space="preserve">
    <value>T_Invalid Timeout expression - {0}</value>
  </data>
  <data name="FailedToCastResultOfExpressionInRow0Of1ToTheRequiredDataType2" xml:space="preserve">
    <value>T_Failed to cast result of expression in row {0} of {1} to the required data type: T_{2}</value>
  </data>
  <data name="FailedToEvaluateExpressionInRow0Of12" xml:space="preserve">
    <value>T_Failed to evaluate expression in row {0} of {1} - {2}</value>
  </data>
  <data name="FailedToEvaluateArgument01" xml:space="preserve">
    <value>T_Failed to evaluate argument {0} - {1}</value>
  </data>
  <data name="clsActionStep_InvalidValuePassedToArgument0CouldNotCastResultOfExpressionToRequiredDataType1" xml:space="preserve">
    <value>T_Invalid value passed to argument '{0}' - could not cast result of expression to required data type: T_{1}</value>
  </data>
  <data name="ActionParameter_NameCannotContainAFullStopCharacter" xml:space="preserve">
    <value>T_Name cannot contain a full-stop character.</value>
  </data>
  <data name="BasicAuthentication_TheNameOfTheBasicAuthenticationCredential" xml:space="preserve">
    <value>T_The name of the Basic Authentication credential</value>
  </data>
  <data name="BearerTokenAuthentication_TheNameOfTheBearerTokenAuthenticationCredential" xml:space="preserve">
    <value>T_The name of the Bearer Token Authentication credential</value>
  </data>
  <data name="CustomAuthentication_TheNameOfTheCustomCredential" xml:space="preserve">
    <value>T_The name of the Custom credential</value>
  </data>
  <data name="OAuth2ClientCredentialsAuthentication_TheNameOfTheOAuth20ClientCredentialsAuthenticationCredential" xml:space="preserve">
    <value>T_The name of the OAuth 2.0 (Client Credentials) Authentication credential</value>
  </data>
  <data name="OAuth2JwtBearerTokenAuthentication_TheNameOfTheOAuth20JWTBearerTokenAuthenticationCredential" xml:space="preserve">
    <value>T_The name of the OAuth 2.0 (JWT Bearer Token) Authentication credential</value>
  </data>
  <data name="CustomCodeOutputParameter_InvalidDataType0" xml:space="preserve">
    <value>T_Invalid data type: T_{0}</value>
  </data>
  <data name="JsonPathOutputParameter_NotImplementedForTheDataType0" xml:space="preserve">
    <value>T_Not implemented for the data type {0}.</value>
  </data>
  <data name="JsonPathOutputParameter_InvalidDataType0" xml:space="preserve">
    <value>T_Invalid data type: T_{0}</value>
  </data>
  <data name="OutputParameterConfiguration_TheOutputParametersContainDuplicateNames" xml:space="preserve">
    <value>T_The output parameters contain duplicate names</value>
  </data>
  <data name="OutputParameterDeserializer_DeserializeNotImplementedFor0" xml:space="preserve">
    <value>T_Deserialize not implemented for {0}</value>
  </data>
  <data name="ActionContext_UnknownAction0" xml:space="preserve">
    <value>T_Unknown action: T_{0}</value>
  </data>
  <data name="ActionContext_InvalidName" xml:space="preserve">
    <value>T_Invalid name</value>
  </data>
  <data name="BodyContentDeserializer_DeserializeNotImplementedFor0" xml:space="preserve">
    <value>T_Deserialize not implemented for {0}</value>
  </data>
  <data name="BodyContentGenerator_UnexpectedContentTypeExpected0ButWas1" xml:space="preserve">
    <value>T_Unexpected content type. T_Expected {0} but was {1}.</value>
  </data>
  <data name="FileCollectionContentGenerator_TheCollectionUsedInThe0InputParameterDoesNotContainTheFollowingRequiredFields1" xml:space="preserve">
    <value>T_The collection used in the '{0}' input parameter does 
T_                                        not contain the following required fields: T_{1}</value>
  </data>
  <data name="FileCollectionContentGenerator_Comma" xml:space="preserve">
    <value>,</value>
  </data>
  <data name="CredentialAuthenticationHandler_0DidNotExpect1" xml:space="preserve">
    <value>T_{0} did not expect {1}</value>
  </data>
  <data name="HttpRequester_NoResponseRequestSendingIsDisabled" xml:space="preserve">
    <value>T_No Response - Request Sending is Disabled.</value>
  </data>
  <data name="HttpRequester_HandlerNotFoundForAuthenticationType0" xml:space="preserve">
    <value>T_Handler not found for authentication type {0}</value>
  </data>
  <data name="HttpRequester_HandlerNotFoundForBodyContentType0" xml:space="preserve">
    <value>T_Handler not found for body content type {0}</value>
  </data>
  <data name="HttpRequester_HTTPRequestData" xml:space="preserve">
    <value>T_HTTP Request Data:-</value>
  </data>
  <data name="JsonHelper_DataTypeMismatchInArray" xml:space="preserve">
    <value>T_Data Type mismatch in array</value>
  </data>
  <data name="JsonHelper_NoValidRouteFoundForThePath0" xml:space="preserve">
    <value>T_No valid route found for the path '{0}'</value>
  </data>
  <data name="ParameterInterpolator_UnexpectedElementType0" xml:space="preserve">
    <value>T_Unexpected element type: T_{0}</value>
  </data>
  <data name="WebApi_InvalidName" xml:space="preserve">
    <value>T_Invalid name</value>
  </data>
  <data name="WebApiBusinessObject_Internal" xml:space="preserve">
    <value>T_Internal</value>
  </data>
  <data name="WebApiBusinessObject_NoConfigurationAvailableForAWebAPIServices" xml:space="preserve">
    <value>T_No configuration available for a Web API services.</value>
  </data>
  <data name="WebApiBusinessObject_AWebAPIServiceCannotBeConfigured" xml:space="preserve">
    <value>T_A Web API service cannot be configured</value>
  </data>
  <data name="WebApiBusinessObject_TheWebAPIServiceDefinitionDescribesTheActionsAvailableWithinASingleWebAPITheirP" xml:space="preserve">
    <value>T_The Web API Service Definition describes the actions available within a single Web API, their parameters and their behaviours. T_The Web API Service Definition is a dual-purpose document designed to serve the needs of both business users and technical system support staff who require information relating to the business functions available and their details. T_As such, the BOD is a working document and is subject to change during the course of development and implementation.</value>
  </data>
  <data name="WebApiBusinessObject_AboutThisDocument" xml:space="preserve">
    <value>T_About this document</value>
  </data>
  <data name="WebApiBusinessObject_TheInformationContainedInThisDocumentIsTheProprietaryInformationOfTheThirdParty" xml:space="preserve">
    <value>T_The information contained in this document is the proprietary information of the third party hosting the Web API service</value>
  </data>
  <data name="WebApiBusinessObject_WebAPIServiceDefinition" xml:space="preserve">
    <value>T_Web API Service Definition</value>
  </data>
  <data name="WebApiConfiguration_Comma" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="WebApiConfiguration_AuthenticationParametersContainNonUniqueNames0" xml:space="preserve">
    <value>T_Authentication parameters contain non-unique names: T_{0}</value>
  </data>
  <data name="WebApiConfiguration_ActionsContainParametersWithNonUniqueNames" xml:space="preserve">
    <value>T_Actions contain parameters with non-unique names: </value>
  </data>
  <data name="WebApiConfiguration_ActionsContainNonUniqueNames0" xml:space="preserve">
    <value>T_Actions contain non-unique names: T_{0}</value>
  </data>
  <data name="WebApiConfiguration_CommonParametersContainNonUniqueNames0" xml:space="preserve">
    <value>T_Common parameters contain non-unique names: T_{0}</value>
  </data>
  <data name="clsCollectionInfo_CountFields" xml:space="preserve">
    <value>T_({COUNT, plural, one {# field} other {# fields}})</value>
  </data>
  <data name="clsBusinessObjectAction_EmptyPreConditions" xml:space="preserve">
    <value>T_None</value>
  </data>
  <data name="clsApplicationElement_AMIDidNotRecogniseTheElementType0CarriedByTheElement1" xml:space="preserve">
    <value>T_AMI did not recognise the element type '{0}' carried by the element '{1}'.</value>
  </data>
  <data name="clsSoap_CanOnlyGenerateFlatParametersWhenThereIsOneField" xml:space="preserve">
    <value>T_Can only generate flat parameters when there is one field</value>
  </data>
  <data name="clsSoap_NoCollectionInformationForParameter0" xml:space="preserve">
    <value>T_No collection information for parameter {0}</value>
  </data>
  <data name="clsSoap_ComplexInputsCollectionsAreOnlySupportedForDocumentStyleSOAPBindings" xml:space="preserve">
    <value>T_Complex inputs (collections) are only supported for Document-style SOAP bindings</value>
  </data>
  <data name="clsSoap_ErrorInWebService0" xml:space="preserve">
    <value>T_Error in web service - {0}</value>
  </data>
  <data name="clsSoap_GeneralHTTPError0" xml:space="preserve">
    <value>T_General HTTP error - {0}</value>
  </data>
  <data name="clsSoap_YouAreNotAuthorisedToCallThisWebservice" xml:space="preserve">
    <value>T_You are not authorised to call this webservice</value>
  </data>
  <data name="clsSoap_ExpectedACollectionToExtendForParameter0" xml:space="preserve">
    <value>T_Expected a collection to extend for parameter {0}</value>
  </data>
  <data name="clsSoapException_AnExceptionOccouredInTheWebServiceButTheWebServiceDidNotReturnAnyFurtherDetails" xml:space="preserve">
    <value>T_An exception occoured in the web service, but the web service did not return any further details regarding this exception.</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Action" xml:space="preserve">
    <value>T_Action</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Anchor" xml:space="preserve">
    <value>T_Anchor</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Block" xml:space="preserve">
    <value>T_Block</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Calc" xml:space="preserve">
    <value>T_Calc</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Otherwise" xml:space="preserve">
    <value>T_Otherwise</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Choice" xml:space="preserve">
    <value>T_Choice</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Coll" xml:space="preserve">
    <value>T_Coll</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Data" xml:space="preserve">
    <value>T_Data</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Decision" xml:space="preserve">
    <value>T_Decision</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_End" xml:space="preserve">
    <value>T_End</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Loop_End" xml:space="preserve">
    <value>T_Loop End</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Loop_Start" xml:space="preserve">
    <value>T_Loop Start</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Navigate" xml:space="preserve">
    <value>T_Navigate</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Note" xml:space="preserve">
    <value>T_Note</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Process" xml:space="preserve">
    <value>T_Process</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Reader" xml:space="preserve">
    <value>T_Reader</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Skill" xml:space="preserve">
    <value>T_Skill</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Start" xml:space="preserve">
    <value>T_Start</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Page" xml:space="preserve">
    <value>T_Page</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Time_Out" xml:space="preserve">
    <value>T_Time Out</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Wait" xml:space="preserve">
    <value>T_Wait</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Writer" xml:space="preserve">
    <value>T_Writer</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Alert" xml:space="preserve">
    <value>T_Alert</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Multi" xml:space="preserve">
    <value>T_Multi</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Resume" xml:space="preserve">
    <value>T_Resume</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Recover" xml:space="preserve">
    <value>T_Recover</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Exception" xml:space="preserve">
    <value>T_Exception</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Code" xml:space="preserve">
    <value>T_Code</value>
  </data>
  <data name="clsProcess_GetUniqueStageId_Stage" xml:space="preserve">
    <value>T_Stage</value>
  </data>
  <data name="StageTypes_singular_Undefined" xml:space="preserve">
    <value>T_Undefined</value>
  </data>
  <data name="StageTypes_multiple_Undefined" xml:space="preserve">
    <value>T_Undefined</value>
  </data>
  <data name="StageTypes_singular_ProcessInfo" xml:space="preserve">
    <value>T_Process Info</value>
  </data>
  <data name="StageTypes_multiple_ProcessInfo" xml:space="preserve">
    <value>T_Process Infos</value>
  </data>
  <data name="StageTypes_singular_SubSheetInfo" xml:space="preserve">
    <value>T_Sub Sheet Info</value>
  </data>
  <data name="StageTypes_multiple_SubSheetInfo" xml:space="preserve">
    <value>T_Sub Sheet Infos</value>
  </data>
  <data name="StageTypes_singular_Action" xml:space="preserve">
    <value>T_Action</value>
  </data>
  <data name="StageTypes_multiple_Action" xml:space="preserve">
    <value>T_Actions</value>
  </data>
  <data name="StageTypes_singular_Anchor" xml:space="preserve">
    <value>T_Anchor</value>
  </data>
  <data name="StageTypes_multiple_Anchor" xml:space="preserve">
    <value>T_Anchors</value>
  </data>
  <data name="StageTypes_singular_Block" xml:space="preserve">
    <value>T_Block</value>
  </data>
  <data name="StageTypes_multiple_Block" xml:space="preserve">
    <value>T_Blocks</value>
  </data>
  <data name="StageTypes_singular_Calculation" xml:space="preserve">
    <value>T_Calculation</value>
  </data>
  <data name="StageTypes_multiple_Calculation" xml:space="preserve">
    <value>T_Calculations</value>
  </data>
  <data name="StageTypes_singular_ChoiceEnd" xml:space="preserve">
    <value>T_Choice End</value>
  </data>
  <data name="StageTypes_multiple_ChoiceEnd" xml:space="preserve">
    <value>T_Choice Ends</value>
  </data>
  <data name="StageTypes_singular_ChoiceStart" xml:space="preserve">
    <value>T_Choice Start</value>
  </data>
  <data name="StageTypes_multiple_ChoiceStart" xml:space="preserve">
    <value>T_Choice Starts</value>
  </data>
  <data name="StageTypes_singular_Collection" xml:space="preserve">
    <value>T_Collection</value>
  </data>
  <data name="StageTypes_multiple_Collection" xml:space="preserve">
    <value>T_Collections</value>
  </data>
  <data name="StageTypes_singular_Data" xml:space="preserve">
    <value>T_Data</value>
  </data>
  <data name="StageTypes_multiple_Data" xml:space="preserve">
    <value>T_Datas</value>
  </data>
  <data name="StageTypes_singular_Decision" xml:space="preserve">
    <value>T_Decision</value>
  </data>
  <data name="StageTypes_multiple_Decision" xml:space="preserve">
    <value>T_Decisions</value>
  </data>
  <data name="StageTypes_singular_End" xml:space="preserve">
    <value>T_End</value>
  </data>
  <data name="StageTypes_multiple_End" xml:space="preserve">
    <value>T_Ends</value>
  </data>
  <data name="StageTypes_singular_LoopEnd" xml:space="preserve">
    <value>T_Loop End</value>
  </data>
  <data name="StageTypes_multiple_LoopEnd" xml:space="preserve">
    <value>T_Loop Ends</value>
  </data>
  <data name="StageTypes_singular_LoopStart" xml:space="preserve">
    <value>T_Loop Start</value>
  </data>
  <data name="StageTypes_multiple_LoopStart" xml:space="preserve">
    <value>T_Loop Starts</value>
  </data>
  <data name="StageTypes_singular_Navigate" xml:space="preserve">
    <value>T_Navigate</value>
  </data>
  <data name="StageTypes_multiple_Navigate" xml:space="preserve">
    <value>T_Navigates</value>
  </data>
  <data name="StageTypes_singular_Note" xml:space="preserve">
    <value>T_Note</value>
  </data>
  <data name="StageTypes_multiple_Note" xml:space="preserve">
    <value>T_Notes</value>
  </data>
  <data name="StageTypes_singular_Process" xml:space="preserve">
    <value>T_Process</value>
  </data>
  <data name="StageTypes_multiple_Process" xml:space="preserve">
    <value>T_Processes</value>
  </data>
  <data name="StageTypes_singular_Read" xml:space="preserve">
    <value>T_Read</value>
  </data>
  <data name="StageTypes_multiple_Read" xml:space="preserve">
    <value>T_Reads</value>
  </data>
  <data name="StageTypes_singular_Skill" xml:space="preserve">
    <value>T_Skill</value>
  </data>
  <data name="StageTypes_multiple_Skill" xml:space="preserve">
    <value>T_Skills</value>
  </data>
  <data name="StageTypes_singular_Start" xml:space="preserve">
    <value>T_Start</value>
  </data>
  <data name="StageTypes_multiple_Start" xml:space="preserve">
    <value>T_Starts</value>
  </data>
  <data name="StageTypes_singular_SubSheet" xml:space="preserve">
    <value>T_Sub Sheet</value>
  </data>
  <data name="StageTypes_multiple_SubSheet" xml:space="preserve">
    <value>T_Sub Sheets</value>
  </data>
  <data name="StageTypes_singular_WaitEnd" xml:space="preserve">
    <value>T_Wait End</value>
  </data>
  <data name="StageTypes_multiple_WaitEnd" xml:space="preserve">
    <value>T_Wait Ends</value>
  </data>
  <data name="StageTypes_singular_WaitStart" xml:space="preserve">
    <value>T_Wait Start</value>
  </data>
  <data name="StageTypes_multiple_WaitStart" xml:space="preserve">
    <value>T_Wait Starts</value>
  </data>
  <data name="StageTypes_singular_Write" xml:space="preserve">
    <value>T_Write</value>
  </data>
  <data name="StageTypes_multiple_Write" xml:space="preserve">
    <value>T_Writes</value>
  </data>
  <data name="StageTypes_singular_Alert" xml:space="preserve">
    <value>T_Alert</value>
  </data>
  <data name="StageTypes_multiple_Alert" xml:space="preserve">
    <value>T_Alerts</value>
  </data>
  <data name="StageTypes_singular_MultipleCalculation" xml:space="preserve">
    <value>T_Multiple Calculation</value>
  </data>
  <data name="StageTypes_multiple_MultipleCalculation" xml:space="preserve">
    <value>T_Multiple Calculations</value>
  </data>
  <data name="StageTypes_singular_Resume" xml:space="preserve">
    <value>T_Resume</value>
  </data>
  <data name="StageTypes_multiple_Resume" xml:space="preserve">
    <value>T_Resumes</value>
  </data>
  <data name="StageTypes_singular_Recover" xml:space="preserve">
    <value>T_Recover</value>
  </data>
  <data name="StageTypes_multiple_Recover" xml:space="preserve">
    <value>T_Recovers</value>
  </data>
  <data name="StageTypes_singular_Exception" xml:space="preserve">
    <value>T_Exception</value>
  </data>
  <data name="StageTypes_multiple_Exception" xml:space="preserve">
    <value>T_Exceptions</value>
  </data>
  <data name="StageTypes_singular_Code" xml:space="preserve">
    <value>T_Code</value>
  </data>
  <data name="StageTypes_multiple_Code" xml:space="preserve">
    <value>T_Codes</value>
  </data>
  <data name="clsProcessDataTypes_TimeItemsAreUsedToStoreTimeDataValuesCanRangeFrom0To1TheyAreSimilarToDateTimeIt" xml:space="preserve">
    <value>T_Time items are used to store time data. T_Values can range from {0} to {1}. T_They are similar to DateTime items, but Time items cannot store date data.{2}{2}For example a time item may store the time of day at which a processing batch begins.</value>
  </data>
  <data name="DependencyDefinitionAttribute_Process" xml:space="preserve">
    <value>T_Process</value>
  </data>
  <data name="DependencyDefinitionAttribute_Object" xml:space="preserve">
    <value>T_Object</value>
  </data>
  <data name="DependencyDefinitionAttribute_ParentObject" xml:space="preserve">
    <value>T_Parent Object</value>
  </data>
  <data name="DependencyDefinitionAttribute_ObjectAction" xml:space="preserve">
    <value>T_Object Action</value>
  </data>
  <data name="DependencyDefinitionAttribute_ModelElement" xml:space="preserve">
    <value>T_Model Element</value>
  </data>
  <data name="DependencyDefinitionAttribute_WebService" xml:space="preserve">
    <value>T_Web Service</value>
  </data>
  <data name="DependencyDefinitionAttribute_WebAPI" xml:space="preserve">
    <value>T_Web API</value>
  </data>
  <data name="DependencyDefinitionAttribute_WorkQueue" xml:space="preserve">
    <value>T_Work Queue</value>
  </data>
  <data name="DependencyDefinitionAttribute_Credentials" xml:space="preserve">
    <value>T_Credentials</value>
  </data>
  <data name="DependencyDefinitionAttribute_EnvironmentVariable" xml:space="preserve">
    <value>T_Environment Variable</value>
  </data>
  <data name="DependencyDefinitionAttribute_Calendars" xml:space="preserve">
    <value>T_Calendars</value>
  </data>
  <data name="DependencyDefinitionAttribute_Fonts" xml:space="preserve">
    <value>T_Fonts</value>
  </data>
  <data name="DependencyDefinitionAttribute_Skill" xml:space="preserve">
    <value>T_Skill</value>
  </data>
  <data name="DependencyDefinitionAttribute_Page" xml:space="preserve">
    <value>T_Page</value>
  </data>
  <data name="DependencyDefinitionAttribute_DataItem" xml:space="preserve">
    <value>T_Data item</value>
  </data>
  <data name="clsProcessValue_Empty" xml:space="preserve">
    <value>T_empty</value>
  </data>
  <data name="clsProcessValue_0Bytes" xml:space="preserve">
    <value>T_{0} bytes</value>
  </data>
  <data name="httpRequestBuilder_TheSpecifiedHeaderNameHasInvalidCharacters" xml:space="preserve">
    <value>T_The specified Header Name has Invalid characters.</value>
  </data>
  <data name="ApplicationRoot" xml:space="preserve">
    <value>T_Application Root</value>
  </data>
  <data name="clsReadStep_StageNameIsNullOrEmpty" xml:space="preserve">
    <value>T_Stage name is null or empty</value>
  </data>
  <data name="clsProcess_DefaultMainPage" xml:space="preserve">
    <value>T_Main Page</value>
  </data>
  <data name="RangeParameterValidationMessage" xml:space="preserve">
    <value>T_Enter a value between {0} and {1}</value>
  </data>
</root>
