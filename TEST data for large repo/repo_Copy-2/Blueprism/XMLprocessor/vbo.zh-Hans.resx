<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BPAObjectCalendars" xml:space="preserve">
    <value>BPA 对象 - 日历</value>
  </data>
  <data name="Calendars" xml:space="preserve">
    <value>日历</value>
  </data>
  <data name="CleanUp" xml:space="preserve">
    <value>清理</value>
  </data>
  <data name="GetWorkingDaysInRange" xml:space="preserve">
    <value>获取范围内的工作日</value>
  </data>
  <data name="CountWorkingDaysInRange" xml:space="preserve">
    <value>计算范围内的工作日天数</value>
  </data>
  <data name="IsWorkingDay" xml:space="preserve">
    <value>是工作日</value>
  </data>
  <data name="AddWorkingDays" xml:space="preserve">
    <value>添加工作日</value>
  </data>
  <data name="IsWeekend" xml:space="preserve">
    <value>是周末</value>
  </data>
  <data name="IsPublicHoliday" xml:space="preserve">
    <value>是公共假日</value>
  </data>
  <data name="IsOtherHoliday" xml:space="preserve">
    <value>是其他假日</value>
  </data>
  <data name="GetPublicHolidaysInRange" xml:space="preserve">
    <value>获取范围内的公共假日</value>
  </data>
  <data name="GetOtherHolidaysInRange" xml:space="preserve">
    <value>获取范围内的其他假日</value>
  </data>
  <data name="ThisInternalBusinessObjectprovides_dcdae390deab2f40" xml:space="preserve">
    <value>此内部业务对象使流程能够与系统管理器内的日历中定义的工作日交互。</value>
  </data>
  <data name="Getstheworkingdaysasconfiguredonth_b2c095b3b3bd6d00" xml:space="preserve">
    <value>获取在指定日历中配置的工作日（在指定日期开始和结束）。</value>
  </data>
  <data name="Countsthenumberofworkingdaysfoundw_fac7263ab618b10f" xml:space="preserve">
    <value>计算在给定范围内（含范围首尾日期）找到的工作日天数。</value>
  </data>
  <data name="Checksifthegivendateisaworkingdayo_8cf607e9c1569c01" xml:space="preserve">
    <value>根据指定的日历检查给定日期是否为工作日。</value>
  </data>
  <data name="Addsthespecifiednumberofworkingday_69c8acb6f7dc76a4" xml:space="preserve">
    <value>将指定的工作日天数添加到返回结果的开始日期。要获取已知日期之后的下一个工作日，请使用“天数”值 1。要获取上一个工作日，请使用值 -1。请注意，在“天数”值为 0 的情况下调用此操作将始终返回开始日期，而不管该日期是否为工作日。</value>
  </data>
  <data name="Checksifthegivendatefallsoutsideth_04199d0f56948577" xml:space="preserve">
    <value>检查给定日期是否在指定日历中定义的工作周之外（即周末）</value>
  </data>
  <data name="Checksifthegivendaterepresentsanen_c66b1dc00044699b" xml:space="preserve">
    <value>检查给定日期是否表示指定日历中定义的已启用公共假日。请注意，如果某个公共假日在日历中配置为忽略，则此操作将对该日期返回 False</value>
  </data>
  <data name="Checksifthegivendaterepresentsadat_f5f0876df94dd198" xml:space="preserve">
    <value>检查给定日期是否表示在指定日历中定义为“其他假日”的日期。</value>
  </data>
  <data name="Getsalltheenabledpublicholidaysdef_6096f69cdefdb4d2" xml:space="preserve">
    <value>获取日历中定义的在给定日期范围内（含范围首尾日期）的所有已启用公共假日。请注意，如果某个公共假日在日历中配置为忽略，则此操作不会返回该假日。</value>
  </data>
  <data name="Getsalltheotherholidaysspecifiedin_324623fb61620f44" xml:space="preserve">
    <value>获取日历中指定的在给定日期范围内（含范围首尾日期）的所有其他假日</value>
  </data>
  <data name="BPAObjectDataOLEDB" xml:space="preserve">
    <value>BPA 对象 - 数据 - OLEDB</value>
  </data>
  <data name="DataOLEDB" xml:space="preserve">
    <value>数据 - OLEDB</value>
  </data>
  <data name="ASQLinterfaceforinteractingwithOLEDBdatasources" xml:space="preserve">
    <value>用于与 OLEDB 数据源交互的 SQL 接口</value>
  </data>
  <data name="SetConnection" xml:space="preserve">
    <value>设置连接</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>打开</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="GetCollection" xml:space="preserve">
    <value>获取集合</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>执行</value>
  </data>
  <data name="Setstheconnectiondetailsforthedatabase" xml:space="preserve">
    <value>设置数据库的连接详细信息。</value>
  </data>
  <data name="CleanUpPageThisisanoptionalpagewhe_e329705673556ba2" xml:space="preserve">
    <value>清理页面

这是一个可选页面，在该页面中，您可以选择在业务对象关闭时执行一些收尾（或“清理”）任务。

在业务流程结尾关闭业务对象后，Automate 将立即自动调用清理操作。

您既不能从业务流程中调用此操作，也不能在处置业务对象之前的任何其他时间调用此操作。</value>
  </data>
  <data name="InitialisePageThisisanoptionalpage_5dc36d61f8e83337" xml:space="preserve">
    <value>初始化页面

这是一个可选页面，在该页面中，您可以选择在加载业务对象后执行一些初始化任务。

加载业务对象后，Automate 将立即自动调用初始化操作。

您既不能从业务流程中调用此操作，也不能在创建对象之后的任何其他时间调用此操作。</value>
  </data>
  <data name="OpensaconnectiontotheOLEDBdatabase" xml:space="preserve">
    <value>打开与 OLEDB 数据库的连接。</value>
  </data>
  <data name="ClosestheconnectiontotheOLEDBdatabase" xml:space="preserve">
    <value>关闭与 OLEDB 数据库的连接。</value>
  </data>
  <data name="Ifthepasswordissetusepasswordinconnectionstring" xml:space="preserve">
    <value>如果设置了密码，应在连接字符串中使用密码。</value>
  </data>
  <data name="BPAObjectDataSQLServer" xml:space="preserve">
    <value>BPA 对象 - 数据 - SQL Server</value>
  </data>
  <data name="DataSQLServer" xml:space="preserve">
    <value>数据 - SQL Server</value>
  </data>
  <data name="SQLServerinteractionobject" xml:space="preserve">
    <value>SQL Server 交互对象。</value>
  </data>
  <data name="Configure" xml:space="preserve">
    <value>配置</value>
  </data>
  <data name="BeginTransaction" xml:space="preserve">
    <value>开始事务</value>
  </data>
  <data name="CommitTransaction" xml:space="preserve">
    <value>提交事务</value>
  </data>
  <data name="RollbackTransaction" xml:space="preserve">
    <value>回滚事务</value>
  </data>
  <data name="GetRecordsAffected" xml:space="preserve">
    <value>获取受影响的记录</value>
  </data>
  <data name="GetNumber" xml:space="preserve">
    <value>获取数字</value>
  </data>
  <data name="GetText" xml:space="preserve">
    <value>获取文本</value>
  </data>
  <data name="GetCSVFile" xml:space="preserve">
    <value>获取 CSV 文件</value>
  </data>
  <data name="GetCSV" xml:space="preserve">
    <value>获取 CSV</value>
  </data>
  <data name="IftheuserisnotsetthanthismustbeLANconnection" xml:space="preserve">
    <value>如果未设置用户，则这个必须是 LAN 连接</value>
  </data>
  <data name="Configuresthisinstanceoftheutility_7d7269e0965cf40d" xml:space="preserve">
    <value>配置实用程序 VBO 的这个实例。如果在调用它时不提供参数，则将导致配置被重置为默认值。</value>
  </data>
  <data name="Notethatwedontthrowanexceptionhere_2702a5a9af45d108" xml:space="preserve">
    <value>注意，即使遇到故障，我们也不会抛出异常 - 这可能是作为更宽泛的操作的一部分调用的，调用方具有用来决定应该在何处引发异常的上下文。</value>
  </data>
  <data name="Flagindicatingthattheconnectionwra_18d32d90556979e9" xml:space="preserve">
    <value>指示此 VBO 包装的连接当前处于关闭流程中的标记</value>
  </data>
  <data name="EnsurethatwerenotbeingcalledbyRoll_6ac8a4ed7f2b1e31" xml:space="preserve">
    <value>确保我们没有被此操作调用的“回滚”调用 - 无限循环很糟糕。</value>
  </data>
  <data name="Closeandcleartheconnectionpool" xml:space="preserve">
    <value>关闭并清除连接池</value>
  </data>
  <data name="BPAObjectEmailPOP3_SMTP" xml:space="preserve">
    <value>BPA 对象 - 电子邮件 - POP3_SMTP</value>
  </data>
  <data name="EmailPOP3SMTP" xml:space="preserve">
    <value>电子邮件 - POP3/SMTP</value>
  </data>
  <data name="RetrieveemailviaPOP3protocolandsen_2a334e6857c87321" xml:space="preserve">
    <value>通过 POP3 协议获取电子邮件并使用 SMTP 协议发送</value>
  </data>
  <data name="GetMessage" xml:space="preserve">
    <value>获取消息</value>
  </data>
  <data name="SendMessage" xml:space="preserve">
    <value>发送消息</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>删除消息</value>
  </data>
  <data name="DeleteMessages" xml:space="preserve">
    <value>删除消息</value>
  </data>
  <data name="ListMessages" xml:space="preserve">
    <value>列出消息</value>
  </data>
  <data name="SaveAttachments" xml:space="preserve">
    <value>保存附件</value>
  </data>
  <data name="CleanUpPageThisisanoptionalpagewhe_d89d23e3afc91b83" xml:space="preserve">
    <value>清理页面

这是一个可选页面，在该页面中，您可以选择在业务对象关闭时执行一些收尾（或“清理”）任务。

在业务流程结尾关闭业务对象后，系统将立即自动调用清理操作。

您既不能从业务流程中调用此操作，也不能在处置业务对象之前的任何其他时间调用此操作。</value>
  </data>
  <data name="InitialisePageThisisanoptionalpage_0318e5b3816219c0" xml:space="preserve">
    <value>初始化页面

这是一个可选页面，在该页面中，您可以选择在加载业务对象后执行一些初始化任务。

加载业务对象后，系统将立即自动调用初始化操作。

您既不能从业务流程中调用此操作，也不能在创建对象之后的任何其他时间调用此操作。</value>
  </data>
  <data name="DeletesamessagefromthePOP3server" xml:space="preserve">
    <value>从 POP3 服务器删除消息。</value>
  </data>
  <data name="ConfiguresPOP3andSMTPsettingsfortheBusinessObject" xml:space="preserve">
    <value>配置业务对象的 POP3 和 SMTP 设置</value>
  </data>
  <data name="SendsamessageusingtheSMTPprotocol" xml:space="preserve">
    <value>使用 SMTP 协议发送消息。</value>
  </data>
  <data name="GetsamessageusingthePOP3protocolBy_0b025a93677a3809" xml:space="preserve">
    <value>使用 POP3 协议获取消息。默认情况下，对于多部分消息，纯文本部分的返回优先于 HTML（Content-Type 输出参数指示实际返回的内容），但 HTMLPreferred 标记可用于反转此逻辑。如果消息不包含纯文本或 HTML 部分，则返回空字符串。</value>
  </data>
  <data name="Deletesacollectionidentifyingmessa_70c2b485c0795b30" xml:space="preserve">
    <value>删除识别来自 POP3 服务器的消息的集合。</value>
  </data>
  <data name="Getsamessageattachmentandsavesittoagivenfolder" xml:space="preserve">
    <value>获取邮件附件并将其保存到给定文件夹。</value>
  </data>
  <data name="BPAObjectMSExcel" xml:space="preserve">
    <value>BPA 对象 - MS Excel</value>
  </data>
  <data name="MSExcelVBO" xml:space="preserve">
    <value>MS Excel VBO</value>
  </data>
  <data name="TheVBOreplacementfortheCommonAutom_7c4729b185fdc136" xml:space="preserve">
    <value>常见自动化 Excel 业务对象的 VBO 替换</value>
  </data>
  <data name="RemoveBlankRows" xml:space="preserve">
    <value>删除空行</value>
  </data>
  <data name="CreateInstance" xml:space="preserve">
    <value>创建实例</value>
  </data>
  <data name="OpenInstance" xml:space="preserve">
    <value>打开实例</value>
  </data>
  <data name="Attach" xml:space="preserve">
    <value>附加</value>
  </data>
  <data name="Attachtoworkbook" xml:space="preserve">
    <value>附加到工作簿</value>
  </data>
  <data name="CloseInstance" xml:space="preserve">
    <value>关闭实例</value>
  </data>
  <data name="ReleaseInstance" xml:space="preserve">
    <value>发布实例</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>退出</value>
  </data>
  <data name="CloseAllInstances" xml:space="preserve">
    <value>关闭所有实例</value>
  </data>
  <data name="SetCurrentInstance" xml:space="preserve">
    <value>设置当前实例</value>
  </data>
  <data name="SetEventsEnabled" xml:space="preserve">
    <value>设置事件已启用</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>显示</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>隐藏</value>
  </data>
  <data name="CreateWorkbook" xml:space="preserve">
    <value>创建工作簿</value>
  </data>
  <data name="OpenWorkbook" xml:space="preserve">
    <value>打开工作簿</value>
  </data>
  <data name="ActivateWorkbook" xml:space="preserve">
    <value>激活工作簿</value>
  </data>
  <data name="SaveWorkbook" xml:space="preserve">
    <value>保存工作簿</value>
  </data>
  <data name="SaveCurrentWorkbook" xml:space="preserve">
    <value>保存当前工作簿</value>
  </data>
  <data name="SaveWorkbookAs" xml:space="preserve">
    <value>将工作簿另存为</value>
  </data>
  <data name="SaveCurrentWorkbookAs" xml:space="preserve">
    <value>将当前工作簿另存为</value>
  </data>
  <data name="CloseWorkbook" xml:space="preserve">
    <value>关闭工作簿</value>
  </data>
  <data name="CloseCurrentWorkbook" xml:space="preserve">
    <value>关闭当前工作簿</value>
  </data>
  <data name="IsReadOnly" xml:space="preserve">
    <value>只读</value>
  </data>
  <data name="ActivateWorksheet" xml:space="preserve">
    <value>激活工作表</value>
  </data>
  <data name="CreateWorksheet" xml:space="preserve">
    <value>创建工作表</value>
  </data>
  <data name="DeleteWorksheet" xml:space="preserve">
    <value>删除工作表</value>
  </data>
  <data name="MoveWorksheet" xml:space="preserve">
    <value>移动工作表</value>
  </data>
  <data name="CopyandPasteWorksheetRange" xml:space="preserve">
    <value>复制和粘贴工作表范围</value>
  </data>
  <data name="GetWorksheetAsCollection" xml:space="preserve">
    <value>获取工作表集合</value>
  </data>
  <data name="GetWorksheetAsCollection_Fast_" xml:space="preserve">
    <value>获取工作表集合（快速）</value>
  </data>
  <data name="GetWorksheetasCollectionOffset" xml:space="preserve">
    <value>获取工作表集合偏移</value>
  </data>
  <data name="GetWorksheetRangeAsCollection" xml:space="preserve">
    <value>获取工作表范围集合</value>
  </data>
  <data name="SplitWorksheet" xml:space="preserve">
    <value>拆分工作表</value>
  </data>
  <data name="GetWorksheetNames" xml:space="preserve">
    <value>获取工作表名称</value>
  </data>
  <data name="GetWorksheetName" xml:space="preserve">
    <value>获取工作表名称</value>
  </data>
  <data name="GetWorksheetPosition" xml:space="preserve">
    <value>获取工作表位置</value>
  </data>
  <data name="WorksheetExists" xml:space="preserve">
    <value>工作表已存在</value>
  </data>
  <data name="GetNumberOfRows" xml:space="preserve">
    <value>获取行数</value>
  </data>
  <data name="GoToCell" xml:space="preserve">
    <value>转到单元格</value>
  </data>
  <data name="GoToNextCell" xml:space="preserve">
    <value>转到下一个单元格</value>
  </data>
  <data name="GetActiveCell" xml:space="preserve">
    <value>获取活动单元格</value>
  </data>
  <data name="FindNextEmptyCell" xml:space="preserve">
    <value>查找下一个空单元格</value>
  </data>
  <data name="GoToNextEmptyCellLeft" xml:space="preserve">
    <value>转到左侧下一个空单元格</value>
  </data>
  <data name="GoToNextEmptyCellRight" xml:space="preserve">
    <value>转到右侧下一个空单元格</value>
  </data>
  <data name="GoToNextEmptyCellUp" xml:space="preserve">
    <value>转到上方下一个空单元格</value>
  </data>
  <data name="GoToNextEmptyCellDown" xml:space="preserve">
    <value>转到下方下一个空单元格</value>
  </data>
  <data name="SetCellValue" xml:space="preserve">
    <value>设置单元格值</value>
  </data>
  <data name="WriteCollection" xml:space="preserve">
    <value>写入集合</value>
  </data>
  <data name="GetCellValue" xml:space="preserve">
    <value>获取单元格值</value>
  </data>
  <data name="GetActiveCellValue" xml:space="preserve">
    <value>获取活动单元格值</value>
  </data>
  <data name="GetFormattedCellValue" xml:space="preserve">
    <value>获取格式化单元格值</value>
  </data>
  <data name="FormatCell" xml:space="preserve">
    <value>格式化单元格</value>
  </data>
  <data name="FormatCurrentCell" xml:space="preserve">
    <value>格式化当前单元格</value>
  </data>
  <data name="SetWindowSize" xml:space="preserve">
    <value>设置窗口大小</value>
  </data>
  <data name="SetWindowLocation" xml:space="preserve">
    <value>设置窗口位置</value>
  </data>
  <data name="SetWindowState" xml:space="preserve">
    <value>设置窗口状态</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>选择</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>插入</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>复制</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>剪切</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>粘贴</value>
  </data>
  <data name="WriteToClipboard" xml:space="preserve">
    <value>写入剪贴板</value>
  </data>
  <data name="ProtectWorkbook" xml:space="preserve">
    <value>保护工作簿</value>
  </data>
  <data name="HideWorksheet" xml:space="preserve">
    <value>隐藏工作表</value>
  </data>
  <data name="HideOtherWorksheets" xml:space="preserve">
    <value>隐藏其他工作表</value>
  </data>
  <data name="ImportCSV" xml:space="preserve">
    <value>导入 CSV</value>
  </data>
  <data name="RunMacro" xml:space="preserve">
    <value>运行宏</value>
  </data>
  <data name="Closesalltheinstancesthathavebeenc_b7ca543b53141901" xml:space="preserve">
    <value>关闭使用此业务对象创建/附加到的所有实例。</value>
  </data>
  <data name="Createsaworkbookonthespecifiedinst_e890f5cbdce02ff1" xml:space="preserve">
    <value>在指定实例上创建一个工作簿，返回结果名称。

参数：
 - 句柄：数字：识别需要工作簿的实例的句柄。默认值 0 表示当前实例。

返回：
 - 工作簿名称：文本：Excel 已授予新工作簿的工作簿名称。默认情况下，Excel 将其称为“Book&lt;n&gt;”，其中 &lt;n&gt; 是正整数。

异常：
 - 错误句柄：如果给定句柄与实例不对应。</value>
  </data>
  <data name="Opensaworkbookusingtheinstancespec_70aa3cf96536788b" xml:space="preserve">
    <value>使用给定句柄中指定的实例打开工作簿，打开由给定文件名表示的工作簿。

参数：
 - 句柄：数字：应在其中打开工作簿的实例的句柄。默认值 0 表示当前实例。
 - 文件名：文本：应打开的文件的路径。

输出：
 - 工作簿名称：文本：Excel 用来识别工作簿的工作簿名称。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到文件：如果给定文件不存在或不是文件。</value>
  </data>
  <data name="Savestheworkbookusingthecurrentnam_f865a4d08636b8bc" xml:space="preserve">
    <value>使用当前名称作为文件名来保存工作簿。

参数：
 - 句柄：数字：识别应保存其上的工作簿的实例的整数。默认值 0 表示当前实例。
 - 工作簿名称：要保存的工作簿的名称。默认值空表示应保存活动工作簿。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果指定实例上不存在给定工作簿。</value>
  </data>
  <data name="Savethegivenworkbookusingthegivenf_882af15fea7da48e" xml:space="preserve">
    <value>使用给定的文件名保存给定的工作簿。

参数：
 - 句柄：数字：标识工作簿所在的实例的整数。默认值 (0) 表示当前实例
 - 工作簿名称：文本：应保存的工作簿的名称。默认值 ("") 表示活动工作簿。
 - 文件名：文本：应保存工作簿的文件的路径和名称。

输出：
 - 新工作簿名称：文本：用于在 excel 实例中标识工作簿的新名称。

异常：
 - 错误句柄：如果给定的句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。</value>
  </data>
  <data name="ActivatesCreatestheworksheetspecif_2471612f72e29021" xml:space="preserve">
    <value>激活/创建由给定参数指定的工作表

参数：
- 句柄：数字：实例句柄；
- 工作簿名称：文本：是工作表位于其上/应在其上创建工作表的工作簿的名称；
- 工作表名称：文本：工作表的名称
- 缺少时创建？：标记：指示是否应在工作簿上不存在具有该名称的工作表时创建工作表 - 如果缺少，则将*不*创建它。

异常：
- 错误句柄：如果给定句柄与实例不对应。
- 找不到工作簿：如果指定实例在给定的工作簿上不存在。
- 找不到工作表：如果给定的工作表在指定的工作簿上不存在。</value>
  </data>
  <data name="Deletesthespecifiedworksheetfromth_83371262aceef135" xml:space="preserve">
    <value>从工作簿中删除指定的工作表。

参数：
 - 句柄：数字：excel 实例句柄
 - 工作簿名称：文本：工作簿的名称
 - 工作表名称：文本：要删除的工作表的名称。
如果工作表不存在，这将无提示失败 - 即，什么都不会发生。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。
 - 找不到工作表：如果给定的工作表在指定的工作簿上不存在，或者指定的是活动工作表，但并没有活动工作表。</value>
  </data>
  <data name="Activatesthecellinthegivenworkbook_eb8a9f0a94da453a" xml:space="preserve">
    <value>激活给定工作簿中的单元格，由给定的单元格引用标识。

参数：
 - 句柄：数字：标识 excel 实例的整数句柄（0 表示“活动”实例）
 - 单元格引用：文本：要转到的单元格引用
注意 - 实例中的活动工作表是其上的单元格处于活动状态的工作表</value>
  </data>
  <data name="Setsthespecifiedcellsvaluetothegiv_89d1dd46129bc4e1" xml:space="preserve">
    <value>将指定单元格的值设置为给定值。
这具有将活动单元格设置为此处指定的单元格的副作用。

异常
Office 2013 以上版本
当尝试使用 Excel VBO 读取和写入数据且应用程序设置为以后台模式运行时会出现已知问题。使用“显示”操作可以解决这些问题
</value>
  </data>
  <data name="Getsthevalueofthespecifiedcellnote_9e4352e75612508e" xml:space="preserve">
    <value>获取指定单元格的值 - 注意，如果单元格中设置了一些格式，则*不*返回格式化的值 - 请参阅“获取格式化单元格值”。
另请注意，这会产生将指定的单元格置于活动状态的副作用。</value>
  </data>
  <data name="Activatestheexcelworkbookidentifie_35a8df8bed69c089" xml:space="preserve">
    <value>激活由给定句柄和名称标识的 excel 工作簿。

参数：
 - 句柄：数字：保存工作簿的实例的标识符；0（默认值）表示活动实例
 - 名称：文本：应激活的工作簿的名称

异常：
 - 输入参数无效：如果给出工作表名称参数
 - 错误句柄：如果句柄与 Excel 实例不对应</value>
  </data>
  <data name="Closesthespecifiedworkbooksavingch_f53e08042a7a7fa8" xml:space="preserve">
    <value>关闭指定的工作簿，保存更改（如果请求）。

参数：
 - 句柄：数字：标识应关闭其上的工作簿的实例的整数。0 表示当前实例。
 - 工作簿名称：文本：应关闭的工作簿的名称。"" 表示指定实例上的活动工作簿。
 - 保存更改：标记：True 表示保存更改（相当于在关闭工作簿之前调用“保存工作簿”）；False 表示在关闭工作簿时丢弃任何更改。

异常：
 - 错误句柄：如果给定的句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。</value>
  </data>
  <data name="CreatesaninstanceofExcelreturninga_ab9a2452273e9edb" xml:space="preserve">
    <value>创建 Excel 实例，并返回一个可以使用全局对象方法获取该实例的句柄：GetInstance(handle)。</value>
  </data>
  <data name="Closestheinstancerepresentedbytheg_a9a3dc45ffdb9af6" xml:space="preserve">
    <value>关闭由给定句柄表示的实例，根据指定保存更改或不保存更改。

参数：
 - 句柄：数字：标识应该关闭的实例的句柄；默认值 0 将关闭“当前活动”实例 - 即，访问的最后一个实例。注意，在关闭“当前活动”实例后，将不会设置当前实例。
 - 保存更改：标记：True 表示在关闭之前保存实例的工作簿；False 表示只关闭实例。

异常：
-错误句柄：如果给定的句柄与实例不对应。
</value>
  </data>
  <data name="OpensacurrentlyrunninginstanceofEx_b7916340137e1069" xml:space="preserve">
    <value>打开当前正在运行并具有给定的工作簿名称的 Excel 实例。

如果未给出工作簿名称，则会打开 Excel 的活动实例。如果当前没有正在运行的 Excel 实例，它将创建一个新实例。

参数：
 - 工作薄名称：文本：应该对应于要打开的工作簿 - 空值将导致第一个激活的 Excel 实例被打开。

返回：
 - 句柄：数字：可以识别此实例的数字句柄</value>
  </data>
  <data name="Setsthecurrentactiveinstancetothat_cb4e3b9a202a2f11" xml:space="preserve">
    <value>将“当前活动”实例设置为指定的实例。

参数：
 - 句柄：数字：应设置为当前实例的实例的句柄。如果没有设置当前实例，则默认值 0 只具有抛出异常的作用，否则是 no-op。

异常：
 - 错误句柄：如果给定的句柄与实例不对应。
</value>
  </data>
  <data name="Checksifthehandlegivencanbeusedtoa_368fc8bc5e17e547" xml:space="preserve">
    <value>检查给定的句柄是否可以用于访问有效的实例。

这意味着句柄是一个表示句柄的非零值，或者它是零并且设置了“当前实例”（每次设置当前实例时，都会使用 GetInstance() 创建或访问一个实例 - 如果实例关闭，它可以设置为“无”）。

 - 句柄是检查它是否表示有效实例的句柄

异常：
 - 错误句柄：如果给定的句柄不表示实例</value>
  </data>
  <data name="Thenameoftheworkbook" xml:space="preserve">
    <value>工作簿的名称</value>
  </data>
  <data name="Checkstheinstanceandworkbookvalues_26bf0483694c903d" xml:space="preserve">
    <value>检查实例和工作簿值，如果它们无效则抛出异常。

参数：
 - 句柄：数字：表示 Excel 实例的整数值。默认值 0 表示最后激活的实例。
 - 工作簿名称：文本：要检查的实例上的工作簿的名称。空字符串表示“活动”工作簿。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。</value>
  </data>
  <data name="Thrownwhenaworkbooknamewasnotfound" xml:space="preserve">
    <value>未找到工作簿名称时抛出</value>
  </data>
  <data name="NoteCheckInstanceAndWorkbookisdone_3d7d09a710ac74ea" xml:space="preserve">
    <value>注意：CheckInstanceAndWorkbook 是 SaveWorkbook 的一部分，因此无需再次执行</value>
  </data>
  <data name="ChecksifthegivenfileexistsParamsFi_803facadbdf38c9f" xml:space="preserve">
    <value>检查给定文件是否存在。

参数：
 - 文件名：文本：要检查的文件的路径

异常：
 - 找不到文件：如果给定的文件不存在或不是一个文件。</value>
  </data>
  <data name="Getsthecurrentworksheetintoacollec_1c3d90698bd20319" xml:space="preserve">
    <value>将当前工作表获取到集合中。这将读取工作表并将内容存储到集合中。第一行将被视为列名，并将用作生成的集合中的列名。

参数：
 - 句柄：数字：标识工作表所在实例的整数。默认值 (0) 表示当前实例。
 - 工作簿名称：文本：工作表所在的工作簿的名称。默认值 ("") 表示实例上的活动工作簿。
 - 工作表名称：文本：所需的工作表集合的名称。默认值 ("") 表示工作簿中的活动工作表。

输出：
数据 - 集合 - 工作表中的数据。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果指定的工作簿在指定的实例上不存在。
 - 找不到工作表：如果指定的工作表在指定的工作簿上不存在。

Office 2013 以上版本
当尝试使用 Excel VBO 读取和写入数据且应用程序设置为以后台模式运行时会出现已知问题。使用“显示”操作可以解决这些问题</value>
  </data>
  <data name="Closesallinstancesofexcelwhichhave_bed81174038d077b" xml:space="preserve">
    <value>通过“创建实例”或“打开实例”关闭已由此业务对象打开且未通过“关闭实例”或“发布实例”丢弃的所有 excel 实例</value>
  </data>
  <data name="Searchesforthenextemptycellinthedi_7d6eb400d8462b71" xml:space="preserve">
    <value>搜索给定方向中的下一个空单元格。
这可以在返回之前激活该单元格，或者只返回单元格引用，同时保留活动单元格的现有状态。

参数：
 - 句柄：数字：标识要使用的 Excel 实例的整数句柄。默认值 0 表示“当前”实例。
 - 方向：文本：要转到的方向，这应该以“U”、“D”、“L”或“R”（不区分大小写）开头 - 字符串的其余部分被忽略，因此您可以使用“向上”、“向下”、“向左”，实际上，“r”
 - 激活单元格？：标记：True 表示激活找到的单元格，False 表示只返回引用。默认值为 False。

返回：
 - 单元格引用：文本：表示所需方向中下一个空单元格的单元格 ID。如果在给定方向中找不到空单元格，则将为空白。

异常：
方向参数无效：如果给定的方向参数无效 - 即，没有以（不区分大小写）字母“U”、“D”、“L”或“R”之一开头。</value>
  </data>
  <data name="Directionmuststartwithoneofthefoll_aeab6e2dd7aa2c67" xml:space="preserve">
    <value>方向必须以下字母之一开头：
 - U：表示“向上”
 - D：表示“向下”
 - L：表示“向左”
 - R：表示“向右”
任何其他值（包括空文本）无效</value>
  </data>
  <data name="Getstheformattedvalueofthedesiredc_95e3d68891d896f2" xml:space="preserve">
    <value>获取所需单元格的格式化值。这将在输出值之前应用指定单元格中的任何格式。</value>
  </data>
  <data name="Splitsthespecifiedworksheetintosep_cf57d297917f2406" xml:space="preserve">
    <value>将指定的工作表拆分为独立工作簿，在每个工作簿上创建一个新工作表，并向其中复制行的子集。

参数：
 - 句柄：数字：表示 Excel 实例的整数 - 0 表示“活动”excel 实例。
 - 每个工作表的行数：数字：应复制到每个独立工作簿中的行数。
 - 工作簿名称：文本：应从中拆分工作表的工作簿的名称。"" 表示实例上的活动工作簿。
 - 工作表名称：文本：应从中拆分数据的工作表的名称。"" 表示实例上的活动工作表。
 - 路径：文本：应保存所生成的工作簿的目录。
 - 无标题行：标记：True 表示第一行*不*应用作标题行并复制每个生成的工作簿。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。
 - 找不到文件：如果给定路径不存在或不是一个目录</value>
  </data>
  <data name="ActuallyIvenoideawhatsoeverwhatthisdoes" xml:space="preserve">
    <value>实际上，我不知道这有何作用。</value>
  </data>
  <data name="Checksifthegivenworkbookisreadonly_3de5dd5e1d0096c7" xml:space="preserve">
    <value>检查给定的工作簿是否为只读。

参数：
 - 句柄：数字：标识要检查的 excel 实例的整数。默认值 (0) 表示当前实例。
 - 工作簿名称：文本：要检查的工作簿的名称。默认值 ("") 表示给定实例上的活动工作簿。

输出：
只读？：标记：True 表示工作簿为只读；False 表示它是可写的。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 找不到工作簿：如果给定的工作簿在指定的实例上不存在。</value>
  </data>
  <data name="Showsawindowattachedtotheinstancei_a0773731eba39815" xml:space="preserve">
    <value>显示附加到所标识实例的窗口。

参数：
 - 句柄：数字：标识要显示的 excel 实例的句柄。默认值 0 显示当前活性的实例。

异常：
 - 错误句柄：如果给定的句柄与实例不对应。
</value>
  </data>
  <data name="Hidesthewindowattachedtotheinstanc_4a49db5d3da02b29" xml:space="preserve">
    <value>隐藏附加到所标识实例的窗口。

参数：
 - 句柄：数字：标识要隐藏的 excel 实例的句柄。默认值 0 显示当前活性的实例。

异常：
 - 错误句柄：如果给定的句柄与实例不对应。
</value>
  </data>
  <data name="Savethecurrentworkbookusingthegive_44739016ae3ad117" xml:space="preserve">
    <value>使用给定的文件名保存当前工作簿。这相当于使用默认值“句柄”(0) 和“工作簿名称”("") 调用“将工作簿另存为”操作

参数：
 - 文件名：文本：应保存工作簿的文件路径和名称。

输出：
 - 新工作簿名称：文本：excel 实例中用于标识工作簿的新名称。</value>
  </data>
  <data name="Hereforbackwardcompatibilityexitst_1a4a11b380cf2db9" xml:space="preserve">
    <value>这里是为了实现向后兼容性 - 退出当前的 Excel 实例而不保存任何更改。</value>
  </data>
  <data name="Savesthecurrentworkbookusingthewor_9694b62feaf26ef7" xml:space="preserve">
    <value>使用工作簿名称作为文件名保存当前工作簿。
这相当于使用默认值“句柄”(0) 和“工作簿名称”("") 调用“保存工作簿”操作

异常：
 - 错误句柄：如果没有活动实例。
 - 找不到工作簿：如果实例上没有活动工作簿。</value>
  </data>
  <data name="HereforbackcompatabilityShouldbeco_f02f8c8f205e6700" xml:space="preserve">
    <value>这里是为了实现向后兼容性。应被视为已弃用，并且应通过“获取工作表集合”替换调用，但此时此操作会将当前 Excel 实例中活动工作簿上的活动工作表放入集合中。它相当于使用所有默认输入值调用“获取工作表集合”。

输出：
数据：集合：活动工作表数据集合。</value>
  </data>
  <data name="Setsthenumberformatatthegivencellt_58b01479a7613629" xml:space="preserve">
    <value>将给定单元格的数字格式设置为指定的格式。
此外，此操作*不*设置当前活性的单元格。</value>
  </data>
  <data name="Setsacellformatforthecurrentlyactivecell" xml:space="preserve">
    <value>设置当前活动单元格的单元格格式。</value>
  </data>
  <data name="Getsareferencetothecurrentlyactive_cce9b7b0fcb413cb" xml:space="preserve">
    <value>获取对给定实例上当前活动单元格的引用。</value>
  </data>
  <data name="Activatesthenextemptycellthatcanbe_49eabb6a1f265fad" xml:space="preserve">
    <value>激活可在活动单元格左侧找到的下一个空单元格。</value>
  </data>
  <data name="Activatesthenextemptycellthatcanbe_5159dbdd606c4625" xml:space="preserve">
    <value>激活可在活动单元格右侧找到的下一个空单元格。</value>
  </data>
  <data name="Activatesthenextemptycellthatcanbe_e93dac1d929f33f8" xml:space="preserve">
    <value>激活可在活动单元格上方找到的下一个空单元格。</value>
  </data>
  <data name="Activatesthenextemptycellthatcanbe_84497a421ccbfde8" xml:space="preserve">
    <value>激活可在活动单元格下方找到的下一个空单元格。</value>
  </data>
  <data name="Setsthewindowsizeofthespecifiedinstance" xml:space="preserve">
    <value>设置指定实例的窗口大小。</value>
  </data>
  <data name="Movesthespecifiedinstanceswindowto_75d89ef9b57baa63" xml:space="preserve">
    <value>将指定实例的窗口移动到所需位置。</value>
  </data>
  <data name="Minimizesmaximizesrestoresthewindo_d6a0d8ebdb5312c2" xml:space="preserve">
    <value>最小化/最大化/恢复附加到指定 excel 实例的窗口。

异常：
输入参数无效：如果给定的状态不是“正常”并且没有以“最小”或“最大”开头</value>
  </data>
  <data name="Movesaspecifiednumberofrowsandcolu_38b339e597f90b90" xml:space="preserve">
    <value>从当前活性的单元格移动指定数量的行和列并返回新的单元格引用。
如果生成的单元格引用与调用此操作之前的活动单元格相同，则此操作“失败”。这通常是因为活动单元太靠近边界。</value>
  </data>
  <data name="Closesthecurrentworkbookonthecurre_78dbd02d2ac30518" xml:space="preserve">
    <value>关闭当前 excel 实例上的当前工作簿。
这相当于使用默认值“句柄”(0) 和“工作簿名称”("") 调用“关闭工作薄”操作</value>
  </data>
  <data name="Checksifthegivenstateisavalidvalue" xml:space="preserve">
    <value>检查给定状态是否为有效值</value>
  </data>
  <data name="ThenewworkbooknameassignedbyExcela_052a3880543b09df" xml:space="preserve">
    <value>保存工作薄后由 Excel 分配的新工作簿名称</value>
  </data>
  <data name="Removesaninstancefromthisbusinesso_654f7fe525aebe38" xml:space="preserve">
    <value>从此业务对象中删除实例，而*不*关闭或退出它 - 在运行此操作后，此对象将无法访问相关实例，除非使用“打开实例”重新附加它。

参数：
 - 句柄：数字：要释放的实例的句柄。默认值 0 表示当前活性的实例。注意，在释放当前实例之后，将不会设置当前实例。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
</value>
  </data>
  <data name="Dontneedtoanythingasideeffectofthe_7ff8f0273b179493" xml:space="preserve">
    <value>不需要任何操作 - 检查的副作用是设置当前实例 … 使其变得简单。</value>
  </data>
  <data name="BackcompatiblelinktoOpenInstanceTh_5da23197ab9ba7ab" xml:space="preserve">
    <value>“打开实例”的向后兼容链接。这将打开找到的第一个正在运行的 Excel 实例，并在此对象中链接到它。

返回：
 - 句柄：数字：可以识别打开的实例的整数。
 - 启用事件：标记：表示事件应在附加的实例上启用/禁用 - 默认为 True</value>
  </data>
  <data name="BackcompatiblelinktoOpeninstanceat_5e400e737cceb335" xml:space="preserve">
    <value>“打开示例”的向后兼容链接 - 附加到包含当前工作簿的 excel 实例。注意，如果找不到包含工作簿的实例，则会创建一个新实例。

参数：
 - 文件名：文本：应打开的实例中的文件名称。
 - 启用事件：标记：表示事件应该在附加的实例上启用/禁用 - 默认为 True
返回：
 - 句柄：数字：稍后可用于引用此实例的整数。</value>
  </data>
  <data name="Getsthevalueofthecurrentlyactivecell" xml:space="preserve">
    <value>获取当前活动单元格的值。</value>
  </data>
  <data name="Createsanewworksheetinthespecified_e0f2b172a991cb1e" xml:space="preserve">
    <value>使用给定名称在指定工作簿中创建新工作表。如果已存在具有给定名称的工作表，则将激活该工作表。

参数：
 - 句柄：数字：标识所需实例的编号。
 - 工作簿名称：文本：要将其添加到的工作簿的名称。空字符串（默认值）表示实例中的活动工作簿。
 - 工作表名称：文本：所需工作表的名称。注意，如果名称与工作簿中已有的工作表相同，则不会创建新工作表，但将激活该工作表。

异常：
 - 错误句柄：如果给定句柄与实例不对应。
 - 未找到工作簿：如果给定的工作簿在指定的实例上不存在。</value>
  </data>
  <data name="Writesthegivencollectionintothespecifiedsheet" xml:space="preserve">
    <value>将给定集合写入指定的工作表。</value>
  </data>
  <data name="Enablesordisablestheeventsonthespe_f4586632165d5ef1" xml:space="preserve">
    <value>启用或禁用指定 excel 实例上的事件。</value>
  </data>
  <data name="ExceptionsOffice2013onwardsTherear_e5eef9c82b445eec" xml:space="preserve">
    <value>异常
Office 2013 以上版本
当尝试使用 Excel VBO 读取和写入数据且应用程序设置为在后台模式下运行时会出现已知问题。使用“显示”操作可以解决这些问题</value>
  </data>
  <data name="Removesblankrowsintheactiveexcelwo_8fbb5ade000a83cd" xml:space="preserve">
    <value>删除活动 excel 工作簿中的空白行。整行必须由空白单元格组成。</value>
  </data>
  <data name="Office2013onwardsThereareknownissu_05b7ea368a394e4c" xml:space="preserve">
    <value>Office 2013 以上版本
当尝试使用 Excel VBO 读取和写入数据且应用程序设置为在后台模式下运行时会出现已知问题。使用“显示”操作可以解决这些问题</value>
  </data>
  <data name="Assumenotextqualifier" xml:space="preserve">
    <value>假设没有文本限定符</value>
  </data>
  <data name="RunsthespecifiedmacroDependingonho_294fb5ff6c79a5aa" xml:space="preserve">
    <value>运行指定的宏。

根据宏的创建方式，名称将是以下情况下之一：

A. 只包含宏名称。
例如 MyMacro

B. 工作簿和宏名称，
例如 MyWorkbook.xls!MyMacro

C. 工作簿、工作表和宏名称，
例如 'MyWorkbook.xls!'MyWorksheet.MyMacro</value>
  </data>
  <data name="BPAObjectMSOutlookEmail" xml:space="preserve">
    <value>BPA 对象 - MS Outlook 电子邮件</value>
  </data>
  <data name="MSOutlookEmailVBO" xml:space="preserve">
    <value>MS Outlook 电子邮件 VBO</value>
  </data>
  <data name="BusinessObjectforinteractingwithMi_cae56efa8fdcf5a2" xml:space="preserve">
    <value>用于与 Microsoft Outlook 电子邮件功能交互的业务对象</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>发送电子邮件</value>
  </data>
  <data name="ReplyAlltoEmail" xml:space="preserve">
    <value>回复全部电子邮件</value>
  </data>
  <data name="ReplytoEmail" xml:space="preserve">
    <value>回复电子邮件</value>
  </data>
  <data name="ForwardEmail" xml:space="preserve">
    <value>转发电子邮件</value>
  </data>
  <data name="SaveEmailAsFile" xml:space="preserve">
    <value>将电子邮件另存为文件</value>
  </data>
  <data name="DeleteEmail" xml:space="preserve">
    <value>删除电子邮件</value>
  </data>
  <data name="MarkEmailAsRead" xml:space="preserve">
    <value>将电子邮件标记为已读</value>
  </data>
  <data name="MarkEmailAsUnread" xml:space="preserve">
    <value>将电子邮件标记为未读</value>
  </data>
  <data name="MoveEmailtoInboxSubFolder" xml:space="preserve">
    <value>将电子邮件移动到收件箱子文件夹</value>
  </data>
  <data name="SaveAttachment" xml:space="preserve">
    <value>保存附件</value>
  </data>
  <data name="GetSentItems_Basic_" xml:space="preserve">
    <value>获取已发送项（基本）</value>
  </data>
  <data name="GetSentItems_Advanced_" xml:space="preserve">
    <value>获取已发送项（高级）</value>
  </data>
  <data name="GetSentItems_Expert_" xml:space="preserve">
    <value>获取已发送项（专家）</value>
  </data>
  <data name="GetReceivedItems_Basic_" xml:space="preserve">
    <value>获取已接收项（基本）</value>
  </data>
  <data name="GetReceivedItems_Advanced_" xml:space="preserve">
    <value>获取已接收项（高级）</value>
  </data>
  <data name="GetReceivedItems_Expert_" xml:space="preserve">
    <value>获取已接收项（专家）</value>
  </data>
  <data name="Storesaspecifiedemailasamsgfileona_7f0c2a74797e309c" xml:space="preserve">
    <value>在任意文件位置（文件路径）上将指定的电子邮件存储为“.msg”文件。

条目 ID 是用于确定要保存哪个电子邮件的唯一标识符。</value>
  </data>
  <data name="GoogleOlDefaultFoldersEnumeration6Inbox5Sent" xml:space="preserve">
    <value>Google OlDefaultFolders 枚举，6 = 收件箱，5 = 已发送</value>
  </data>
  <data name="Subfunctionusedbymultipleactionswi_b8568d088944db96" xml:space="preserve">
    <value>VBO 中多个操作使用的子函数。不要更改或发布。

使用 Restrict 方法创建文件夹项的筛选列表。不用于发布。

</value>
  </data>
  <data name="AnIDobtainedfromoneoftheGetItemactionsinthisobject" xml:space="preserve">
    <value>从此对象中的一个“获取项”操作获取的 ID。</value>
  </data>
  <data name="ListsInboxitemsmatchingthefilterpr_0a95860840dffc27" xml:space="preserve">
    <value>列出与提供的筛选器匹配的收件箱项

示例 1 [From]='Mike Coworker' AND [unread]=False

示例 2 [Unread]=True AND [ReceivedTime] &gt;= '2018/01/01'

参阅 https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</value>
  </data>
  <data name="ListsSentItemsmatchingthequeryprov_5803ee3dab82b91f" xml:space="preserve">
    <value>列出与提供的查询匹配的已发送项。

示例 1 @SQL=urn:schemas:httpmail:subject='Data Input'

示例 2 @SQL=urn:schemas:httpmail:displayto='Mike Colleague' AND (urn:schemas:httpmail:subject LIKE '%Important%' OR urn:schemas:httpmail:subject LIKE '%Urgent%')"

参阅 https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</value>
  </data>
  <data name="SendsanEmail" xml:space="preserve">
    <value>发送电子邮件 </value>
  </data>
  <data name="DownloadsallattachmentstoafolderTh_70b032de0b5937ea" xml:space="preserve">
    <value>将所有附件下载到文件夹。

条目 ID 是用于确定要对哪个电子邮件采取操作的唯一标识符。</value>
  </data>
  <data name="Downloadsaspecficattachmenttoafold_70cd723f4cbeb426" xml:space="preserve">
    <value>将特定附件下载到文件夹。例如，用例是“*.txt”或“*.docx”等。

条目 ID 是用于确定要对哪个电子邮件采取操作的唯一标识符。</value>
  </data>
  <data name="DeletesaspecificemailitemTheEntryI_9658eb17a54508bb" xml:space="preserve">
    <value>删除特定的电子邮件项。

条目 ID 是用于确定要删除哪个电子邮件的唯一标识符。</value>
  </data>
  <data name="ReplytoallEmailsrecipientsofaspeci_74f33042e3109f97" xml:space="preserve">
    <value>回复特定电子邮件的所有电子邮件收件人。

&lt;回复全部电子邮件&gt; 操作只会调用特定于一个 ID（条目 ID）的电子邮件项。

如果预计会调用多个电子邮件，则流程设计需要反映该要求。</value>
  </data>
  <data name="ForwardEmailtorecipients_ToCCBCC_i_103cc3d2d3420f25" xml:space="preserve">
    <value>将电子邮件转发给收件人 (To/CC/BCC)，包括（消息）作为输入参数。

&lt;转发电子邮件&gt; 操作只会调用特定于一个 ID（条目 ID）的电子邮件项。

如果预计会调用多个电子邮件，则流程设计需要反映该要求。</value>
  </data>
  <data name="ReplytoEmailsenderofaspecificemail_56d06d9383abc4d5" xml:space="preserve">
    <value>回复特定电子邮件的电子邮件发件人。

&lt;回复电子邮件&gt; 操作只会调用一个特定于 ID（条目 ID）的电子邮件项。

如果预计会调用多个电子邮件，则流程设计需要反映该要求。</value>
  </data>
  <data name="Movesanemailtoasubfolderwithinthei_ba0d15cb0bb80505" xml:space="preserve">
    <value>将电子邮件移动到收件箱文件夹中的子文件夹。

条目 ID 是用于确定要移动哪个电子邮件的唯一标识符。

例如，
从收件箱移动到收件箱\子文件夹 </value>
  </data>
  <data name="MSOutlookOlDefaultFoldersEnumeration6Inbox5Sent" xml:space="preserve">
    <value>MS Outlook - OlDefaultFolders 枚举，6 = 收件箱，5 = 已发送</value>
  </data>
  <data name="ListsSentItemsmatchingtheparametersprovided" xml:space="preserve">
    <value>列出与提供的参数匹配的已发送项</value>
  </data>
  <data name="ListsInboxitemsmatchingtheparametersprovided" xml:space="preserve">
    <value>列出与提供的参数匹配的收件箱项</value>
  </data>
  <data name="ListsSentItemsmatchingthefilterpro_7d201161d1a18504" xml:space="preserve">
    <value>列出与提供的筛选器匹配的已发送项。

示例 1 [Subject]='Exception Report'

示例 2 [To]='Mike Colleague' OR [To]='Mike Coworker'

参阅 https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</value>
  </data>
  <data name="ListsInboxItemsmatchingthefiltersp_6074e913b51ca7e9" xml:space="preserve">
    <value>列出与提供的筛选器匹配的收件箱项。

示例 1 @SQL=urn:schemas:httpmail:fromname='Mike Colleague' AND urn:schemas:httpmail:read=0

示例 2 @SQL=urn:schemas:httpmail:fromname='The Boss' AND urn:schemas:httpmail:subject LIKE '%Urgent%'

参阅 https://msdn.microsoft.com/en-us/vba/outlook-vba/articles/items-restrict-method-outlook</value>
  </data>
  <data name="MarksaspecificemailasreadTheEntryI_634c03acb440e71a" xml:space="preserve">
    <value>将特定电子邮件标记为已读。

条目 ID 是用于确定要标记哪个电子邮件的唯一标识符。</value>
  </data>
  <data name="MarksaspecificemailasunreadTheEntr_6a3bc2463ee0d9c1" xml:space="preserve">
    <value>将特定电子邮件标记为未读。

条目 ID 是用于确定要标记哪个电子邮件的唯一标识符。</value>
  </data>
  <data name="NOTFORPUBLICATION" xml:space="preserve">
    <value>不用于发布</value>
  </data>
  <data name="APIfunctionsprovidedfortheadvanced_1d2a7074ac413542" xml:space="preserve">
    <value>为高级筛选器表达式提供的 API 函数：

BCC = 返回表示 MailItem 的密件抄送 (BCC) 名称显示列表的字符串。Read/write.
Body = 返回或设置表示 Outlook 项的明文正文的字符串。Read/write.
CC = 返回表示 MailItem 的抄送 (CC) 名称显示列表的字符串。Read/write.
CreationTime = 返回表示 Outlook 项的创建时间的日期。Read-only.
EntryID = 返回表示对象的唯一条目 ID 的字符串。Read-only.
HTMLBody = 返回或设置表示指定项的 HTML 正文的字符串。Read/write.
ReceivedTime = 返回表示已接收项的日期和时间的日期。Read-only.
SenderEmailAddress = 返回表示 Outlook 项发件人的电子邮件地址的字符串。Read-only.
SenderName = 返回表示 Outlook 项发件人的显示名称的字符串。Read-only.
SentOn = 返回表示 Outlook 项发送日期和时间的日期。Read-only.
Subject = 返回或设置表示 Outlook 项主题的字符串。Read/write.
To = 返回或设置 Outlook 收件人显示名称的以分号分隔的字符串列表。Read/write.
UnRead = 返回或设置一个为布尔值，如果 Outlook 项尚未打开（读取），则为 True。Read/write.
</value>
  </data>
  <data name="SupportedAPIDASLfiltersexpressions_bbc6737ae289d3b3" xml:space="preserve">
    <value>支持的 API DASL 筛选器表达式：

urn:schemas:httpmail:attachmentfilename
urn:schemas:httpmail:bcc
urn:schemas:httpmail:cc
urn:schemas:httpmail:date
urn:schemas:httpmail:datereceived
urn:schemas:httpmail:displaycc
urn:schemas:httpmail:displayto
urn:schemas:httpmail:from
urn:schemas:httpmail:fromemail
urn:schemas:httpmail:fromname
urn:schemas:httpmail:hasattachment
urn:schemas:httpmail:importance
urn:schemas:httpmail:senderemail
urn:schemas:httpmail:sendername
urn:schemas:httpmail:subject
urn:schemas:httpmail:submitted
urn:schemas:httpmail:textdescription
urn:schemas:httpmail:to
</value>
  </data>
  <data name="BPAObjectMSWord" xml:space="preserve">
    <value>BPA 对象 - MS Word</value>
  </data>
  <data name="MSWordVBO" xml:space="preserve">
    <value>MS Word VBO</value>
  </data>
  <data name="TheVBOreplacementfortheCommonAutom_7433d396219d7354" xml:space="preserve">
    <value>常见自动化 Word 业务对象的 VBO 替换</value>
  </data>
  <data name="AddTableRow" xml:space="preserve">
    <value>添加表格行</value>
  </data>
  <data name="SetTableCellValue" xml:space="preserve">
    <value>设置表格单元格值</value>
  </data>
  <data name="GetTableCellValue" xml:space="preserve">
    <value>获取表格单元格值</value>
  </data>
  <data name="GetHighlightedText" xml:space="preserve">
    <value>获取突出显示的文本</value>
  </data>
  <data name="ReplaceHighlightedText" xml:space="preserve">
    <value>替换突出显示的文本</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>全选</value>
  </data>
  <data name="CopytoClipboard" xml:space="preserve">
    <value>复制到剪贴板</value>
  </data>
  <data name="PastefromClipboard" xml:space="preserve">
    <value>从剪贴板粘贴</value>
  </data>
  <data name="ClearClipboard" xml:space="preserve">
    <value>清除剪贴板</value>
  </data>
  <data name="FindText" xml:space="preserve">
    <value>查找文本</value>
  </data>
  <data name="SelectNextCell" xml:space="preserve">
    <value>选择下一个单元格</value>
  </data>
  <data name="SetSelectedCellText" xml:space="preserve">
    <value>设置选定的单元格文本</value>
  </data>
  <data name="SelectNextField" xml:space="preserve">
    <value>选择下一个字段</value>
  </data>
  <data name="SetSelectedCheckbox" xml:space="preserve">
    <value>设置选中的复选框</value>
  </data>
  <data name="GetFooterText" xml:space="preserve">
    <value>获取页脚文本</value>
  </data>
  <data name="AttachInstance" xml:space="preserve">
    <value>附加实例</value>
  </data>
  <data name="DetachInstance" xml:space="preserve">
    <value>拆离实例</value>
  </data>
  <data name="CreateDocument" xml:space="preserve">
    <value>创建文档</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>另存为</value>
  </data>
  <data name="ExportPDF" xml:space="preserve">
    <value>导出 PDF</value>
  </data>
  <data name="GetBody" xml:space="preserve">
    <value>获取正文</value>
  </data>
  <data name="TypeText" xml:space="preserve">
    <value>输入文本</value>
  </data>
  <data name="UpdateBookmark" xml:space="preserve">
    <value>更新书签</value>
  </data>
  <data name="Getsthebodytextfromtheworddocument" xml:space="preserve">
    <value>从 Word 文档中获取正文文本</value>
  </data>
  <data name="DetachesfromtheWordinstancewiththe_c74356bddb8d29b6" xml:space="preserve">
    <value>使用给定句柄从 Word 实例中拆离，删除此业务对象中的所有引用。</value>
  </data>
  <data name="Returnsthedocumentshighlightedtextasacollection" xml:space="preserve">
    <value>返回文档中突出显示的文本集合</value>
  </data>
  <data name="Searchesforandreplaceshighlightedtext" xml:space="preserve">
    <value>搜索并替换突出显示的文本</value>
  </data>
  <data name="Selectstheentiredocument" xml:space="preserve">
    <value>选择整个文档</value>
  </data>
  <data name="Copiesthecurrentselectionontotheclipboard" xml:space="preserve">
    <value>将当前选择复制到剪贴板</value>
  </data>
  <data name="Pastesthecontentsoftheclipboardintothedocument" xml:space="preserve">
    <value>将剪贴板的内容粘贴到文档中</value>
  </data>
  <data name="Searchesthedocumentforthegiventext" xml:space="preserve">
    <value>在文档中搜索给定文本</value>
  </data>
  <data name="Movesthecursortothetablecellnsteps_4913901dc52b142e" xml:space="preserve">
    <value>将光标移动到距离当前单元格 n 步的表格单元格。正数步向前移动，负数步向后移动。</value>
  </data>
  <data name="Selectsthenextfieldinthedocument" xml:space="preserve">
    <value>选择文档中的下一个字段</value>
  </data>
  <data name="Ticksoruntickstheselectedcheckbox" xml:space="preserve">
    <value>选中或取消选中选定复选框</value>
  </data>
  <data name="Getsthetextfromthespecifiedfooter" xml:space="preserve">
    <value>获取指定页脚的文本</value>
  </data>
  <data name="Inputs" xml:space="preserve">
    <value>输入</value>
  </data>
  <data name="Outputs" xml:space="preserve">
    <value>输出</value>
  </data>
  <data name="BPAObjectSystemActiveDirectory" xml:space="preserve">
    <value>BPA 对象 - 系统 - Active Directory</value>
  </data>
  <data name="SystemActiveDirectory" xml:space="preserve">
    <value>系统 - Active Directory</value>
  </data>
  <data name="BusinessObjectforinteractingwithAc_4e8466e26742167d" xml:space="preserve">
    <value>用于在 .NET 中使用基于 LDAP 的 API 与 Active Directory 交互的业务对象</value>
  </data>
  <data name="CreateUser" xml:space="preserve">
    <value>创建用户</value>
  </data>
  <data name="UserExists_Displayname_" xml:space="preserve">
    <value>用户已存在 (Displayname)</value>
  </data>
  <data name="UserExists_UserPrincipalName_" xml:space="preserve">
    <value>用户已存在 (UserPrincipalName)</value>
  </data>
  <data name="ObjectExists_Dynamic_" xml:space="preserve">
    <value>对象已存在 (Dynamic)</value>
  </data>
  <data name="AddUsertoGroup" xml:space="preserve">
    <value>将用户添加到组</value>
  </data>
  <data name="Returnstrueiftheprovidedusernamema_091fe139cd8167b6" xml:space="preserve">
    <value>如果提供的用户名与目录中找到的 userPrincipalName 匹配，则返回 True。</value>
  </data>
  <data name="Addsthespecifieduserasamemberofthetargetgroup" xml:space="preserve">
    <value>将指定的用户添加为目标组的成员。</value>
  </data>
  <data name="Createsanewactiveuserwithinthespec_196cdebefebe8d01" xml:space="preserve">
    <value>在指定的路径位置中创建新的活动用户。</value>
  </data>
  <data name="Returnstrueiftheprovideddisplaynam_a225539c28386fd8" xml:space="preserve">
    <value>如果在目录中找到提供的显示名称，则返回 True。此搜索使用通用名 (CN)，它虽然通常适用于用户，但也适用于其他对象，例如安全组和各种系统生成的容器。此操作以前被命名为“用户已存在”。</value>
  </data>
  <data name="Returnstrueiftheprovidedsearchstri_b423ba424820b3b4" xml:space="preserve">
    <value>如果在目录中发现提供的搜索字符串（属性和值）匹配，则返回 True。支持目录中的许多不同对象类型。示例包括：
容器：“CN=Users”。
组织单位：“OU=Blue Prism Users”。
安全组：“CN=SecGroup_BluePrismUsers”。
用户：“sAMAccountName=JoeBloggs”；“CN=Joe Bloggs”。</value>
  </data>
  <data name="DeprecatedactionThisactionhasbeenr_bdc15e421e874a20" xml:space="preserve">
    <value>弃用的操作。此操作已被以下三种操作之一取代：
1) 检查用户存在 (Displayname)
2) 检查用户存在 (UserPrincipalName)
3) 检查对象存在（动态）</value>
  </data>
  <data name="BPAObjectUtilityCollectionManipulation" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 集合操作</value>
  </data>
  <data name="UtilityCollectionManipulation" xml:space="preserve">
    <value>实用程序 - 集合操作</value>
  </data>
  <data name="Utilityfunctionsformanipulatingcollections" xml:space="preserve">
    <value>用于操作集合的实用程序函数。</value>
  </data>
  <data name="SortCollection" xml:space="preserve">
    <value>对集合进行排序</value>
  </data>
  <data name="ReverseCollection" xml:space="preserve">
    <value>反转集合顺序</value>
  </data>
  <data name="MergeCollection" xml:space="preserve">
    <value>合并集合</value>
  </data>
  <data name="SplitCollection" xml:space="preserve">
    <value>拆分集合</value>
  </data>
  <data name="TransposeCollection" xml:space="preserve">
    <value>转置集合</value>
  </data>
  <data name="FilterCollection" xml:space="preserve">
    <value>筛选集合</value>
  </data>
  <data name="GetCollectionFields" xml:space="preserve">
    <value>获取集合字段</value>
  </data>
  <data name="FieldExists" xml:space="preserve">
    <value>字段已存在</value>
  </data>
  <data name="RenameCollectionFields" xml:space="preserve">
    <value>重命名集合字段</value>
  </data>
  <data name="ReadCollectionField" xml:space="preserve">
    <value>读取集合字段</value>
  </data>
  <data name="SetCollectionField" xml:space="preserve">
    <value>设置集合字段</value>
  </data>
  <data name="CollectionContainsField" xml:space="preserve">
    <value>集合包含字段</value>
  </data>
  <data name="CollectionContainsValue" xml:space="preserve">
    <value>集合包含值</value>
  </data>
  <data name="CopyRows" xml:space="preserve">
    <value>复制行</value>
  </data>
  <data name="AppendRowstoCollection" xml:space="preserve">
    <value>向集合中附加行</value>
  </data>
  <data name="AppendField_Text_" xml:space="preserve">
    <value>附加字段（文本）</value>
  </data>
  <data name="AppendField_Number_" xml:space="preserve">
    <value>附加字段（数字）</value>
  </data>
  <data name="RenameField" xml:space="preserve">
    <value>重命名字段</value>
  </data>
  <data name="DeleteField" xml:space="preserve">
    <value>删除字段</value>
  </data>
  <data name="DeleteColumn" xml:space="preserve">
    <value>删除列</value>
  </data>
  <data name="RemoveNullRows" xml:space="preserve">
    <value>删除 Null 行</value>
  </data>
  <data name="SetColumnNamesFromFirstRow" xml:space="preserve">
    <value>从第一行设置列名</value>
  </data>
  <data name="SetColumnNamesFromExpectedCollection" xml:space="preserve">
    <value>从预期集合设置列名</value>
  </data>
  <data name="FillBlanks" xml:space="preserve">
    <value>填充空白</value>
  </data>
  <data name="Removedotsfromheaders" xml:space="preserve">
    <value>从标题中删除点</value>
  </data>
  <data name="RemoveEmptyRows" xml:space="preserve">
    <value>删除空白行</value>
  </data>
  <data name="Sortsacollectionaccordingtothespecifiedfield" xml:space="preserve">
    <value>根据指定的字段对集合进行排序。</value>
  </data>
  <data name="CreatesacollectionwithaNameandData_3af7d07178256819" xml:space="preserve">
    <value>创建具有“名称和数据类型”字段的集合，然后使用导入集合字段名称和数据类型填充该字段。</value>
  </data>
  <data name="Readsafieldwithagivennameandatthes_be59e9a00bb10769" xml:space="preserve">
    <value>从集合中读取具有给定名称且位于指定行的字段。</value>
  </data>
  <data name="Updatesasinglevalueinacollectionby_6c6c6813a85081d9" xml:space="preserve">
    <value>按给定的字段名称和行索引更新集合中的单个值。</value>
  </data>
  <data name="Testsacollectiontoseewhetheritcont_471912e16fc594d7" xml:space="preserve">
    <value>测试集合以查看它是否包含特定字段。</value>
  </data>
  <data name="Copiestherowsofthegivencollectioni_1695b31d3767fb5a" xml:space="preserve">
    <value>将给定集合的行复制到新集合中。</value>
  </data>
  <data name="Combinestwocollectionsintooneprovi_7864e53a01a44546" xml:space="preserve">
    <value>将两个集合合并为一个，前提是它们具有相同的一组字段</value>
  </data>
  <data name="Reversestheorderoftherowsinthecollection" xml:space="preserve">
    <value>反转集合中行的顺序。</value>
  </data>
  <data name="Renamesthefieldsofacollectionbased_ad63e3fe747dd8e7" xml:space="preserve">
    <value>根据给定名称映射集合的字段重命名集合的字段。</value>
  </data>
  <data name="Searchesfortheexistenceofavalueora_5ca7008bc41f0fc1" xml:space="preserve">
    <value>搜索集合中的指定列是否存在值或正则表达式。这将返回 True，如果提供了正则表达式，则返回在正则表达式中为集合中找到的第一个匹配值定义的组。</value>
  </data>
  <data name="NotethatifneitherExactValuenorRege_48360ea0527a891d" xml:space="preserve">
    <value>注意，如果既未提供“确切值”也未提供“正则表达式”，则始终返回 FALSE/即，未找到。如果找到匹配项，则组将在应用于找到的值时返回正则表达式中指定的所有组。</value>
  </data>
  <data name="Deletesafieldfromacollection" xml:space="preserve">
    <value>从集合中删除字段。</value>
  </data>
  <data name="Deletesrowsinwhichagivenkeyfieldisblank" xml:space="preserve">
    <value>删除给定键字段为空的行。</value>
  </data>
  <data name="Ifyouhaveacollectionwiththecolumnn_8ff8b3c085474d22" xml:space="preserve">
    <value>如果有一个列名都在第一行的集合，这将把列名设置为该行的值，然后删除第一行。
便于使用“获取表格”读取集合</value>
  </data>
  <data name="Firstrowwasactuallytheheaderrowcannowbedeleted" xml:space="preserve">
    <value>第一行实际上是标题行，现在可以删除</value>
  </data>
  <data name="Renamesthefieldsofacollectiontotho_95d79582a0c0d878" xml:space="preserve">
    <value>将集合的字段重命名为包含预期字段名称的集合的字段。</value>
  </data>
  <data name="Fillsacollectionthathasemptyvalueswithemptytext" xml:space="preserve">
    <value>使用空文本填充具有空值的集合。</value>
  </data>
  <data name="cantloopthroughthecorecustomerdeta_e07f93dd74c74e13" xml:space="preserve">
    <value>由于某些行是 NULL，因此无法遍历核心客户详细信息表格集合。</value>
  </data>
  <data name="Collectionswithdotsinthefieldnames_05900f2a4671eb70" xml:space="preserve">
    <value>字段名称中带有点的集合无法正确编制索引，因此此函数会重命名标题，以使字段不包含点。</value>
  </data>
  <data name="Appendsafieldtoacollectionandallow_91d5e7268f4e84e5" xml:space="preserve">
    <value>将字段附加到集合，并允许您为字段提供文本默认值。</value>
  </data>
  <data name="Appendsafieldtoacollectionandallow_123bb1093acb39c4" xml:space="preserve">
    <value>将字段附加到集合，并允许您为字段提供默认数字值。</value>
  </data>
  <data name="Renamesafieldwithinacollection" xml:space="preserve">
    <value>重命名集合中的字段。</value>
  </data>
  <data name="Mergestwocollectionswithdifferents_239044cefd4afde3" xml:space="preserve">
    <value>合并两个具有不同结构（且两个集合中的字段名称具有唯一性）的集合，并形成具有两个结构和关联数据值的组合的单个集合。</value>
  </data>
  <data name="Splitsacollectionintotwocolllectio_abec17bffa43e973" xml:space="preserve">
    <value>将集合拆分为两个包含由模板定义的字段的集合。</value>
  </data>
  <data name="Filtersacollectionusingthegivenquery" xml:space="preserve">
    <value>使用给定查询筛选集合。</value>
  </data>
  <data name="Removesemptyrowsfromacollection" xml:space="preserve">
    <value>从集合中删除空行。</value>
  </data>
  <data name="Createsanewcollectionwiththefields_7df1b2511881243d" xml:space="preserve">
    <value>使用“名称”和“值”字段创建新集合，并为原始集合中的每一行创建用于每个列的条目。</value>
  </data>
  <data name="Findsoutwhetherthecollectioncontatinsagivenfield" xml:space="preserve">
    <value>查找集合是否包含给定字段。</value>
  </data>
  <data name="BPAObjectUtilityDateandTimeManipulation" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 日期和时间操作</value>
  </data>
  <data name="UtilityDateandTimeManipulation" xml:space="preserve">
    <value>实用程序 - 日期和时间操作</value>
  </data>
  <data name="Utilityfunctionsformanipulatingdatesandtimes" xml:space="preserve">
    <value>用于操作日期和时间的实用程序函数。</value>
  </data>
  <data name="FormatDate" xml:space="preserve">
    <value>格式化日期</value>
  </data>
  <data name="DateAdd" xml:space="preserve">
    <value>DateAdd</value>
  </data>
  <data name="GetTimeofDay" xml:space="preserve">
    <value>获取当日时间</value>
  </data>
  <data name="GetLastWorkingDay" xml:space="preserve">
    <value>获取上一个工作日</value>
  </data>
  <data name="GetMaximumTimeSpan" xml:space="preserve">
    <value>获取最大时间间隔</value>
  </data>
  <data name="UTCToLocal" xml:space="preserve">
    <value>UTC 到本地</value>
  </data>
  <data name="LocalToUTC" xml:space="preserve">
    <value>本地到 UTC</value>
  </data>
  <data name="GetTimeZones" xml:space="preserve">
    <value>获取时区</value>
  </data>
  <data name="Formatsadateaccordingtothegivenformatstring" xml:space="preserve">
    <value>根据给定的格式字符串格式化日期。</value>
  </data>
  <data name="Addsaspecifiednumberofhoursminutes_a03307a450c22ec9" xml:space="preserve">
    <value>向给定日期添加指定的小时、分钟或秒数。</value>
  </data>
  <data name="Getsthecurrenttimeofdayasatimespan_4f188b2f301541ae" xml:space="preserve">
    <value>获取操作系统报告的当日当前时间（时间间隔）。

使用 UTC - 如果为 True，则当前时间将以 UTC 表示。否则，它以操作系统中所配置的本地时间表示。这将包括夏令时调整。</value>
  </data>
  <data name="Getsthelastweekdayofthegivenmontha_44e3665961adccdd" xml:space="preserve">
    <value>获取给定月份和年份的最后一个工作日。如果没有给出月份/年份，则使用当前月份和年份。如果给出任一参数，则必须给出两者。
返回的值是给定月份中最后一个工作日的日期（即月中的日期）。返回值 -1 表示错误 - 已给出月份或年份，但没有给出两者。</value>
  </data>
  <data name="Getsthelastworkingdayofthegivenmon_af38503117c41fd8" xml:space="preserve">
    <value>获取给定月份/年份的最后一个工作日。
虽然有一天可能会支持银行假日，但目前这等同于获取给定月份和年份的最后*一周*。</value>
  </data>
  <data name="Getsthemaximumtimespanfromacollect_ff097b4731b186e6" xml:space="preserve">
    <value>从时间间隔值集合中获取最大时间间隔</value>
  </data>
  <data name="ConvertaUTCdatetimetoalocaldatetim_728dc1866fb8ddc0" xml:space="preserve">
    <value>将 UTC 日期时间转换为本地日期时间。除非指定了时区 ID 输入，否则这将默认为当前系统的本地时区。您可以通过运行“获取时区”操作来获取当前系统的可用时区 ID 值的集合。</value>
  </data>
  <data name="ConvertalocaldatetimetoaUTCdatetim_ce7db71cf3de745c" xml:space="preserve">
    <value>将本地日期时间转换为 UTC 日期时间。除非指定了时区 ID 输入，否则本地日期时间将默认为当前系统的本地时区。您可以通过运行“获取时区”操作来获取当前系统的可用时区 ID 值的集合。</value>
  </data>
  <data name="Returnsacollectionofallthetimezone_188760d235575ec7" xml:space="preserve">
    <value>返回本地系统上可用的所有时区 ID 的集合。这些值可用于“UTC 到本地”和“本地到 UTC”操作中的时区 ID 输入。</value>
  </data>
  <data name="BPAObjectUtilityEncryption" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 加密</value>
  </data>
  <data name="UtilityEncryption" xml:space="preserve">
    <value>实用程序 - 加密</value>
  </data>
  <data name="Providesencryptionanddecryptionfac_434290b1fea11446" xml:space="preserve">
    <value>提供加密和解密设施。使用 BPServer 接口生成用于这些操作的密钥。</value>
  </data>
  <data name="Encrypt" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="Decrypt" xml:space="preserve">
    <value>解密</value>
  </data>
  <data name="Encryptsomedata" xml:space="preserve">
    <value>加密一些数据。</value>
  </data>
  <data name="Decryptsomedata" xml:space="preserve">
    <value>解密一些数据。</value>
  </data>
  <data name="BPAObjectUtilityEnvironment" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 环境</value>
  </data>
  <data name="UtilityEnvironment" xml:space="preserve">
    <value>实用程序 - 环境</value>
  </data>
  <data name="Utilitiesforinteractingwiththeenvi_a7b9822ce97e3cc4" xml:space="preserve">
    <value>用于与环境交互的实用程序 - 读取屏幕分辨率，确定操作系统类型等。</value>
  </data>
  <data name="FontSmoothingEnabled" xml:space="preserve">
    <value>字体平滑已启用</value>
  </data>
  <data name="GetClipboard" xml:space="preserve">
    <value>获取剪贴板</value>
  </data>
  <data name="SetClipboard" xml:space="preserve">
    <value>设置剪贴板</value>
  </data>
  <data name="GetScreenResolution" xml:space="preserve">
    <value>获取屏幕分辨率</value>
  </data>
  <data name="StartProcessReadStderrandStdout" xml:space="preserve">
    <value>启动进程读取 Stderr 和 Stdout</value>
  </data>
  <data name="KillProcess" xml:space="preserve">
    <value>终止进程</value>
  </data>
  <data name="ReadMemoryStats" xml:space="preserve">
    <value>读取内存统计信息</value>
  </data>
  <data name="ReadProcessWorkingSet" xml:space="preserve">
    <value>读取进程工作集</value>
  </data>
  <data name="StartProcess" xml:space="preserve">
    <value>启动进程</value>
  </data>
  <data name="RunProcessUntilEnded" xml:space="preserve">
    <value>运行进程至结束</value>
  </data>
  <data name="WaitforProcess" xml:space="preserve">
    <value>等待进程</value>
  </data>
  <data name="WaitforProcessWindow" xml:space="preserve">
    <value>等待进程窗口</value>
  </data>
  <data name="GetUserName" xml:space="preserve">
    <value>获取用户名</value>
  </data>
  <data name="GetMachineName" xml:space="preserve">
    <value>获取计算机名称</value>
  </data>
  <data name="Getstheresolutionofthescreeninpixe_02a20b188dc7b40f" xml:space="preserve">
    <value>获取当前环境的屏幕分辨率（以像素为单位）。</value>
  </data>
  <data name="Forcekillsallprocesseswithagivenname" xml:space="preserve">
    <value>强制终止具有给定名称的所有进程。</value>
  </data>
  <data name="Getmemorystatisticsforagivensetofp_21f7a2dfd08a074a" xml:space="preserve">
    <value>获取给定进程集的内存统计信息，包括工作集和虚拟内存大小。</value>
  </data>
  <data name="Getsthesizeoftheworkingsetforthegivenprocess" xml:space="preserve">
    <value>获取给定进程的工作集的大小。</value>
  </data>
  <data name="Usedtoreturnthetotalmemoryusedbyth_ec850a83b30e26a6" xml:space="preserve">
    <value>使用 += 返回我们目标应用程序使用的总内存 - 防止其运行多次。</value>
  </data>
  <data name="Getsthefontsmoothingsettingforthec_15d27bf08616b220" xml:space="preserve">
    <value>获取当前环境的字体平滑设置。</value>
  </data>
  <data name="Startsaprocessdirectlywiththegivenarguments" xml:space="preserve">
    <value>直接使用给定的参数启动进程。</value>
  </data>
  <data name="Runaprocessandwaituntilcompletionortimeout" xml:space="preserve">
    <value>运行一个进程并等待完成或超时。</value>
  </data>
  <data name="Attachtoaprocessandwaitforittocomplete" xml:space="preserve">
    <value>附加到进程并等待它完成。</value>
  </data>
  <data name="Waitsforaprocesswithagivennamehasd_f524ee9b0a555c61" xml:space="preserve">
    <value>等待具有给定名称的进程显示具有给定标题的窗口。</value>
  </data>
  <data name="Getsthecontentsoftheclipboard" xml:space="preserve">
    <value>获取剪贴板的内容。</value>
  </data>
  <data name="Setsthecontentsoftheclipboard" xml:space="preserve">
    <value>设置剪贴板的内容。</value>
  </data>
  <data name="Clearstheclipboardcontents" xml:space="preserve">
    <value>清除剪贴板内容。</value>
  </data>
  <data name="Startsaprocessdirectlywiththegiven_4e2417fd6612f5ab" xml:space="preserve">
    <value>直接使用给定的参数启动进程，读取标准输出和标准错误，并将它们输出到独立数据项中。</value>
  </data>
  <data name="BPAObjectUtilityFileManagement" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 文件管理</value>
  </data>
  <data name="UtilityFileManagement" xml:space="preserve">
    <value>实用程序 - 文件管理</value>
  </data>
  <data name="UtilitymethodsforinteractingwiththefileSystem" xml:space="preserve">
    <value>用于与文件系统交互的实用程序方法。</value>
  </data>
  <data name="DownloadFile" xml:space="preserve">
    <value>下载文件</value>
  </data>
  <data name="GetFiles" xml:space="preserve">
    <value>获取文件</value>
  </data>
  <data name="GetFolders" xml:space="preserve">
    <value>获取文件夹</value>
  </data>
  <data name="FileExists" xml:space="preserve">
    <value>文件已存在</value>
  </data>
  <data name="DirectoryExists" xml:space="preserve">
    <value>目录已存在</value>
  </data>
  <data name="CreateDirectory" xml:space="preserve">
    <value>创建目录</value>
  </data>
  <data name="DeleteDirectory" xml:space="preserve">
    <value>删除目录</value>
  </data>
  <data name="SubDirectoryExists" xml:space="preserve">
    <value>子目录已存在</value>
  </data>
  <data name="SplitPath" xml:space="preserve">
    <value>拆分路径</value>
  </data>
  <data name="CombinePath" xml:space="preserve">
    <value>合并路径</value>
  </data>
  <data name="DeleteFiles" xml:space="preserve">
    <value>删除文件</value>
  </data>
  <data name="DeleteFile" xml:space="preserve">
    <value>删除文件</value>
  </data>
  <data name="CopyFile" xml:space="preserve">
    <value>复制文件</value>
  </data>
  <data name="MoveFile" xml:space="preserve">
    <value>移动文件</value>
  </data>
  <data name="GetFileSize" xml:space="preserve">
    <value>获取文件大小</value>
  </data>
  <data name="AppendtoTextFile" xml:space="preserve">
    <value>附加到文本文件</value>
  </data>
  <data name="ReadAllTextfromFile" xml:space="preserve">
    <value>从文件中读取所有文本</value>
  </data>
  <data name="ReadLinesFromFile" xml:space="preserve">
    <value>从文件中读取行</value>
  </data>
  <data name="WriteTextFile" xml:space="preserve">
    <value>写入文本文件</value>
  </data>
  <data name="WriteBinaryData" xml:space="preserve">
    <value>写入二进制数据</value>
  </data>
  <data name="GetCSVTextAsCollection" xml:space="preserve">
    <value>获取 CSV 文本集合</value>
  </data>
  <data name="GetSpecialFolderPath" xml:space="preserve">
    <value>获取特殊文件夹路径</value>
  </data>
  <data name="Getsallfilesinthespecifiedfolderma_ac8a804caf505508" xml:space="preserve">
    <value>获取指定文件夹中与提供的文件类型模式字符串匹配的所有文件。

模式 - 以逗号分隔的文件模式列表，标识所查找文件的类型。例如使用“*.jpg, *.png”可获取所有 jpg 和 png 文件。模式“*.*”将返回所有文件。是否在每个模式之间留出空格并不重要。如果文件模式中需要逗号，则应使用反斜杠字符将其转义出来，例如：“*\,November.xlsx”模式将返回以“,November.xlsx”结尾的所有文件</value>
  </data>
  <data name="Deletesallfilesinthespecifiedfolde_4c015b32b52a6b8b" xml:space="preserve">
    <value>删除指定文件夹中与提供的文件扩展名模式匹配的所有文件。</value>
  </data>
  <data name="Appendssometexttothespecifiedfile" xml:space="preserve">
    <value>将一些文本附加到指定的文件。</value>
  </data>
  <data name="Readstheentirecontentsofafileastext" xml:space="preserve">
    <value>以文本形式读取文件的全部内容。</value>
  </data>
  <data name="WritestexttoafileAnyexistingtextin_79c0eb7d0248f3bf" xml:space="preserve">
    <value>将文本写入文件。文件中的任何现有文本（如果存在）都将被替换。</value>
  </data>
  <data name="Determineswhetherthespecifiedfilee_bf53cca49159af4a" xml:space="preserve">
    <value>确定指定的文件是否存在。必须指定完整路径。</value>
  </data>
  <data name="Copiesafiletothenameddestination" xml:space="preserve">
    <value>将文件复制到指定的目标。</value>
  </data>
  <data name="Getsthesizeofthespecifiedfile" xml:space="preserve">
    <value>获取指定文件的大小。</value>
  </data>
  <data name="Deletesasinglefilefromthefilesystem" xml:space="preserve">
    <value>从文件系统中删除单个文件。</value>
  </data>
  <data name="Getsacollectionofallsubfoldersinth_4acc5d8928b9d79f" xml:space="preserve">
    <value>获取指定文件系统文件夹中所有子文件夹的集合。</value>
  </data>
  <data name="Movesthespecifiedfiletoanewlocation" xml:space="preserve">
    <value>将指定的文件移动到新位置。</value>
  </data>
  <data name="Splitsafilepathintoitscomponentpar_fb57441b927fa08f" xml:space="preserve">
    <value>将文件路径拆分为其组成部分 - 文件名和文件夹路径。从目录部分中省略尾部反斜杠。</value>
  </data>
  <data name="Determineswhetherthespecifieddirec_d8235eb6149ecdbc" xml:space="preserve">
    <value>确定指定的目录是否存在。必须指定完整路径。</value>
  </data>
  <data name="WritesbinarydatatoafileAnyexisting_52893d4fdda12f5f" xml:space="preserve">
    <value>将二进制数据写入文件。文件中的任何现有数据（如果存在）都将被替换。</value>
  </data>
  <data name="Takesafileandfolderandcombinesthemintoafullpath" xml:space="preserve">
    <value>获取文件和文件夹并将它们合并成完整路径。</value>
  </data>
  <data name="Createsadirectoryunderthegivenpath" xml:space="preserve">
    <value>在给定路径下创建目录。</value>
  </data>
  <data name="DeletesadirectoryandifRecursiveisT_cd16ef4bfc98d9bb" xml:space="preserve">
    <value>删除目录，如果“递归”为 True，则删除所有子目录（如果存在）</value>
  </data>
  <data name="Checksifadirectorycontainssubdirectories" xml:space="preserve">
    <value>检查目录是否包含子目录</value>
  </data>
  <data name="Turnsacommaseperatedvaluesfileintoacollection" xml:space="preserve">
    <value>将逗号分隔值文件转换为集合</value>
  </data>
  <data name="Getsthepathofaspecialfolder" xml:space="preserve">
    <value>获取特殊文件夹的路径。</value>
  </data>
  <data name="DownloadsafilefromawebURLandsavesitinafolderondisk" xml:space="preserve">
    <value>从 Web URL 下载文件并将其保存在磁盘上的文件夹中。</value>
  </data>
  <data name="Readsarangeoflinesfomatextfile" xml:space="preserve">
    <value>从文本文件中读取一系列行</value>
  </data>
  <data name="BPAObjectUtilityForegroundLocker" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 前台保险箱</value>
  </data>
  <data name="UtilityForegroundLocker" xml:space="preserve">
    <value>实用程序 - 前台保险箱</value>
  </data>
  <data name="Controlsaccesstoforegroundoperatio_d884b46e0bdd7586" xml:space="preserve">
    <value>通过提供锁定机制来控制对前台操作的访问</value>
  </data>
  <data name="LockForeground" xml:space="preserve">
    <value>锁定前台</value>
  </data>
  <data name="ReleaseForegroundLock" xml:space="preserve">
    <value>释放前台锁</value>
  </data>
  <data name="OVERVIEWThisobjectisdesignedtocont_1f8989b1603b8acd" xml:space="preserve">
    <value>- 概述 - 

此对象旨在通过需要全局鼠标点击等两个流程来控制对“前台”操作的访问。

它通过在当前计算机上自动创建队列项密钥来工作。因此，在运行时，每个资源 PC 将有一个队列项。

为了防止两个流程在同一台计算机上创建重复锁的可能竞争条件，应获取主锁以便有权创建新的队列项。所有计算机共享此主锁。</value>
  </data>
  <data name="SETUPImporttheLockingbusinessobjec_e256a11d5ed365c0" xml:space="preserve">
    <value>- 设置 - 

导入此流程使用的锁定业务对象。

设置该业务对象期望的队列。

使用此业务对象创建唯一的“前台主锁”密钥 - 请参阅此对象中的相应页面。

通过根据您的业务对象对其进行准备来使用此业务对象。通过始终释放您的页面获得的任何前台锁来遵守“try-finally”方法。

只要您正确实施锁定，您的业务对象就可以标记为“后台”。</value>
  </data>
  <data name="PrivatepageforsetupRunonceonlyonea_fa26c40382a8b56e" xml:space="preserve">
    <value>设置专用页

仅在每个数据库上执行一次 - 不需要对每台计算机运行。进一步的每计算机密钥是动态自动创建的。</value>
  </data>
  <data name="Bug5029meansthatGetResourceName__doesnotwork" xml:space="preserve">
    <value>错误 5029 意味着 GetResourceName() 不起作用</value>
  </data>
  <data name="BPAObjectUtilityGeneral" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 常规</value>
  </data>
  <data name="UtilityGeneral" xml:space="preserve">
    <value>实用程序 - 常规</value>
  </data>
  <data name="Generalutilityfunctionswhichdontfi_c8f4d5215efb6b67" xml:space="preserve">
    <value>常规实用程序函数不适合特定类别</value>
  </data>
  <data name="Sleep" xml:space="preserve">
    <value>睡眠</value>
  </data>
  <data name="ProcessExists" xml:space="preserve">
    <value>进程已存在</value>
  </data>
  <data name="WindowExists" xml:space="preserve">
    <value>窗口已存在</value>
  </data>
  <data name="Checkstoseeifaprocesswiththegivennameexists" xml:space="preserve">
    <value>检查是否存在具有给定名称的进程。</value>
  </data>
  <data name="Checkstoseeifawindowwiththegiventitleexists" xml:space="preserve">
    <value>检查是否存在具有给定标题的窗口。</value>
  </data>
  <data name="Pausesforagiventime_inseconds_" xml:space="preserve">
    <value>暂停一段给定的时间（以秒为单位）。</value>
  </data>
  <data name="BPAObjectUtilityHTTP" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - HTTP</value>
  </data>
  <data name="UtilityHTTP" xml:space="preserve">
    <value>实用程序 - HTTP</value>
  </data>
  <data name="CommunicateswithwebservicesusingtheHTTPprotocol" xml:space="preserve">
    <value>使用 HTTP 协议与 Web 服务进行通信。</value>
  </data>
  <data name="Post" xml:space="preserve">
    <value>发布</value>
  </data>
  <data name="PostJSON" xml:space="preserve">
    <value>发布 JSON</value>
  </data>
  <data name="HTTPRequest" xml:space="preserve">
    <value>HTTP 请求</value>
  </data>
  <data name="LoadCertificate" xml:space="preserve">
    <value>加载证书</value>
  </data>
  <data name="URLEncode" xml:space="preserve">
    <value>URL 编码</value>
  </data>
  <data name="SendsamessagetoHTTPendpointusingth_0acfd95d19958719" xml:space="preserve">
    <value>使用 POST 方法向 HTTP 端点发送消息。使用“application/x-www-form-urlencoded”对集合数据进行编码</value>
  </data>
  <data name="SendsamessagetoHTTPendpointusingth_ca87176dd1430d96" xml:space="preserve">
    <value>使用 POST 方法向 HTTP 端点发送消息。该操作需要一个原始字符串并将内容类型设置为“application/json”</value>
  </data>
  <data name="SendsamessagetoHTTPendpointusingth_587ed8b97aff84bc" xml:space="preserve">
    <value>使用指定的 HTTP 方法和 content-type 向 HTTP 端点发送消息</value>
  </data>
  <data name="BPAObjectUtilityImageManipulation" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 图像处理</value>
  </data>
  <data name="UtilityImageManipulation" xml:space="preserve">
    <value>实用程序 - 图像处理</value>
  </data>
  <data name="Utilitymethodsforanalysingandmanipulatingimages" xml:space="preserve">
    <value>用于分析和处理图像的实用程序。</value>
  </data>
  <data name="ImageisWhite" xml:space="preserve">
    <value>图像是白色</value>
  </data>
  <data name="ImageContainsColour" xml:space="preserve">
    <value>图像包含颜色</value>
  </data>
  <data name="ImageIsUniformColour" xml:space="preserve">
    <value>图像是均匀颜色</value>
  </data>
  <data name="GetSubImagePosition" xml:space="preserve">
    <value>获取子图像位置</value>
  </data>
  <data name="FindFirstPixelFromLeft" xml:space="preserve">
    <value>从左侧查找第一个像素</value>
  </data>
  <data name="FindFirstPixelFromBottom" xml:space="preserve">
    <value>从底部查找第一个像素</value>
  </data>
  <data name="Determineswhetherthesuppliedimageisallwhite" xml:space="preserve">
    <value>确定提供的图像是否全白</value>
  </data>
  <data name="Determineswhetherthespecifiedcolou_348bfe5268c4f8c8" xml:space="preserve">
    <value>确定图像中是否包含指定的颜色。</value>
  </data>
  <data name="Findswhetherthemainimagecontainsas_cec2e5f255afd473" xml:space="preserve">
    <value>查找主图像是否包含子图像，如果找到，则给出子图像的 X、Y 坐标。</value>
  </data>
  <data name="Findstheindexofthefirstcolumnofpix_5fa564cb3f8994f7" xml:space="preserve">
    <value>查找左侧第一列像素的索引，其中包含指定颜色的像素。</value>
  </data>
  <data name="Findstheindexofthefirstroworcolumn_e7948bfff36234cd" xml:space="preserve">
    <value>查找给定方向的第一行或第一列像素的索引，其中包含指定颜色的像素。</value>
  </data>
  <data name="Findstheindexofthefirstrowofpixels_a3c6dd22548bea85" xml:space="preserve">
    <value>从底部查找第一行像素的索引，其中包含指定颜色的像素。</value>
  </data>
  <data name="Determineswhethertheimagecontainsa_351fec3272e58847" xml:space="preserve">
    <value>确定图像是否包含单一颜色</value>
  </data>
  <data name="BPAObjectUtilityJSON" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - JSON</value>
  </data>
  <data name="UtilityJSON" xml:space="preserve">
    <value>实用程序 - JSON</value>
  </data>
  <data name="AnobjectforparsingJSONintoacollect_f8351ee437d21a14" xml:space="preserve">
    <value>将 JSON 解析为集合并将集合转换为 JSON 的对象。</value>
  </data>
  <data name="CollectiontoJSON" xml:space="preserve">
    <value>集合到 JSON</value>
  </data>
  <data name="JSONtoCollection" xml:space="preserve">
    <value>JSON 到集合</value>
  </data>
  <data name="JSONtoCollection_skippingJArray_" xml:space="preserve">
    <value>JSON 到集合（跳过 JArray）</value>
  </data>
  <data name="BPAObjectUtilityLocking" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 锁定</value>
  </data>
  <data name="UtilityLocking" xml:space="preserve">
    <value>实用程序 - 锁定</value>
  </data>
  <data name="Manageslocksonitems" xml:space="preserve">
    <value>管理项的锁定</value>
  </data>
  <data name="SetUpQueueItem" xml:space="preserve">
    <value>设置队列项</value>
  </data>
  <data name="LockItem" xml:space="preserve">
    <value>锁定项</value>
  </data>
  <data name="ReleaseLock" xml:space="preserve">
    <value>释放锁</value>
  </data>
  <data name="BPAObjectUtilityNetwork" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 网络</value>
  </data>
  <data name="UtilityNetwork" xml:space="preserve">
    <value>实用程序 - 网络</value>
  </data>
  <data name="Autilityobjectwithnetworkrelatedactions" xml:space="preserve">
    <value>具有网络相关操作的实用程序对象。</value>
  </data>
  <data name="Ping" xml:space="preserve">
    <value>Ping</value>
  </data>
  <data name="BPAObjectUtilityNumericOperations" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 数字操作</value>
  </data>
  <data name="UtilityNumericOperations" xml:space="preserve">
    <value>实用程序 - 数字操作</value>
  </data>
  <data name="Mathematicalfunctions" xml:space="preserve">
    <value>数学函数</value>
  </data>
  <data name="GetAbsoluteValue" xml:space="preserve">
    <value>获取绝对值</value>
  </data>
  <data name="CalculateRollingAverage_fixeddenominator_" xml:space="preserve">
    <value>计算移动平均值（固定分母）</value>
  </data>
  <data name="CalculateRollingAverage_variabledenominator_" xml:space="preserve">
    <value>计算移动平均值（变量分母）</value>
  </data>
  <data name="Getsthenumericalvalueofanumberwith_6c1cb2d0b92d0ec3" xml:space="preserve">
    <value>获取数字的数值而不考虑其符号。</value>
  </data>
  <data name="Findstherollingaverageofasetofnumb_483b140547e89664" xml:space="preserve">
    <value>在给定固定分母的情况下，查找一组数字的移动平均值。</value>
  </data>
  <data name="Findstherollingaverageofasetofnumb_41d0ba39d02a3e31" xml:space="preserve">
    <value>在给定变量集分母的情况下，查找一组数字的移动平均值。</value>
  </data>
  <data name="BPAObjectUtilityStrings" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - 字符串</value>
  </data>
  <data name="UtilityStrings" xml:space="preserve">
    <value>实用程序 - 字符串</value>
  </data>
  <data name="Utilityfunctionsformanipulatingtext" xml:space="preserve">
    <value>用于处理文本的实用程序函数。</value>
  </data>
  <data name="RemoveNonwordCharacters" xml:space="preserve">
    <value>删除非单词字符</value>
  </data>
  <data name="GenerateNewGUID" xml:space="preserve">
    <value>生成新的 GUID</value>
  </data>
  <data name="DeleteCharacters" xml:space="preserve">
    <value>删除字符</value>
  </data>
  <data name="SplitLinesbyLength" xml:space="preserve">
    <value>按长度拆分行</value>
  </data>
  <data name="SplitLines" xml:space="preserve">
    <value>拆分行</value>
  </data>
  <data name="SplitText" xml:space="preserve">
    <value>拆分文本</value>
  </data>
  <data name="JoinText" xml:space="preserve">
    <value>联接文本</value>
  </data>
  <data name="JoinLines" xml:space="preserve">
    <value>联接行</value>
  </data>
  <data name="GetNewlineCharacter" xml:space="preserve">
    <value>获取换行符</value>
  </data>
  <data name="ExtractRegexValues" xml:space="preserve">
    <value>提取正则表达式值</value>
  </data>
  <data name="TestRegexMatch" xml:space="preserve">
    <value>测试正则表达式匹配</value>
  </data>
  <data name="FormatNumber" xml:space="preserve">
    <value>格式化数字</value>
  </data>
  <data name="PadLeft" xml:space="preserve">
    <value>PadLeft</value>
  </data>
  <data name="GetXMLElements" xml:space="preserve">
    <value>获取 XML 元素</value>
  </data>
  <data name="GetXMLAttribute" xml:space="preserve">
    <value>获取 XML 属性</value>
  </data>
  <data name="GetCollectionasCSV" xml:space="preserve">
    <value>获取 CSV 集合</value>
  </data>
  <data name="GetCSVAsCollection" xml:space="preserve">
    <value>获取集合 CSV</value>
  </data>
  <data name="EscapeSendkeysString" xml:space="preserve">
    <value>转义 Sendkeys 字符串</value>
  </data>
  <data name="CompareFontText" xml:space="preserve">
    <value>比较字体文字</value>
  </data>
  <data name="InStr" xml:space="preserve">
    <value>InStr</value>
  </data>
  <data name="InStrRev" xml:space="preserve">
    <value>InStrRev</value>
  </data>
  <data name="Generatesanewgloballyuniqueidentifierastext" xml:space="preserve">
    <value>生成新的全局唯一标识符文本。</value>
  </data>
  <data name="Trimsnonwordcharactersfromthebegin_dc790436cf3fcb33" xml:space="preserve">
    <value>修剪文本开头和结尾的非单词字符。非单词字符是指不在 a-z A-Z _ 和 0-9 范围内的任何字符</value>
  </data>
  <data name="Splitsmultiplelinetextintoacollect_f030339ab73d18b0" xml:space="preserve">
    <value>将多行文本拆分为集合文本值，每行一行。</value>
  </data>
  <data name="Splitstextwithagivendelimiterintoa_28610156eaa13454" xml:space="preserve">
    <value>将具有给定分隔符的文本拆分为文本值集合。</value>
  </data>
  <data name="Joinsvaluesfromacollectionintoasin_80442fea6bd28783" xml:space="preserve">
    <value>使用值之间的给定分隔符将集合中的值联接到单行文本中。</value>
  </data>
  <data name="Joinsvaluesfromacollectionintomultilinetext" xml:space="preserve">
    <value>将集合中的值联接到多行文本。</value>
  </data>
  <data name="Formatsanumberintocommadelimitedtr_0be20511fcc18aae" xml:space="preserve">
    <value>根据需要将数字格式化为逗号分隔的三元组。例如 123456.789 变为 123,456.789</value>
  </data>
  <data name="Ensuresthatastring_usuallyanumber__fa0ffdd1d0613881" xml:space="preserve">
    <value>通过在左侧填充特殊字符，确保字符串（通常是数字）具有固定宽度。</value>
  </data>
  <data name="Getsacollectionofxmlelementswithag_c1504303d0285145" xml:space="preserve">
    <value>从 xml 文档中获取具有给定名称的 xml 元素的集合。</value>
  </data>
  <data name="Getsthevalueofanxmlattributewithag_9204405bba092621" xml:space="preserve">
    <value>从 xml 文档片段中获取具有给定名称的 xml 属性的值。</value>
  </data>
  <data name="Turnsacollectionintoalistofcommaseperatedvalues" xml:space="preserve">
    <value>将集合转换为逗号分隔值列表。</value>
  </data>
  <data name="Splitstextintolinesofagivenlengthu_75f3a8c4dc336f9c" xml:space="preserve">
    <value>使用单词边界将文本拆分为给定长度的行以查找拆分点。</value>
  </data>
  <data name="Turnsalistofcommaseperatedvaluesintoacollection" xml:space="preserve">
    <value>将逗号分隔值列表转换为集合。</value>
  </data>
  <data name="Thecolumnsmustappearinthesameorder_8e85471bae580eb9" xml:space="preserve">
    <value>列的显示顺序必须与其在 CSV 文件中的显示顺序相同</value>
  </data>
  <data name="Getsthetextrepresentingthetwonewli_4461f54130109a7b" xml:space="preserve">
    <value>获取表示在 windows 下使用的两个换行符的文本（回车后跟换行）</value>
  </data>
  <data name="Removesthegivencharactersfromthetext" xml:space="preserve">
    <value>从文本中删除给定的字符。</value>
  </data>
  <data name="Escapescharacterstobesentviathesen_313955783a707fda" xml:space="preserve">
    <value>转义通过 sendkeys 方法发送的字符，以确保按字面意思解释所有字符。如果不转义，某些字符（例如 %）带有特殊含义而不是其字面值。</value>
  </data>
  <data name="ComparestwoitemsoftextreadusingFon_b9f92eb8c0cfc4f8" xml:space="preserve">
    <value>比较使用字体识别读取的两个文本项是否相等，其中“相等”表示两个文本样本在删除冲突的字体字符后相同。</value>
  </data>
  <data name="n10020056to99400600" xml:space="preserve">
    <value>100 - 200
56 至 99
400 - 600</value>
  </data>
  <data name="Teststoseeifonepeiceoftextcontains_9ef24e7082e99e03" xml:space="preserve">
    <value>测试以查看一段文本是否包含另一段子文本。</value>
  </data>
  <data name="n1text0binary" xml:space="preserve">
    <value>1 = 文本，0 = 二进制</value>
  </data>
  <data name="Teststoseeifonepeiceoftextcontains_23193ead14a51d13" xml:space="preserve">
    <value>测试以查看一段文本是否包含另一段子文本但反向匹配。</value>
  </data>
  <data name="CheckifagivenTextvaluematchesaregularexpression" xml:space="preserve">
    <value>检查给定的文本值是否与正则表达式匹配。</value>
  </data>
  <data name="BPAObjectWebservicesOAuth20" xml:space="preserve">
    <value>BPA 对象 - Webservices - OAuth2.0</value>
  </data>
  <data name="WebservicesOAuth20" xml:space="preserve">
    <value>Webservices - OAuth2.0</value>
  </data>
  <data name="BusinessObjectforauthorizationusingOAuth20" xml:space="preserve">
    <value>使用 OAuth2.0 进行授权的业务对象</value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>请求</value>
  </data>
  <data name="Requestatokenandthenuseitimmediate_2327d79e58312906" xml:space="preserve">
    <value>请求令牌，然后立即使用它来请求资源</value>
  </data>
  <data name="BPAObjectWebservicesREST" xml:space="preserve">
    <value>BPA 对象 - Webservices - REST</value>
  </data>
  <data name="WebservicesREST" xml:space="preserve">
    <value>Webservices - REST</value>
  </data>
  <data name="ConnectstoRESTbasedwebserviceAPIs" xml:space="preserve">
    <value>连接到基于 REST 的 Webservices API</value>
  </data>
  <data name="Get" xml:space="preserve">
    <value>获取</value>
  </data>
  <data name="Put" xml:space="preserve">
    <value>Put</value>
  </data>
  <data name="SetupOAuth" xml:space="preserve">
    <value>设置 OAuth</value>
  </data>
  <data name="ActiontogetaresourceviatheRESTAPIusingtheGETmethod" xml:space="preserve">
    <value>使用 GET 方法通过 REST API 获取资源的操作。</value>
  </data>
  <data name="ActiontocreatearesourceviatheRESTA_d40ca39521f3e2a3" xml:space="preserve">
    <value>使用 POST 方法通过 REST API 创建资源的操作。</value>
  </data>
  <data name="ActiontoupdatearesourceviatheRESTA_7e8a97bd870e2b5a" xml:space="preserve">
    <value>使用 PUT 方法通过 REST API 更新资源的操作。</value>
  </data>
  <data name="ActiontodeletearesourceviatheRESTA_2314e437838c389b" xml:space="preserve">
    <value>使用 DELETE 方法通过 REST API 删除资源的操作。</value>
  </data>
  <data name="SetstheRESTVBOupforusewithOAuth20" xml:space="preserve">
    <value>将 REST VBO 设置为与 OAuth2.0 一起使用 </value>
  </data>
  <data name="BPAObjectGoogleSheets" xml:space="preserve">
    <value>BPA 对象 - Google Sheets</value>
  </data>
  <data name="GoogleSheets" xml:space="preserve">
    <value>Google Sheets</value>
  </data>
  <data name="CommonactionstointeractwithGoogleS_203a770751795b5c" xml:space="preserve">
    <value>与 Google Sheets 交互的常见操作。需要 Google API 客户端 ID 和密码来执行操作 - 必须将它们创建为分别叫做“Google Sheets API 客户端 ID”和“Google Sheets API 客户端密码”的环境变量</value>
  </data>
  <data name="GetRangeValues" xml:space="preserve">
    <value>获取范围值</value>
  </data>
  <data name="SetRangeValues" xml:space="preserve">
    <value>设置范围值</value>
  </data>
  <data name="AppendData" xml:space="preserve">
    <value>附加数据</value>
  </data>
  <data name="ClearRange" xml:space="preserve">
    <value>清除范围</value>
  </data>
  <data name="Getsacollectionofvaluesfromarangei_568b8d97d6bae97d" xml:space="preserve">
    <value>从 Google Sheets 文档中的范围获取值集合。</value>
  </data>
  <data name="SetsarangeofvaluesinaGoogleSheetsdocument" xml:space="preserve">
    <value>在 Google Sheets 文档中设置值范围。</value>
  </data>
  <data name="Clearsallvaluesinthegivenrange" xml:space="preserve">
    <value>清除指定范围中的所有值。</value>
  </data>
  <data name="Appendsthegivendatatoatablefoundin_635f8a27a43a1d21" xml:space="preserve">
    <value>将指定数据附加到在工作表中发现的表。通过编程方式根据指定范围发现表，并且在表的末尾添加数据。</value>
  </data>
  <data name="CreatesanewGoogleSheetsdocumentandreturnsitsID" xml:space="preserve">
    <value>创建新的 Google Sheets 文档并返回其 ID。</value>
  </data>
  <data name="Countsthenumberofrowsinaworksheet" xml:space="preserve">
    <value>计算工作表中的行数。</value>
  </data>
  <data name="BPAObjectUtilityWindowsCompressedFile" xml:space="preserve">
    <value>BPA 对象 - 实用程序 - Windows 压缩文件</value>
  </data>
  <data name="UtilityWindowsCompressedFile" xml:space="preserve">
    <value>实用程序 - Windows 压缩文件</value>
  </data>
  <data name="TheVBOutilitytomanageWindowsCompressedfiles" xml:space="preserve">
    <value>用于管理 Windows 压缩文件的 VBO 实用程序</value>
  </data>
  <data name="CreateZipfromFolder" xml:space="preserve">
    <value>从文件夹创建压缩包</value>
  </data>
  <data name="AddFiletoZip" xml:space="preserve">
    <value>将文件添加到压缩包中</value>
  </data>
  <data name="ExtractAllfromZip" xml:space="preserve">
    <value>提取压缩包中的所有内容</value>
  </data>
  <data name="ExtractFilefromZip" xml:space="preserve">
    <value>提取压缩包中的文件</value>
  </data>
  <data name="DeleteFilefromZip" xml:space="preserve">
    <value>删除压缩包中的文件</value>
  </data>
  <data name="GetZipContents" xml:space="preserve">
    <value>获取压缩包内容</value>
  </data>
  <data name="FindFileinZip" xml:space="preserve">
    <value>查找压缩包中的文件</value>
  </data>
  <data name="Createsaziparchivethatcontainsthef_6702bb44ff84f841" xml:space="preserve">
    <value>创建压缩包存档，其中包含指定目录中的文件和目录，并且可以包含基本目录。
存档内将保留文件系统中的目录结构。如果目录为空，则会创建空存档。
如果存档已存在，则会引发异常。如果存档中已存在具有指定名称的条目，则会创建同名的另一个条目。
如果目录中的文件无法添加到存档，则存档将处于不完整且无效的状态，而且该方法会引发异常。</value>
  </data>
  <data name="Thepathtothedirectorytobearchiveds_5f912f3280c7f1b4" xml:space="preserve">
    <value>要存档的目录的路径（作为绝对路径指定）</value>
  </data>
  <data name="Thepathandnameofthearchivetobecrea_6a63539d19146844" xml:space="preserve">
    <value>要创建的存档的路径和名称（作为绝对路径指定）</value>
  </data>
  <data name="Archivesafilebycompressingitandadd_59c5299efd44db8f" xml:space="preserve">
    <value>通过压缩文件并将其添加到压缩包存档来将文件存档。如果存档中已存在具有指定名称的条目，则会创建同名的另一个条目。</value>
  </data>
  <data name="Thepathandnameofthefiletobearchive_6f22217365b6233c" xml:space="preserve">
    <value>要存档的文件的路径和名称（作为绝对路径指定）</value>
  </data>
  <data name="Thepathandnameoftheziparchivetoadd_3d4fabce7e09301b" xml:space="preserve">
    <value>要将文件添加到的压缩包存档的路径和名称（作为绝对路径指定）</value>
  </data>
  <data name="truetoincludethedirectorynamefromS_feb5a426feaa4038" xml:space="preserve">
    <value>-true- 将在存档的根目录包含 [源文件夹名称] 中的目录名称；-false- 将仅包含目录内容。</value>
  </data>
  <data name="Extractsallthefilesinthespecifiedz_deb753770a840ca1" xml:space="preserve">
    <value>将指定压缩包存档中的所有文件提取到文件系统上的目录</value>
  </data>
  <data name="Thepathandnameoftheziparchivetoope_6e079eb4a9b92828" xml:space="preserve">
    <value>要打开的压缩包存档的路径和名称（作为绝对路径指定）</value>
  </data>
  <data name="Thepathtothedirectoryinwhichtoplac_0d20730b387b1729" xml:space="preserve">
    <value>要将提取的文件放入的目录路径（作为绝对路径指定）</value>
  </data>
  <data name="Readsthedetailsoftheentriesofazipf_d751d9e56ab0aabc" xml:space="preserve">
    <value>将压缩文件的条目详细信息读入到集合</value>
  </data>
  <data name="Thelistoffilescontainedintheziparchive" xml:space="preserve">
    <value>压缩包存档中包含的文件列表</value>
  </data>
  <data name="Extractsanentryintheziparchivetoaf_ee53906cbb3e7307" xml:space="preserve">
    <value>将压缩包存档中的条目提取到文件，并且可以覆盖同名的现有文件</value>
  </data>
  <data name="Thepathandnameofthefiletocreatefro_5a8c074c94c17ff1" xml:space="preserve">
    <value>要从条目内容创建的文件的路径和名称（绝对路径）</value>
  </data>
  <data name="Thefilename_anditspathwithinthezip_c7858c45c46809d5" xml:space="preserve">
    <value>要提取的文件名及其在压缩包存档中的路径（如有必要）</value>
  </data>
  <data name="Truetooverwriteanexistingfilethath_53faec9c38475a7e" xml:space="preserve">
    <value>设置为 True 可覆盖与目标文件同名的现有文件，否则设置为 False</value>
  </data>
  <data name="Deletestheentryfromtheziparchive" xml:space="preserve">
    <value>从压缩包存档中删除此条目</value>
  </data>
  <data name="Thefilename_anditspathwithinthezip_7628e9a176d54461" xml:space="preserve">
    <value>要删除的文件名及其在压缩包存档中的路径（如有必要）</value>
  </data>
  <data name="CheckifafileexistsintheZipArchive" xml:space="preserve">
    <value>检查文件是否在压缩包存档中存在</value>
  </data>
  <data name="TrueifthefileexistsintheZipArchive_976d478d6c32e24f" xml:space="preserve">
    <value>如果文件在压缩包存档文件中存在，则为 True，否则为 False</value>
  </data>
  <data name="Thepathandnameoftheaddedfileasitwi_ccbf38b602d42bd5" xml:space="preserve">
    <value>添加的文件（将存储在压缩文件中）的路径和名称。可以指定相对或绝对路径。如果未指定，则文件将存储在压缩包存档文件的根文件夹中，且具有其原始名称。</value>
  </data>
  <data name="Getsthecurrentworksheetintoacollec_291f17b957b79a7a" xml:space="preserve">
    <value>将当前工作表获取到集合中。这将读取工作表并将内容存储到集合中。偏移函数允许指定起始单元格。</value>
  </data>
  <data name="Getsthenameoftheworksheets" xml:space="preserve">
    <value>获取工作表的名称。</value>
  </data>
  <data name="Checksifaworksheetexistsinaworkbook" xml:space="preserve">
    <value>检查工作表在工作簿中是否存在。</value>
  </data>
  <data name="Movesthespecifiedworksheettoanotherworkbook" xml:space="preserve">
    <value>将指定工作表移到另一工作簿。
</value>
  </data>
  <data name="Selectscellsofaworksheet" xml:space="preserve">
    <value>选择工作表的单元格。</value>
  </data>
  <data name="Deletecellsfromtheworkbook" xml:space="preserve">
    <value>从工作簿中删除单元格。</value>
  </data>
  <data name="Copycellsfromtheworkbook" xml:space="preserve">
    <value>从工作簿中复制单元格。</value>
  </data>
  <data name="Pastetextintocellsofaworkbook" xml:space="preserve">
    <value>将文本粘贴到工作簿的单元格。</value>
  </data>
  <data name="Writestexttoclipboardsothatitcanbecopied" xml:space="preserve">
    <value>将文本写入剪贴板，以便能复制文本。</value>
  </data>
  <data name="Cutcellsfromtheworkbook" xml:space="preserve">
    <value>从工作簿中剪切单元格。</value>
  </data>
  <data name="Protectstheworkbooksothatitisencry_bd762b10485afbb2" xml:space="preserve">
    <value>保护工作簿，用密码加密工作簿。</value>
  </data>
  <data name="Hidesworksheetsothatisnotvisible" xml:space="preserve">
    <value>隐藏工作表，以使其不可见。</value>
  </data>
  <data name="Hideallotherworksheetssothattheyarenotvisible" xml:space="preserve">
    <value>隐藏所有其他工作表，以使它们不可见。</value>
  </data>
  <data name="ImportCSVworksheetsintoaworkbookusingapath" xml:space="preserve">
    <value>使用路径将 CSV 工作表导入工作簿。</value>
  </data>
  <data name="Getsthenameoftheworksheet" xml:space="preserve">
    <value>获取工作表的名称。</value>
  </data>
  <data name="Insertcellsintotheworkbook" xml:space="preserve">
    <value>将单元格插入工作簿。</value>
  </data>
  <data name="Getsthecurrentworksheetintoacollec_15eb5bb845e54906" xml:space="preserve">
    <value>将当前工作表获取到集合中。这将读取工作表并将内容存储到集合中。偏移函数允许指定起始单元格。</value>
  </data>
  <data name="Protectstheworkbooksothatitisencry_ce2588ed1a5392f1" xml:space="preserve">
    <value>保护工作簿，用密码加密工作簿。</value>
  </data>
  <data name="FlagEmailforFollowup" xml:space="preserve">
    <value>标记待跟进电子邮件</value>
  </data>
  <data name="ClearEmailFlag" xml:space="preserve">
    <value>清除电子邮件标记</value>
  </data>
  <data name="SendsanEmailForalistofvalidSensiti_49c501566c0f7987" xml:space="preserve">
    <value>发送电子邮件 

要获取有效“灵敏度”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

要获取有效“重要性”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</value>
  </data>
  <data name="ReplytoallEmailsrecipientsofaspeci_16e2e1a11fc37347" xml:space="preserve">
    <value>回复特定电子邮件的所有电子邮件收件人。

&lt;回复全部电子邮件&gt; 操作将只调用一个特定于 ID（条目 ID）的电子邮件项。

如果预期会调用多封电子邮件，则流程设计需要反映该要求

。要获取有效“灵敏度”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

要获取有效“重要性”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</value>
  </data>
  <data name="ForwardEmailtorecipients_ToCCBCC_i_a9ada304e626c44a" xml:space="preserve">
    <value>将电子邮件转发给收件人 (To/CC/BCC)，包括 (Message) 作为输入参数

&lt;转发电子邮件&gt; 操作将只调用一个特定于 ID（条目 ID）的电子邮件项。

如果预期会调用多封电子邮件，则流程设计需要反映该要求

。要获取有效“灵敏度”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

。要获取有效“重要性”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</value>
  </data>
  <data name="ReplytoEmailsenderofaspecificemail_c2895d7fe9e6f26e" xml:space="preserve">
    <value>回复特定电子邮件的电子邮件发件人

&lt;回复电子邮件&gt; 操作将只调用一个特定于 ID（条目 ID）的电子邮件项。

如果预期会调用多封电子邮件，则流程设计需要反映该要求

。要获取有效“灵敏度值”的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olsensitivity

要获取有效“重要性”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olimportance</value>
  </data>
  <data name="FlagEmailforfollowupForalistofvali_a42191494da29b54" xml:space="preserve">
    <value>标记待跟进电子邮件。

要获取有效的“MarkInterval”值的列表，请参阅 https://docs.microsoft.com/en-us/office/vba/api/outlook.olmarkinterval</value>
  </data>
  <data name="Clearanyflagonthemailitem" xml:space="preserve">
    <value>清除邮件项上的任何标记</value>
  </data>
  <data name="OptionalDisplayNameoftheemailaccou_0b68da4e15299de5" xml:space="preserve">
    <value>可选。显示电子邮件帐户的名称。如果省略此项，则系统会使用默认帐户。</value>
  </data>
  <data name="OptionalShareMailboxnameoremailadd_86223321b90024ad" xml:space="preserve">
    <value>可选。共享邮箱名称或电子邮件地址。只有在有提供的值时，系统才会启动尝试调用共享信箱。</value>
  </data>
</root>