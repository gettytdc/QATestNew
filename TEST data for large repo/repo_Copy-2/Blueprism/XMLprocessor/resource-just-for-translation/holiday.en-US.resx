<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EnglandandWales" xml:space="preserve">
    <value>England and Wales</value>
  </data>
  <data name="NorthernIreland" xml:space="preserve">
    <value>Northern Ireland</value>
  </data>
  <data name="RepublicofIreland" xml:space="preserve">
    <value>Republic of Ireland</value>
  </data>
  <data name="Scotland" xml:space="preserve">
    <value>Scotland - another test<value>
  </data>
  <data name="EasterSunday" xml:space="preserve">
    <value>Easter Sunday</value>
  </data>
  <data name="ChristmasDay" xml:space="preserve">
    <value>Christmas Day</value>
  </data>
  <data name="NewYearsDay" xml:space="preserve">
    <value>New Year's Day</value>
  </data>
  <data name="SecondofJanuary" xml:space="preserve">
    <value>Second of January</value>
  </data>
  <data name="StPatricksDay" xml:space="preserve">
    <value>St Patrick's Day</value>
  </data>
  <data name="GoodFriday" xml:space="preserve">
    <value>Good Friday</value>
  </data>
  <data name="EasterMonday" xml:space="preserve">
    <value>Easter Monday</value>
  </data>
  <data name="EarlyMayBankHoliday" xml:space="preserve">
    <value>Early May Bank Holiday</value>
  </data>
  <data name="MayBankHoliday" xml:space="preserve">
    <value>May Bank Holiday</value>
  </data>
  <data name="SpringBankHoliday" xml:space="preserve">
    <value>Spring Bank Holiday</value>
  </data>
  <data name="JuneBankHoliday" xml:space="preserve">
    <value>June Bank Holiday</value>
  </data>
  <data name="OrangemensDay" xml:space="preserve">
    <value>Orangemen's Day</value>
  </data>
  <data name="AugustBankHoliday" xml:space="preserve">
    <value>August Bank Holiday</value>
  </data>
  <data name="SummerBankHoliday" xml:space="preserve">
    <value>Summer Bank Holiday</value>
  </data>
  <data name="OctoberBankHoliday" xml:space="preserve">
    <value>October Bank Holiday</value>
  </data>
  <data name="StAndrewsDay" xml:space="preserve">
    <value>St Andrew's Day</value>
  </data>
  <data name="BoxingDay" xml:space="preserve">
    <value>Boxing Day</value>
  </data>
  <data name="StStephensDay" xml:space="preserve">
    <value>St Stephen's Day</value>
  </data>
  <data name="calendar_WorkingWeekNoHolidays" xml:space="preserve">
    <value>Working Week / No Holidays</value>
  </data>
  <data name="calendar_Fivedayworkingweekwithnopublicholi_680f41497da0d116" xml:space="preserve">
    <value>Five day working week with no public holidays or other holidays</value>
  </data>
  <data name="China" xml:space="preserve">
    <value>China</value>
  </data>
  <data name="HongKong" xml:space="preserve">
    <value>Hong Kong</value>
  </data>
  <data name="Japan" xml:space="preserve">
    <value>Japan</value>
  </data>
  <data name="USA" xml:space="preserve">
    <value>USA</value>
  </data>
  <data name="MartinLutherKingJrDay" xml:space="preserve">
    <value>Martin Luther King Jr. Day</value>
  </data>
  <data name="PresidentsDay" xml:space="preserve">
    <value>President's Day</value>
  </data>
  <data name="MemorialDay" xml:space="preserve">
    <value>Memorial Day</value>
  </data>
  <data name="IndependenceDay" xml:space="preserve">
    <value>Independence Day</value>
  </data>
  <data name="LaborDay" xml:space="preserve">
    <value>Labor Day</value>
  </data>
  <data name="ColumbusDay" xml:space="preserve">
    <value>Columbus Day</value>
  </data>
  <data name="VeteransDay" xml:space="preserve">
    <value>Veterans Day</value>
  </data>
  <data name="ThanksgivingDay" xml:space="preserve">
    <value>Thanksgiving Day</value>
  </data>
  <data name="January2BankHoliday" xml:space="preserve">
    <value>January 2 Bank Holiday</value>
  </data>
  <data name="January3BankHoliday" xml:space="preserve">
    <value>January 3 Bank Holiday</value>
  </data>
  <data name="ComingofAgeDay" xml:space="preserve">
    <value>Coming of Age Day</value>
  </data>
  <data name="NationalFoundationDay" xml:space="preserve">
    <value>National Foundation Day</value>
  </data>
  <data name="Showa" xml:space="preserve">
    <value>Showa</value>
  </data>
  <data name="ConstitutionMemorialDay" xml:space="preserve">
    <value>Constitution Memorial Day</value>
  </data>
  <data name="GreeneryDay" xml:space="preserve">
    <value>Greenery Day</value>
  </data>
  <data name="ChildrensDay" xml:space="preserve">
    <value>Children's Day</value>
  </data>
  <data name="MarineDay" xml:space="preserve">
    <value>Marine Day</value>
  </data>
  <data name="MountainDay" xml:space="preserve">
    <value>Mountain Day</value>
  </data>
  <data name="RespectfortheAgedDay" xml:space="preserve">
    <value>Respect for the Aged Day</value>
  </data>
  <data name="HealthandSportsDay" xml:space="preserve">
    <value>Health and Sports Day</value>
  </data>
  <data name="CultureDay" xml:space="preserve">
    <value>Culture Day</value>
  </data>
  <data name="LaborThanksgivingDay" xml:space="preserve">
    <value>Labor Thanksgiving Day</value>
  </data>
  <data name="December31BankHoliday" xml:space="preserve">
    <value>December 31 Bank Holiday</value>
  </data>
  <data name="HongKongSpecialAdministrativeRegio_2ce0fe6b93af27b2" xml:space="preserve">
    <value>Hong Kong Special Administrative Region Establishment Day</value>
  </data>
  <data name="NationalDay" xml:space="preserve">
    <value>National Day</value>
  </data>
  <data name="NationalDayGoldenWeekholiday" xml:space="preserve">
    <value>National Day Golden Week holiday</value>
  </data>
  <data name="calendar_n2018" xml:space="preserve">
    <value>2018年の暦</value>
  </data>
  <data name="France" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="MayDayLabourDay" xml:space="preserve">
    <value>May Day/Labour Day</value>
  </data>
  <data name="VictoryinEuropeDay" xml:space="preserve">
    <value>Victory in Europe Day</value>
  </data>
  <data name="AscensionDay" xml:space="preserve">
    <value>Ascension Day</value>
  </data>
  <data name="WhitMonday" xml:space="preserve">
    <value>Whit Monday</value>
  </data>
  <data name="BastilleDay" xml:space="preserve">
    <value>Bastille Day</value>
  </data>
  <data name="AssumptionofMarytoHeaven" xml:space="preserve">
    <value>Assumption of Mary to Heaven</value>
  </data>
  <data name="AllSaintsDay" xml:space="preserve">
    <value>All Saints' Day</value>
  </data>
  <data name="ArmistanceDay" xml:space="preserve">
    <value>Armistance Day</value>
  </data>
  <data name="Canada" xml:space="preserve">
    <value>Canada</value>
  </data>
  <data name="VictoriaDay" xml:space="preserve">
    <value>Victoria Day</value>
  </data>
  <data name="CanadaDay" xml:space="preserve">
    <value>Canada Day</value>
  </data>
  <data name="RemembranceDay" xml:space="preserve">
    <value>Remembrance Day</value>
  </data>
  <data name="CurrentUKMonarchsBirthday" xml:space="preserve">
    <value>Current UK Monarch's Birthday</value>
  </data>
  <data name="Germany" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="MayDay" xml:space="preserve">
    <value>May Day</value>
  </data>
  <data name="DayofGermanUnity" xml:space="preserve">
    <value>Day of German Unity</value>
  </data>
  <data name="Mexico" xml:space="preserve">
    <value>Mexico</value>
  </data>
  <data name="DayoffforConstitutionDay" xml:space="preserve">
    <value>Day off for Constitution Day</value>
  </data>
  <data name="ConstitutionDay" xml:space="preserve">
    <value>Constitution Day</value>
  </data>
  <data name="DayoffforBenitoJuarezsbirthdaymemorial" xml:space="preserve">
    <value>Day off for Benito Juarez's birthday memorial</value>
  </data>
  <data name="BenitoJuarezsbirthdaymemorial" xml:space="preserve">
    <value>Benito Juarez's birthday memorial</value>
  </data>
  <data name="DayoffforRevolutionDay" xml:space="preserve">
    <value>Day off for Revolution Day</value>
  </data>
  <data name="RevolutionDay" xml:space="preserve">
    <value>Revolution Day</value>
  </data>
</root>