<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <title>Credentials Details Form</title>
</head>

  <body class="slick">
        <div class="header">
            <h1 class="pagetitle">Help</h1>
        </div>
        <h2>Credential Details</h2>
        <p>The Credential Details form allows you to edit the name and description of a new credential,
		add the application credentials, and set access rights.</p>
        <h4>Name</h4>
        <p>A name to uniquely identify the credential - this is the name that processes use to 
		look up credential details when running.</p>
        <h4>Description</h4>
        <p>Any additional descriptive information for the credential.</p>
        <h4>Type</h4>
        <p>The type of credential being added. </p>
        <h3>Application Credentials tab</h3>
        <h4>Credential Types</h4>
        <p>The different credential types reflect the supported authentication methods. Appropriate fields are available for the selected type.</p>
        <dl class="bulleted">
            <dt>General</dt>
            <dd>Use this credential type for non-Web API authentication.</dd>
            <h4>Username</h4>
            <dd>Usually used to store a login user name.</dd>
            <h4>Password</h4>
            <dd>The password to be securely stored within the credential.</dd>
            <dt>Basic Authentication</dt>
            <dd>Use this credential type for basic web authentication to create the authentication header.</dd>
            <h4>Username</h4>
            <dd>The authorization user name.</dd>
            <h4>Password</h4>
            <dd>The authorization password to be securely stored within the credential.</dd>
            <dt>OAuth 2.0 (Client Credentials)</dt>
            <dd>Use this credential type for OAuth 2.0 web authentication using client credentials.</dd>
            <h4>Client ID</h4>
            <dd>The client making the request.</dd>
            <h4>Client Secret</h4>
            <dd>Used to authenticate the request.</dd>
            <dt>OAuth 2.0 (JWT Bearer Token)</dt>
            <dd>Use this credential for OAuth 2.0 web authentication using JSON&#160;Web Tokens (JWT).</dd>
            <h4>Issuer</h4>
            <dd>Used to form the authentication token request.</dd>
            <h4>Private Key</h4>
            <dd>The client secret, used to sign the token request.</dd>
            <dt>Bearer Token</dt>
            <dd>Use this credential type for Bearer token authentication.</dd>
            <h4>Token</h4>
            <dd>The bearer token to send in the authentication header.</dd>
        </dl>
        <h4>Expiry date</h4>
        <p>If known, the date that the credentials are due to expire. If the date is
		in the past, processes will not be able to use these credentials.</p>
        <h4>Marked as invalid</h4>
        <p>If the credentials are not to be used by processes then they can be marked as invalid.</p>
        <h4>Additional properties</h4>
        <p>Any number of general purpose, named properties can be created for the credential, the values
			for which are held securely within the database. These property values can be requested by
		processes.</p>
        <h3>Access Rights tab</h3>
        
        <h4>Security Roles (Recommended configuration)</h4>

        <p>The security roles roles that are required for a Blue Prism account to have to be able to access a credential.</p>
        <p>This is only valid for Runtime Resources which are not public (i.e. /public) and which have been configured to run 
		under the context of a user (i.e. /SSO or /user [username] [ password]).</p>
        <p>Restricting access to a credential by security role will prevent the credential from being accessed in the  following scenarios:
			<ul><li>When process sessions are created by the scheduler</li><li>When process sessions are created on Resources which are configured as public</li></ul>
<h4>Processes (Not recommended)</h4>
        <p>The processes that are allowed to access the credential.</p>
<p>The session identifier provided when requesting the credential must relate to an active session and the process in the session record must be in the list of allowed processes.</p>
        <h4>Resources (Not recommended)</h4>
        <p>The resources that are allowed to access the credential when online.</p>
<p>The session identifier provided when requesting the credential must relate to an active session and the resource in the session record must be online and be in the list of allowed resources.</p></p>
    </body>
</html>