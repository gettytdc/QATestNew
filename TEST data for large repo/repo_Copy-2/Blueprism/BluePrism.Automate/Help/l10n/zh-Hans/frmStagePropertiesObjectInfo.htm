<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xml:lang="en" lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <link type="text/css" href="AutomateHelp.css" rel="stylesheet" />
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <title>环节属性—业务对象信息</title>
</head>

<body>
    <div class="header">
        <h1 class="pagetitle">环节类型</h1>
    </div>

    <h3>对象信息</h3>

    <p>业务对象信息环节所提供的配置选项集与<a href="frmStagePropertiesProcessInfo.htm">流程信息环节</a>非常类似，但前者所提供的选项要更多一些。</p>

	<a name="GlobalCode"></a>
    <h5 class="bold">全局代码</h5>

    <p>全局代码部分可以将您在业务对象的各个<a href="frmStagePropertiesCode.htm">代码环节</a>中所写的不同代码集中到一起。</p>

    <p>在全局代码部分中所写的代码会形成一个 Microsoft VB.NET 类。在此处声明的功能和成员变量会作用于整个业务对象，并可在代码环节中加以引用。在各个代码环节中声明的方法会被编译到同一个类中，并可在全局代码部分和其他代码环节中加以引用。</p>

    <p>如果使用的是 COM 对象，您会发现，在这里可以轻松地声明、实例化和处理该对象，以使其在多个代码环节中保持相同状态。</p>

    <p>在全局代码部分中，您不仅可以引用外部动态链接库（dll 文件），还能声明类功能。这可通过以下操作来完成：在“外部引用”中添加一个行，然后浏览查找相应的外部库。</p>

    <p>在引用 Microsoft .NET 类库（例如，System.Xml 命名空间）时，可能需要做两件事。第一，如上文所述，您必须浏览查找相应的外部引用，然后完成添加。第二，您必须添加命名空间导入。例如，在导入 System.Xml.dll 时，您必须将 System.Xml 添加到命名空间列表视图中。</p>

	<p>可供选用的语言有：Microsoft VB.NET 或 Microsoft C#.NET。请参考 Microsoft 参考手册，以了解每种语言的语言规范。选定某种语言后，您在当前业务对象的所有代码环节中都必须使用这一语言—您不能使用一种语言来编写某些环节，再用另一种语言来编写其他环节。</p>
	
	<p>您可以通过按“检查代码”按钮来验证代码（和所有代码环节）的有效性。</p>
	
	<p>您还可以设置业务对象的运行模式。流程的运行模式取决于其所用的各个业务对象的最严格运行模式。业务对象的运行模式可能会是“后台”、“前台”或“独占”。<ul>
	<li>独占流程无法与任何其他流程一起运行。</li>
	<li>前台流程只能与后台流程一起运行，一次只能运行一个前台流程。</li>
	<li>后台流程可以与独占流程之外的任何其他流程一起运行。</li>
	</ul>
	</p>
	
	<h5 id="shared-objects" class="bold">共享对象和可共享对象</h5>
	<p>将某个业务对象标记为<code>可共享</code>后，其他业务对象即可共享该业务对象的应用程序模型。如果某个业务对象共享了其他业务对象的模型，前者即被称为<code>共享</code>业务对象。</p>
	<p>通过多次引用，可共享业务对象或共享业务对象可以与它的某个实例进行交互。</p>
	<p>在流程中使用操作环节来引用共享业务对象中的操作时，每次调用都会被定向至所用模型和相关应用程序的某个实例。</p>
	<p><i>示例：如下图所示，使用操作环节在多个位置引用了名为“对象 C”的可共享对象。这些位置包括：主流程、对象 A 中和对象 B 中。由于对象 C 是可共享的业务对象，因此关联的应用程序只需进行一次初始化，之后对象 B 也可以使用对象 A 请求的“登录”。</i></p>

	<div style="text-align:center">
    <img width="450" src="Graphics/shared-objects1.png"/></a>
		<p>图 1：显示了共享/可共享业务对象的单个实例</p>
	</div>

	<p>如果业务对象是使用共享应用程序模型来配置的，那么在需要为目标应用程序启动独立实例时，只能通过使用子流程来实现。</p>
  <p><i>示例：如下方示意图所示，无论自动化根节点是流程还是对象，每个子流程中都会提供可共享/已共享的业务对象的一个独立实例。</i></p>

	<div style="text-align:center">
    <img width="450" src="Graphics/shared-objects2.png"/></a>
		<p>图 2：流程使用子流程为共享/可共享业务对象初始化了多个实例</p>
    <img width="450" src="Graphics/shared-objects3.png"/></a>
		<p>图 3：业务对象使用子流程为共享/可共享业务对象初始化了多个实例</p>
	</div>
	
	<p>上述行为不同于非共享或非可共享业务对象的行为。如果是非可共享/非共享业务对象，那么每当您使用操作环节时，所用模型和相关应用程序都会创建一个新的实例。如果需要为指定应用程序创建多个实例，尤其是需要同时与多个实例交互时，这种行为会更有助益。</p>
	<p><i>示例：如下图所示，每当使用操作环节引用名为“对象 C”的非可共享对象时，该对象及其相关应用程序都会出现一个独立的实例。这意味着，对象 B 无法使用对象 A 请求的应用程序“登录”操作。在以下示例中，对象 C 和相关应用程序共有三个实例。</i></p>

	<div style="text-align:center">
    <img width="450" src="Graphics/shared-objects4.png"/></a>
		<p>图 4：非可共享/非共享业务对象的多个实例</p>
	</div>
	
</body>
</html>
