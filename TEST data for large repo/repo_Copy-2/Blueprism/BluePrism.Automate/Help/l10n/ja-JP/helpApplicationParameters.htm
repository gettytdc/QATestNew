<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<link type="text/css" href="AutomateHelp.css" rel="stylesheet"/>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
	<title>アプリケーションパラメーター</title>
	<script type="text/javascript" src="script/imagezoom.js"></script>
</head>

<body class="slick">
	<div class="header">
		<h1 class="pagetitle">アプリケーションモデラー</h1>
		<h2>アプリケーションパラメーター</h2>
	</div>

	<h3 id="intro">はじめに</h3>
	<p>ビジネスオブジェクトを作成するときは、<a href="frmApplicationDefinitionCreate.htm">アプリケーション定義ウィザード</a>を使用してターゲットアプリケーションに関する情報を提供する必要があります。この情報は、後で<a href="frmIntegrationAssistant.htm">アプリケーションモデラー</a>を使用して変更できます。
	</p>
	<p>以下のパラグラフでは、リクエストされる情報とその目的および性質について説明します。</p>
	
	<h3 id="applications">Windows、Java、ブラウザーアプリケーション</h3>
	
	<dl class="listplease bulleted">
		<dt id="ExecutablePath">実行ファイルのパス</dt>
		<dd>Blue Prismがターゲットアプリケーションの実行ファイルを起動できるように、ディスク上のターゲットアプリケーションの場所が必要になります。Windowsまたはブラウザーアプリケーションの場合、これは<code>exe</code>ファイル拡張子で終わるファイルである必要があります。Javaアプリケーションの場合は、<code>jar</code>拡張子で終わるファイルである必要があります。</dd>
			<dd>ターゲットアプリケーションがWindows 10ストアアプリの場合は、アプリケーションの名前を山形括弧で囲む必要があります（例：<code>&lt;Microsoft.WindowsCalculator&gt;</code>）。インストールされているストアアプリの名前のリストは、<code>Get-AppxPackage -AllUsers | Select Name</code> Powershellコマンドを使用して取得できます。</dd>
	
		<dt id="CommandLineParams">コマンドラインパラメーター</dt>
		<dd>一部のアプリケーションでは、その動作に影響を与えるために、コマンドラインを介してパラメーターを指定できます。このようなパラメーターは、Windowsコマンドプロンプトとまったく同じように入力することで指定できます。Windowsコマンドプロンプトと同様に、ファイルパスとWebアドレスにスペースが含まれる場合は、ファイルパスとWebアドレスを引用符で囲むことを忘れないでください。
		</dd>

		<dt id="WorkingDirectory">作業ディレクトリ</dt>
		<dd>一部のアプリケーションでは、作業ディレクトリ設定し利用します。
 ここでWindowsコマンドプロンプトとまったく同じように作業ディレクトリを入力できます。Windowsコマンドプロンプトと同様に、作業ディレクトリにスペースが含まれる場合は、作業ディレクトリを引用符で囲むことを忘れないでください。
		</dd>
		
		<dt id="NonInvasive">非侵入的自動化技術に限定</dt>
		<dd>これは<a href="helpHooking.htm">フッキンテクノロジー</a>（ターゲットアプリケーションを操作するための侵入テクニック）を有効または無効にします。このオプションは、正当な理由がある場合にのみ選択してください。このオプションは、通常のWindowsテクニックが役に立たないことが判明した場合にのみ使用してください。詳細については、<a href="helpHooking.htm#WhenToUseHooking">「フッキング」ヘルプページ</a>を参照してください。</dd>
		
		<dt id="WindowTitle">ウィンドウタイトル</dt>
		<dd>
 このパラメーターは、（実行ファイルから直接起動するのではなく）アプリケーションにアタッチする場合に<a href="#ProcessName">ProcessName</a>パラメーターと組み合わせて使用します。この値は空白のままにしてもかまいませんが、<a href="#ProcessName">ProcessName</a>とウィンドウタイトルの少なくとも一方を指定する必要があります。</dd>
		<dd>アプリケーションにアタッチするときに、Blue Prismは目的のアプリケーションを識別するための信頼できる手段を必要とします。
 1つのやり方はウィンドウタイトルを指定することです。Blue Prismは、指定された名前のウィンドウを持つアプリケーションを探し、そのアプリケーションを使用します（そのような一意のアプリケーションが見つかった場合）。</dd>
		<dd>指定する値には、<a href="helpWildcardsAndRegex.htm">ワイルドカード</a>（<code>*</code>、<code>?</code>、<code>#</code>）を含めることができます
 （例：<code>「Microsoft Word*」</code>、<code>「Accounts Manager plus - Customer ID #####」</code>）。
		</dd>
		
		<dt id="ProcessName">プロセス名</dt>
		<dd>このパラメーターは、（実行ファイルから直接起動するのではなく）アプリケーションにアタッチする場合に<a href="#WindowTitle">WindowTitle</a>パラメーターと組み合わせて使用します。この値は空白のままにしてもかまいませんが、<a href="#WindowTitle">WindowTitle</a>とプロセス名の少なくとも一方を指定する必要があります。</dd>
		<dd>
 アプリケーションにアタッチするときに、Blue Prismは目的のアプリケーションを識別するための信頼できる手段を必要とします。
 1つのやり方は、アプリケーションが実行されているWindowsプロセスの名前を指定することです。Blue Prismは、指定されたパターンと一致する名前を持つプロセスを探し（以下のワイルドカードを参照）、そのプロセスで実行されているアプリケーションを使用します（そのような一意のアプリケーションが見つかった場合）。
		</dd>
		<dd>指定する値には、<a href="helpWildcardsAndRegex.htm">ワイルドカード</a>（<code>*</code>、<code>?</code>、<code>#</code>）を含めることができます
 （例：<code>「Microsoft Word*」</code>、<code>「Accounts Manager plus - Customer ID #####」</code>）。
		</dd>
	</dl>
	
	<h3 id="ProcessMode">アプリケーションマネージャーモード</h3>
	<p>アプリケーションマネージャーは、ターゲットインターフェイスプロセスをBlue Prism自体から分離できるように、いくつかの異なるモードで実行できます。これは、Blue Prismが32ビットプロセスとして実行されていて、ターゲットアプリケーションが64ビットプロセスである場合、またはその逆の場合などに便利です。
	</p>
	<p>利用可能なモードは以下のとおりです。</p>
	<dl class="listplease bulleted">
		<dt>埋め込み済み（デフォルト）</dt>
		<dd>これはデフォルトのモードで、Blue Prismバージョン4.2以前は使用可能な唯一の操作モードでした。このモードでは、アプリケーションマネージャーはBlue Prism自体と同じプロセスで実行されます。分離はありません。
		</dd>
		<dt>外部、32ビットモード</dt>
		<dd>アプリケーションマネージャーは、ターゲットアプリケーションとやり取りするときに別のプロセスで実行されます。アプリケーションマネージャーのプロセスは常に32ビットです。
		</dd>
		<dt>外部、64ビットモード</dt>
		<dd>アプリケーションマネージャーは、ターゲットアプリケーションとやり取りするときに別のプロセスで実行されます。アプリケーションマネージャーのプロセスは常に64ビットです。
		</dd>
		<dt>外部、OSアドレスサイズ</dt>
		<dd>アプリケーションマネージャーは、ターゲットアプリケーションとやり取りするときに別のプロセスで実行されます。アプリケーションマネージャープロセスは、オペレーティングシステムのアドレスサイズと一致します。
 たとえば、64ビットWindowsでは、64ビットプロセスになります。
		</dd>
		<dt>外部、Blue Prismアドレスサイズ</dt>
		<dd>アプリケーションマネージャーは、ターゲットアプリケーションとやり取りするときに別のプロセスで実行されます。アプリケーションマネージャープロセスは、Blue Prismのアドレスサイズと一致します。たとえば、Blue Prismが64ビットプロセスとして実行されている場合は、アプリケーションマネージャープロセスも64ビットになります。
		</dd>
	</dl>
	<h3 id="ExternalProcessTimeout">アプリケーションタイムアウト</h3>
	<p> このパラメーターは、Blue Prismが例外をスローするまでターゲットアプリケーションの応答を待機する時間を決定します。タイムアウトは、読み取り、書き込み、移動の各ステージにおけるアプリケーションマネージャーのすべてのアクションに適用されます。タイムアウトを使用すると、ターゲットアプリケーションが応答しなくなった場合にBlue Prismプロセスが無期限にブロックされるのを防止できます。
	</p>
	<p>
 タイムアウト値0はタイムアウトなしと解釈されます。これはデフォルト値です。
	<p>
	<p>
 このパラメーターは、<a href="#ProcessMode">アプリケーションマネージャーモード</a>がいずれかの外部モードに設定されている場合にのみ適用されます。
	</p>
	<h3 id="options">オプション</h3>
	<p>このパラメーターを使用すると、ターゲットアプリケーションとのインターフェイスの動作を変更したり、特別な機能を有効にしたりするための追加のオプションを設定できます。通常は、これらの特定の機能が必要でない限り、空のままにしておくことを推奨します。機能を有効にするには、必要に応じて目的の機能をコンマ区切りのリストに追加します。
	</p>
	<p>現在定義されているオプションは以下のとおりです。</p>
	<dl class="listplease bulleted">
		<dt>descendtree</dt>
		<dd>Javaアプリケーション用。ターゲットアプリケーション内の要素のツリーを下降して要素を検索します。デフォルト（つまり、このオプションが設定されていない場合）では、ターゲットアプリケーション内の各Java関連ウィンドウについて可視のJava要素のリストが直接取得されます。
 ツリーを下降する方法は一般に低速ですが、デフォルトの方法を使用すると、一部のターゲットアプリケーションとJREがクラッシュする可能性があります。
		</dd>
		<dt>ignorenotshowing</dt>
		<dd>Javaアプリケーション用のオプション。ツリーを下降するときに、表示されていないと報告されている要素の下にあるツリーのブランチを無視します。これにより、パフォーマンスが大幅に向上する可能性があります。</dd>

    <dt>nodisconnect</dt>
    <dd>
 端末エミュレーター用のオプション。このオプションを有効にすると、エミュレーターから切断、終了、またはデタッチしたときに基礎となる端末エミュレーターAPIが閉じなくなります。APIの仕様によっては、このオプションを使用すると、メモリリーク（Blue Prismと端末エミュレーターソフトウェアの両方）や、クラッシュ（Attachmateで起こることが知られています）などのその他の関連する問題が発生する可能性があります。ただし、結果として生じる振る舞いは望ましいものであり、いくつかのエミュレーターで明白な問題がないことがわかっています。このオプションは慎重に使用する必要があり、本番環境内で使用する前にテストする必要があります。
    </dd>
	</dl>
		
	<h3 id="browser">ブラウザーアプリケーション</h3>
	<dl class="listplease bulleted">
		<dt id="UseJavaInBrowser">Java統合技術を有効化
		</dt>
		<dd>このオプションを有効にすると、Java統合技術を使用してWebブラウザー内のJavaアプリケーションを操作できます。これらの技術は、スタンドアロンのJavaアプリケーションを操作するために使用されるものと同じです。</dd>
		<dd>この機能には<a href="licence.html">ライセンス制限</a>が適用されます。つまり、この機能の使用を許可するライセンスを購入する必要があります。</dd>
	</dl>

	<h3 id="mainframe">メインフレームアプリケーション</h3>
	<dl class="listplease bulleted">
	
		<dt id="SessionFile">セッションファイル</dt>
		<dd>セッションファイルを使用するメインフレームアプリケーションの場合は、ここでセッションファイルを指定する必要があります。セッションファイルには通常、接続に関する情報（ターゲットホスト名やポート番号など）とユーザーの基本設定が含まれています。例として、Hummingbird HostExplorerセッション用の<code>hep</code>ファイルやZephyr Passportセッション用の<code>zms</code>ファイルがあります。</dd>
			
		<dt id="SessionID">セッションID</dt>
		<dd>セッションファイルを使用しないメインフレームアプリケーションは通常、セッション識別子を使用します。これは、A～Zの範囲の1文字で構成されます。接続の詳細については、メインフレームアプリケーション自体の内部で構成されます。つまり、メインフレームアプリケーションは識別子に基づいて接続情報を検索します。Blue Prismは、起動時にこの識別子をメインフレームアプリケーションに渡します。</dd>
		<dd>接続情報を指定する（セッション識別子を設定する）メカニズムはベンダーによって異なります。この作業を完了する方法の詳細については、メインフレームアプリケーションのドキュメントを参照してください。</dd>
			
		<dt id="WaitTimeout">待機タイムアウト</dt>
		<dd>メインフレームの待機操作で使用されるタイムアウト値（秒単位）を指定します。この間隔が経過すると、待機操作は取り消されます。</dd>
		<dd>これは、Blue Prismの<a href="frmStagePropertiesWait.htm">待機ステージ</a>とは関係がなく、メインフレームエミュレーターでエミュレーター自体のAPIに対して実行される内部待機操作と関係があります。このような待機は、読み取りまたは書き込みが行われるたびにBlue Prismによって引き起こされます。Blue Prismは、ホストが再度アイドル状態になるまで待機してから続行します。これにより、各入出力操作の後にユーザーが待機ステージを使用する必要がなくなります。
		</dd>
		<dd>値ゼロが指定されている場合、デフォルト値がBlue Prismによって選択されます。したがって、最小値は1秒です。
		</dd>
		
		<dt id="WaitSleepTime">待機スリープ時間</dt>
		<dd>メインフレームエミュレーターがアイドル状態になるのを待っている間、Blue Prismがスリープする時間をミリ秒単位で指定します。Blue Prismは、エミュレーターがアイドル状態になるのを待っている間、エミュレーターのステータスを繰り返しチェックします。チェックの合間に、Blue Prismは指定された期間スリープします。</dd>
		<dd>高い値を設定すると、メインフレームエミュレーターの負荷が増し、パフォーマンスが若干低下します。一方、低い値を設定すると、Blue Prismがより早期に処理を進めることができ（Blue Prismがエミュレーターの準備状況をより早く検出するため）、パフォーマンスが向上します。
 最初は高い値を選択し、さらに値を低くしてもパフォーマンスがそれ以上向上しなくなるまで徐々に値を低くすることを推奨します。</dd>
		<dd>これは、Blue Prismの<a href="frmStagePropertiesWait.htm">待機ステージ</a>とは関係がなく、メインフレームエミュレーターでエミュレーター自体のAPIに対して実行される内部待機操作と関係があります。このような待機は、読み取りまたは書き込みが行われるたびにBlue Prismによって引き起こされます。Blue Prismは、ホストが再度アイドル状態になるまで待機してから続行します。これにより、各入出力操作の後にユーザーが待機ステージを使用する必要がなくなります。
		</dd>
		<dd>値ゼロが指定されている場合、デフォルト値がBlue Prismによって選択されます。したがって、最小値は1ミリ秒です。</dd>
			
		<dt id="AttachmateVariant">Attachmateエミュレーターバリアント</dt>
		<dd>各種のAttachmate端末エミュレーターを使用できます。
 お使いの特定のタイプに最も近いバリアントを選択してください。</dd>

		<dt id="DLLName">DLL名</dt>
		<dd>汎用HLLAPIサポートを使用する場合、これは使用するHLLAPI DLLの名前です。端末エミュレーターの正しい名前を見つけるには、Program Filesディレクトリで端末エミュレーターに関連するフォルダー名を探します。フォルダーにはdllが含まれますが、必要なDLLに標準名はありません。このDLLはテキスト「HLL」、「API」を含み、「32」で終わる場合があります。
 たとえば、「EHLAPI32.DLL」、「PCSHLL32.DLL」、「HLLAPI.DLL」、「HA7EHLL.DLL」、「HLLAPI32.DLL」などがあります。</dd>

		<dt id="DLLEntryPoint">DLLエントリポイント</dt>
		<dd>汎用HLLAPIサポートを使用する場合、これはHLLAPI dll内のエントリポイントの名前です。これは、ほとんどの場合、「hllapi」に設定する必要がありますが、まれにうまくいかないことがあります。その場合は、代わりに「WinHLLAPI」を試してください。この情報が既知であるか、Blueprismサポートによって提供されている場合は、他のエントリポイントが機能する可能性があります。</dd>
	</dl>
	
</body>
</html>
