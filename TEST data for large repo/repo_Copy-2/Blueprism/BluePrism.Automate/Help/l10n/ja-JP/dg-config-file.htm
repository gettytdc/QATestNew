<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" class="_Skins_HTML5___Top_Navigation" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-has-content-body="True" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Advanced setup">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
        <meta name="msapplication-config" content="../../Skins/Favicons/browserconfig.xml"/>
        <link rel="apple-touch-icon" sizes="180x180" href="../../Skins/Favicons/apple-touch-icon.png"/>
        <link rel="shortcut icon" href="../../Skins/Favicons/favicon-32x32.png"/>
        <link rel="icon" sizes="96x96" href="../../Skins/Favicons/favicon-96x96.png"/>
        <link rel="icon" sizes="32x32" href="../../Skins/Favicons/favicon-32x32.png"/>
        <link rel="icon" sizes="2263x2263" href="../../Skins/Favicons/BP_Prism_RGB.png"/>
        <meta charset="utf-8"/>
        <meta name="description" content=""/>
        <meta name="author" content=""/><title>構成ファイルの構造</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet"/>
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet"/>
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet"/>
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet"/>
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet"/>
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet"/>
        <link href="../../Skins/Fluid/stylesheets/foundation.6.2.3.css" rel="stylesheet"/>
        <link href="../../Skins/Fluid/stylesheets/styles.css" rel="stylesheet"/>
        <link href="../../Skins/Fluid/stylesheets/tablet.css" rel="stylesheet"/>
        <link href="../../Skins/Fluid/stylesheets/mobile.css" rel="stylesheet"/>
        <style>/*&lt;meta /&gt;*/

.button.select-language-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/select-language.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.feedback-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.print-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/printer.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.previous-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../Resources/Scripts/PIE-no-motw.htc');
}

</style>
        <link href="./AutomateHelp.css" rel="stylesheet"/>
    </head>
    <body>
        <div class="foundation-wrap off-canvas-wrapper">
                                            <div>
                                                <h1>構成ファイルの構造</h1>
                                                <p>構成ファイルは、構成済みのデータゲートウェイ設定と出力から作成されます。このファイルは、以下で概説するとおり、入力、出力、フィルターの3つの主要セクションで構成されます。</p>
                                                <h2>入力</h2>
                                                <p>このセクションはBlue Prismデータベースの設定に基づき、Blue Prismによって自動生成されます。処理のためにデータゲートウェイエンジンにイベントが投入される方法を決定します。次の例では、それらはBlue PrismデータベースのBPADataPipelineInputテーブルから取得されています。</p>
                                                <p class="code_sample">input {</p>
                                                <p class="code_sample">jdbc {</p>
                                                <p class="code_sample">jdbc_driver_library =&gt; "..\sqljdbc_4.2\enu\jre8\sqljdbc42.jar"</p>
                                                <p class="code_sample">jdbc_connection_string =&gt; "jdbc:sqlserver://SQL_SERVER_INSTANCE:1433;databaseName=BP_DATABASE;"</p>
                                                <p class="code_sample">jdbc_driver_class =&gt; "com.microsoft.sqlserver.jdbc.SQLServerDriver"</p>
                                                <p class="code_sample">jdbc_user =&gt; "&lt;%Data Gateways BP Database SQL User.username%&gt;"</p>
                                                <p class="code_sample">jdbc_password =&gt; "&lt;%Data Gateways BP Database SQL User.password%&gt;"</p>
                                                <p class="code_sample">statement =&gt; "delete top(3000)from BPADataPipelineInput with (rowlock, readpast) output deleted.eventdata"</p>
                                                <p class="code_sample">schedule =&gt; "*/3* * * * *"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>入力の次のエリアは、必要な設定に合わせて適宜編集できます。</p>
                                                <p> </p>
                                                <p><span class="code_sample">`schedule =&gt; "*/3* * * * *"`</span>
                                                </p>
                                                <p>これにより、BPADataPipelineInputテーブルからデータをリクエストするSQLクエリを実行する頻度が決まります。3秒ごとのデフォルト値は、「<span class="code_sample">3</span>」を必要な値に置き換えることによって更新できます。</p>
                                                <p> </p>
                                                <p class="code_sample">`statement =&gt; "delete top(3000)from BPADataPipelineInput with (rowlock, readpast) output deleted.eventdata"`</p>
                                                <p>このSQLステートメントは、Blue Prismデータベースに対して実行され、BPADataPipelineInputテーブルからイベントを抽出します。この値は、BPADatapipelineInputテーブルから間隔ごとに抽出される行の最大数をコントロールします。デフォルト値は3,000ですが、適宜変更できます。</p>
                                                <h2 class="pagebreak">フィルター</h2>
                                                <p>フィルターはイベントの中間処理を実行するために使用できます。中間処理には、データを出力に送信する前にイベントの特定フィールドを追加、削除、変更するなどのアクションがあります。たとえば、セッションログのAttributeXMLフィールドを削除します。</p>
                                                <p>利用可能なすべてのフィルタープラグインの一覧はこちらを参照してください。<a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html">https://www.elastic.co/guide/en/logstash/current/filter-plugins.html</a></p>
                                                <p>デフォルトでは、Blue Prismによって生成される構成にフィルターが1つ含まれます。</p>
                                                <p class="code_sample">filter{</p>
                                                <p class="code_sample">json {</p>
                                                <p class="code_sample">source =&gt; "eventdata"</p>
                                                <p class="code_sample">target =&gt; "event"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>デフォルトでは、構成にJSONファイル用のフィルターが1つ含まれます。これは、構成済みデータ型（セッションログ、ダッシュボードなど）を含むJSON文字列を解析および展開して、構成ファイルでコンテンツをアクセス可能にするために使用されます。</p>
                                                <p>このセクションを編集して、フィルターを追加および削除できますが、デフォルトのJSONフィルターは削除も修正もしないでください。</p>
                                                <h2>出力</h2>
                                                <p>出力によってイベントの送信先が決まります。［データゲートウェイ］ウィザードを使用して出力が構成された場合、ここに含められます。処理される各イベントは構成に一覧表示されるすべての出力に送信されます。</p>
                                                <p class="code_sample">output {</p>
                                                <p class="code_sample">file {</p>
                                                <p class="code_sample">path =&gt; "C:\data.txt"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample"> </p>
                                                <p class="code_sample">csv {</p>
                                                <p class="code_sample">path =&gt; "C:\data.csv"</p>
                                                <p class="code_sample">}</p>
                                                <p class="code_sample">}</p>
                                                <p>上の例では、.txtファイルと.csvファイルでの出力が指定されています。データゲートウェイシステムに送信される各イベントは、C:\data.txt にテキストファイル形式で書き込まれます。また、C:\data.csvにもcsvファイル形式で書き込まれます。</p>
                                                <p>利用可能な出力の一覧は、こちらを参照してください。<a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html">https://www.elastic.co/guide/en/logstash/current/output-plugins.html</a></p>
                                                <p> </p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section><a data-close="true"></a>
                </div>
            </div>
        </div>
    </body>
</html>